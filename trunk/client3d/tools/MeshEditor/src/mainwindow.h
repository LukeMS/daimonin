// generated by Fast Light User Interface Designer (fluid) version 1.0106

#ifndef mainwindow_h
#define mainwindow_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Counter.H>

class MainWindow {
public:
  ~MainWindow();
  MainWindow();
  Fl_Double_Window *MWindow;
  Fl_Group *MeshNamePanel;
  Fl_Button *LoadMesh;
private:
  inline void cb_LoadMesh_i(Fl_Button*, void*);
  static void cb_LoadMesh(Fl_Button*, void*);
public:
  Fl_Output *MeshName;
  Fl_Output *SkeletonName;
  Fl_Output *txtMeshNameStatus;
  Fl_Choice *selMeshSpecies;
private:
  inline void cb_selMeshSpecies_i(Fl_Choice*, void*);
  static void cb_selMeshSpecies(Fl_Choice*, void*);
public:
  Fl_Choice *selMeshGender;
  Fl_Choice *selMeshProfession;
  Fl_Button *butRenameMesh;
private:
  inline void cb_butRenameMesh_i(Fl_Button*, void*);
  static void cb_butRenameMesh(Fl_Button*, void*);
public:
  Fl_Group *panelNewAnimName;
  Fl_Choice *selAnimName;
private:
  inline void cb_selAnimName_i(Fl_Choice*, void*);
  static void cb_selAnimName(Fl_Choice*, void*);
public:
  Fl_Counter *countAnimLength;
private:
  inline void cb_countAnimLength_i(Fl_Counter*, void*);
  static void cb_countAnimLength(Fl_Counter*, void*);
public:
  Fl_Output *txtAnimNameStatus;
  Fl_Output *outAnimLen;
  Fl_Output *outAnimNewLen;
  Fl_Choice *selRenameAnim;
private:
  inline void cb_Save_i(Fl_Button*, void*);
  static void cb_Save(Fl_Button*, void*);
public:
  Fl_Button *butRenameAnim;
private:
  inline void cb_butRenameAnim_i(Fl_Button*, void*);
  static void cb_butRenameAnim(Fl_Button*, void*);
public:
  Fl_Group *panelMaterial;
  Fl_Choice *selMaterialName;
private:
  inline void cb_selMaterialName_i(Fl_Choice*, void*);
  static void cb_selMaterialName(Fl_Choice*, void*);
public:
  Fl_Output *txtMaterialNameStatus;
  Fl_Choice *selRenameMaterial;
  Fl_Button *butRenameMaterial;
};
extern MainWindow *gpMainWin;
#endif
