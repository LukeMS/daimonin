<?xml version="1.0" standalone="no" ?>
<!--
######################################################################
# types.xml - This is the defintitions-file for all the different    #
# Daimonin object types and their attributes.                        #
#                                                                    #
# The server code of the Daimonin game is always changing and        #
# evlolving. From time to time, object-attributes change in purpose, #
# or new ones are created.                                           #
# Therefore, it is important that an Editor is flexible and          #
# easy to "upgrade" to handle such new features. That's why the      #
# DaimoninEditor reads the type-definitions from this xml file.      #
#                                                                    #
# If you encounter bugs, typos or missing entrys in the LATEST       #
# VERSION of this file - Don't hesitate to improve it, contact me    #
# and eventually send the improved file to me: <red.blaze@gmx.net>.  #
# I will put it into the "official version" of the DaimoninEditor    #
# and all fellow Daimonin-Map-Makers can benefit from your work!     #
#                                                                    #
# IMPORTANT: Make a backup copy of this file before you start        #
# to modify it!                                                      #
#                                                                    #
# New types must be inserted maintaining the alphabetical order.     #
#                                                                    #
# about the 'type' elements:                                         #
#                                                                    #
# <type number="15" name="Type Name">                                #
# <import_type name="Type Name" />   import attributes of this type  #
# <required>                                                         #
#    list of required attributes to identifying this type            #
# </required>                                                        #
# <ignore>                                                           #
#    list of attributes not to import from default_type              #
# </ignore>                                                          #
# <description><![CDATA[                                             #
#   Description of this type. ]]>                                    #
# </description>                                                     #
# <use><![CDATA[                                                     #
#   How to use this type. ]]>                                        #
# </use>                                                             #
# ... attributes ...                                                 #
# </type>                                                            #
#                                                                    #
# about the 'attribute' type: <attribute ... type="XXX" >            #
#                                                                    #
# bool         - This attribute can only be set to '1' or '0'        #
# int          - This attribute contains a decimal number            #
# float        - This attr. contains a floating point number         #
# string       - This attribute contains a string                    #
# text         - This attribute contains a text ("text" can have     #
#                linebreaks, unlike "string")                        #
# fixed        - This attribute is always set to a fixed 'value'     #
#                (There is no user-input for this attribute)         #
# spell        - This attribute contains a spell. The mapmaker can   #
#                choose spells from a combo box.                     #
# nz_spell     - works just like 'spell', except that the            #
#                spell-value zero is always interpreted as <none>,   #
#                never as "magic bullet"                             #
# bool_special - Like bool, but with customized true/false values    #
# treasurelist - CF treasure list (see "treasures" file)             #
# list_LISTNAME       - list, must be defined as a <list> element    #
# bitmask_BITMASKNAME - bitmask, must be defined as a <bitmask>      #
#                       element                                      #
#                                                                    #
# Created by Andreas Vogl.                                           #
######################################################################
-->
<!DOCTYPE types [
  <!ELEMENT types ((bitmask | list | ignore_list)*, default_type, ignore_list*, type+)>

  <!ELEMENT bitmask (entry*)>
  <!ATTLIST bitmask name CDATA #REQUIRED>

  <!ELEMENT list (entry*)>
  <!ATTLIST list name CDATA #REQUIRED>

  <!ELEMENT entry EMPTY>
  <!ATTLIST entry bit   CDATA #IMPLIED
                  value CDATA #IMPLIED
                  name  CDATA #REQUIRED>
  
  <!ELEMENT ignore_list (attribute* | EMPTY)>
  <!ATTLIST ignore_list name CDATA #REQUIRED>
  
  <!ELEMENT default_type (attribute*)>
  
  <!ELEMENT type (import_type?,required?,ignore?,description?,use?,(section | attribute)*)>
  <!ATTLIST type name   CDATA #REQUIRED
                 number CDATA #REQUIRED>
  
  <!ELEMENT description (#PCDATA)>
  <!ELEMENT use (#PCDATA)>
  
  <!ELEMENT import_type EMPTY>
  <!ATTLIST import_type name CDATA #REQUIRED>
  
  <!ELEMENT required (attribute+)>
  <!ELEMENT ignore (attribute*,ignore_list*)>
  
  <!ELEMENT section (attribute+)>
  <!ATTLIST section name CDATA #REQUIRED>
  
  <!ELEMENT attribute (#PCDATA)>
  <!ATTLIST attribute type       CDATA #IMPLIED
                      arch       CDATA #IMPLIED
                      arch_begin CDATA #IMPLIED
                      arch_end   CDATA #IMPLIED
                      editor     CDATA #IMPLIED
                      value      CDATA #IMPLIED
                      length     CDATA #IMPLIED
                      true       CDATA #IMPLIED
                      false      CDATA #IMPLIED>
]>

<types>

<!--###################### bitmask definitions ######################-->

<bitmask name="material">
  <entry bit="0"  name="Paper" />
  <entry bit="1"  name="Hard Metal" />
  <entry bit="2"  name="Crystal" />
  <entry bit="3"  name="Leather" />
  <entry bit="4"  name="Wood" />
  <entry bit="5"  name="Organics" />
  <entry bit="6"  name="Stone" />
  <entry bit="7"  name="Cloth" />
  <entry bit="8"  name="Magic Material" />
  <entry bit="9"  name="Liquid" />
  <entry bit="10" name="Soft Metal" />
  <entry bit="11" name="Bone" />
  <entry bit="12" name="Ice" />
</bitmask>

<bitmask name="spellpath">
  <entry bit="0" name="Protection" />
  <entry bit="1" name="Fire" />
  <entry bit="2" name="Frost" />
  <entry bit="3" name="Electricity" />
  <entry bit="4" name="Missiles" />
  <entry bit="5" name="Self" />
  <entry bit="6" name="Summoning" />
  <entry bit="7" name="Abjuration" />
  <entry bit="8" name="Restoration" />
  <entry bit="9" name="Detonation" />
  <entry bit="10" name="Mind" />
  <entry bit="11" name="Creation" />
  <entry bit="12" name="Teleportation" />
  <entry bit="13" name="Information" />
  <entry bit="14" name="Transmutation" />
  <entry bit="15" name="Transferrence" />
  <entry bit="16" name="Turning" />
  <entry bit="17" name="Wounding" />
  <entry bit="18" name="Death" />
  <entry bit="19" name="Light" />
</bitmask>

<bitmask name="will_apply">
  <entry bit="0" name="Apply Handles" />
  <entry bit="1" name="Open Chests" />
  <entry bit="2" name="Break Walls" />
  <entry bit="3" name="Open Doors" />
</bitmask>

<bitmask name="pick_up">
  <entry bit="0" name="Nothing" />
  <entry bit="1" name="Wealth" />
  <entry bit="2" name="Food" />
  <entry bit="3" name="Weapons" />
  <entry bit="4" name="Armour" />
  <entry bit="5" name="Inverse" />
  <entry bit="6" name="All" />
</bitmask>

<bitmask name="terrain">
  <entry bit="0" name="Land Surface" />
  <entry bit="1" name="Water Surface" />
  <entry bit="2" name="Under Water" />
  <entry bit="3" name="Fire Surface" />
  <entry bit="4" name="Under Fire" />
  <entry bit="5" name="Cloud Surface" />
</bitmask>

<!--###################### list definitions ######################-->

<list name="language">
  <entry value="0"  name="common" />
  <entry value="1"  name="dwarvish" />
  <entry value="2"  name="ancient dwarvish" />
  <entry value="4"  name="elvish" />
  <entry value="8"  name="high elvish" />
  <entry value="16"  name="drow" />
  <entry value="32"  name="gnomish" />
  <entry value="64"  name="old council" />
  <entry value="128"  name="elder pictograms" />
  <entry value="256"  name="chaotic" />
  <entry value="512" name="evil runic" />
  <entry value="1024" name="runic" />
  <entry value="2048" name="dragonish" />
  <entry value="4096" name="jotun" />
  <entry value="8192" name="high planar" />
  <entry value="16384" name="orc runes" />
</list>

<list name="event">
  <entry value="0" name="no event" />
  <entry value="1" name="apply" />
  <entry value="2" name="attack" />
  <entry value="3" name="death" />
  <entry value="4" name="drop" />
  <entry value="5" name="pickup" />
  <entry value="6" name="say" />
  <entry value="7" name="stop" />
  <entry value="8" name="time" />
  <entry value="9" name="throw" />
  <entry value="10" name="trigger" />
  <entry value="11" name="close" />
  <entry value="12" name="timer" />
  <entry value="13" name="talk" />
</list>

<list name="direction">
  <entry value="0" name="&lt;none&gt;" />
  <entry value="1" name="north" />
  <entry value="2" name="northeast" />
  <entry value="3" name="east" />
  <entry value="4" name="southeast" />
  <entry value="5" name="south" />
  <entry value="6" name="southwest" />
  <entry value="7" name="west" />
  <entry value="8" name="northwest" />
</list>

<list name="mood">
  <entry value="0" name="furious" />
  <entry value="1" name="angry" />
  <entry value="2" name="calm" />
  <entry value="3" name="sleep" />
  <entry value="4" name="charm" />
</list>

<list name="item_race">
  <entry value="0" name="&lt;none&gt;" />
  <entry value="1" name="dwarven" />
  <entry value="2" name="elven" />
  <entry value="3" name="gnomish" />
  <entry value="4" name="drow" />
  <entry value="5" name="orcish" />
  <entry value="6" name="goblin" />
  <entry value="7" name="kobold" />
  <entry value="8" name="giant" />
  <entry value="9" name="tiny" />
  <entry value="10" name="genie" />
  <entry value="11" name="demonish" />
  <entry value="12" name="dragon" />
</list>

<list name="q_trigger">
  <entry value="0" name="normal" />
  <entry value="1" name="kill quest" />
  <entry value="2" name="container quest" />
</list>

<list name="potion_effect">
  <entry value="0" name="&lt;none&gt;" />
  <entry value="65536" name="life restoration" />
  <entry value="1048576" name="improvement" />
</list>

<list name="item_skill">
  <entry value="0" name="&lt;overall level&gt;" />
  <entry value="1" name="agility" />
  <entry value="2" name="personality" />
  <entry value="3" name="mental" />
  <entry value="4" name="physical" />
  <entry value="5" name="magic" />
  <entry value="6" name="wisdom" />
</list>

<list name="weapon_st">
  <entry value="0" name="1 handed impact weapon" />
  <entry value="1" name="1 handed slash weapon" />
  <entry value="2" name="1 handed pierce weapon" />
  <entry value="3" name="1 handed cleave weapon" />
  <entry value="4" name="2 handed impact weapon" />
  <entry value="5" name="2 handed slash weapon" />
  <entry value="6" name="2 handed pierce weapon" />
  <entry value="7" name="2 handed cleave weapon" />
  <entry value="8" name="impact polearm" />
  <entry value="9" name="slash polearm" />
  <entry value="10" name="pierce polearm" />
  <entry value="11" name="cleave polearm" />
</list>

<list name="shootweapon_st">
  <entry value="0" name="bow" />
  <entry value="1" name="crossbow" />
  <entry value="2" name="sling" />
  <entry value="3" name="firearm" />
</list>


<list name="projectile_st">
  <entry value="0"   name="&lt;unknown&gt;" />
  <entry value="1"   name="arrow" />
  <entry value="2"   name="crossbow bolt" />
  <entry value="3"   name="sling stone" />
  <entry value="128" name="throwing impact weapons" />
  <entry value="129" name="throwing slash weapons" />
  <entry value="130" name="throwing pierce weapons" />
  <entry value="131" name="throwing cleave weapons" />
  <entry value="132" name="throwing boulders" />
</list>

<list name="material_real">
  <entry value="0" name="&lt;undefined&gt;" />
  <entry value="1" name="paper: standard paper" />
  <entry value="2" name="paper: parchment" />
  <entry value="65" name="hard metal: iron" />
  <entry value="66" name="hard metal: hard iron" />
  <entry value="67" name="hard metal: steel" />
  <entry value="68" name="hard metal: forged steel" />
  <entry value="69" name="hard metal: dark steel" />
  <entry value="70" name="hard metal: forged dark steel" />
  <entry value="71" name="hard metal: silksteel" />
  <entry value="72" name="hard metal: forged silksteel" />
  <entry value="129" name="crystal: glass" />
  <entry value="130" name="crystal: zircon" />
  <entry value="131" name="crystal: pearl" />
  <entry value="132" name="crystal: emerald" />
  <entry value="133" name="crystal: sapphire" />
  <entry value="134" name="crystal: ruby" />
  <entry value="135" name="crystal: diamond" />
  <entry value="193" name="leather: soft leather" />
  <entry value="194" name="leather: hardened leather" />
  <entry value="195" name="leather: ogre leather" />
  <entry value="196" name="leather: giant leather" />
  <entry value="197" name="leather: dark leather" />
  <entry value="198" name="leather: drow leather" />
  <entry value="199" name="leather: demon leather" />
  <entry value="200" name="leather: dragon leather" />
  <entry value="257" name="wood: polished" />
  <entry value="258" name="wood: oak wood" />
  <entry value="321" name="organic: animal organics" />
  <entry value="322" name="organic: dragon organics" />
  <entry value="385" name="stone: flint" />
  <entry value="449" name="cloth: wool" />
  <entry value="450" name="cloth: linen" />
  <entry value="451" name="cloth: silk" />
  <entry value="452" name="cloth: elven hair" />
  <entry value="513" name="adamant: magic silk" />
  <entry value="514" name="adamant: mithril" />
  <entry value="515" name="adamant: adamant" />
  <entry value="577" name="liquid: (default liquid)" />
  <entry value="641" name="soft metal: tin" />
  <entry value="642" name="soft metal: brass" />
  <entry value="643" name="soft metal: copper" />
  <entry value="644" name="soft metal: bronze" />
  <entry value="645" name="soft metal: silver" />
  <entry value="646" name="soft metal: gold" />
  <entry value="647" name="soft metal: platinum" />
  <entry value="705" name="bone: animal bone" />
  <entry value="706" name="bone: human bone" />
  <entry value="707" name="bone: elven bone" />
  <entry value="708" name="bone: dwarven bone" />
  <entry value="769" name="ice: (default ice)" />
</list>

<list name="attack_type">

  <entry value="0" name="&lt;standard&gt;" />

  <entry value="1" name="Distance attack" />

  <entry value="2" name="Run away" />

  <entry value="3" name="Hit and run" />

  <entry value="4" name="Wait and hit" />

  <entry value="5" name="Always run" />

  <entry value="6" name="Wait and hit from distance" />

  <entry value="7" name="Keep distance" />

</list>



<list name="move_type">

  <entry value="0" name="&lt;standard&gt;" />

  <entry value="16" name="Pet movement" />

  <entry value="32" name="Small circle" />

  <entry value="48" name="Large circle" />

  <entry value="64" name="Short horiz pace" />

  <entry value="80" name="Long horiz pace" />

  <entry value="96" name="Random direction" />

  <entry value="112" name="Random walk" />

  <entry value="128" name="Short vert pace" />

  <entry value="144" name="Long vert pace" />

  <entry value="176" name="Use waypoints" />

</list> 

<!--###################### default attributes ######################-->

<!--
  The attributes of the default_type get added to all other types by default.
  Every type can have an 'ignore' element however, which is used to specify
  default attributes *not* to inherit.
  -->
<default_type>
  <attribute arch="name" editor="name" type="string">
    This is the name of the object, displayed to the player.
  </attribute>
  <attribute arch="title" editor="title" type="string">
    This is the object's title. Once an object is identified the title is
    attached to the name. Typical titels are "of mostrai", "of xray vision" etc.
  </attribute>
  <attribute arch="sub_type" editor="sub type" type="int">
    This important value is used to define "sub types" for objects of the same object
    type. Examples are weapons, which are all from type WEAPON but can be different sub types
    like slash type, cleave type, 1hand, polearms and so on. This value goes to the client
    too. WARNING: not all objects have a sub_type and changing it without care can corrupt
    server AND/OR the clients. Normally this is not a subject to change outside arch definition.
  </attribute>
  <attribute arch="layer" editor="layer" type="int">
    This is the map layer, the object will put in. The selected layer will effect where and
    how this object is shown on client side. Layer 0 is reserved for sys_object type objects
    and will NEVER be shown on client side. Layer 1 is for floor objects and Layer 2 for
    floor masks. Layer 3 and 4 are for items on the ground. Layer 5 is for walls, layer 
    6 is reversed for players and layer 7 is for spell effects and high flying/visible
    objects like arrows.
  </attribute>
  <attribute arch="face" editor="image" type="string">
    The image-name defines what image is displayed for this object
    in-game.
  </attribute>
  <attribute arch="animation" editor="animation" type="string">
    The animation-name defines what animation is displayed for this object
    in-game. Note that a set animation will overrule the face.
    Changing animation is easy - adding or deleting a animation is more
    difficult and should be done in the text parse window and not in this
    dialog.
  </attribute>
  <attribute arch="anim_speed" editor="anim speed" type="int">
  How fast to play this animation.
  </attribute>
  <attribute arch="is_animated" editor="is animated" type="bool">
  If set, the object is animated and animation is used.
  Note: Some special objects will use a animation NOT as animation but
  as frame list. Examples are buttons (which frames are changed by the
  object status of the button). IS_TURNABLE will enable direction turning
  for some object types. These flags are all "system" related. Be VERY
  careful to change them.
  </attribute>
  <attribute arch="speed_left" editor="start speed" type="float">
    NOTE: without speed != 0, this value is not used. Only use
    for objects with speed (active objects)!
    When a active object (with 'speed' != 0) is put on a map, this 
    value is used as counter. Every 'tick', 'speed' (if negative,
    value is turned positive before) is added to this value - 
    if it is bigger 0 the object 'will do something' and this counter is 
    decreased with -1.0 .
    As default a normal object will put on the map with start speed 0. 
    It 'will do something' with the next coming 'tick'.
    Setting this value to -1.0 will put it on map but wait one full 
    'lifetime' round until it does something. 
    A 'fire object' should be put on map with start speed 0 - it should
    try to burn something in the moment it comes in the game. A bomb for
    example should be put with speed -1.0 on the map - it will stay then
    on map until the bomb becomes active - it explode.
    The 'lifetime' round is determinated by speed. A speed of 1.0 will
    give a 'lifetime' round of 1 tick - a speed of 0.01 100 ticks.
    Special case: A negative speed value will add to start speed a random
    value between 0.0 to 0.9 . So, a speed of -0.1 with a start speed of
    -1.0 will result in speed 0.1 and start speed between -1.0 and -0.1. 
    This is useful to lets a row of same objects act in different tick ranges.
  </attribute>
  <attribute arch="nrof" editor="number" type="int">
    This value determines the number of objects in one stack (for example:
    100 goldcoins =&gt; "number = 100"). You should set this at least to one, for
    any pickable object - otherwise it won't be mergeable into a stack.
  </attribute>
  <attribute arch="weight" editor="weight" type="int">
    This value defines the object's weight in gramm (1000g is 1kg). Objects with
    zero weight are not pickable for players. Still, set the "non-pickable"-flag
    for explicitly non-pickable objects (hey, this is opensource.. you
    never know ;) ).
  </attribute>
  <attribute arch="value" editor="value" type="int">
    Adds a certain value to the object: It will be worth that many times the
    default value from it's archetype (E.g. "value = 3" means three times
    worth the default value). Value for buying/selling will be
    further modified by various factors. Hence, testing values in-game is
    usually inevitable.
  </attribute>
  <attribute arch="glow_radius" editor="glow radius" type="int">
    If &lt;glow radius&gt; is set to a value greater zero, the object
    appears lit up on dark maps. &lt;glow radius&gt; can be a value
    between 0 and 4, the higher, the more light does the object emmit.
  </attribute>
  <attribute arch="material_real" editor="material" type="list_material_real">
    The material defines the exact material of which the object
    consists. It is much more specific than &lt;material class&gt;,
    however only one material can be selected, not multiple.
    &lt;material&gt; is not required to be set, it can be left 'undefined'.
  </attribute>
  <attribute arch="material" editor="material class" type="bitmask_material">
    This bitmask-value informs the player of which basic material(s)
    the object consists. Material class does also affect how likely the
    object can be destroyed by hazardous spell-effects.
  </attribute>
  <attribute arch="no_pick" editor="non-pickable" type="bool">
    If set, the object cannot be picked up (Neither by players nor monsters).
  </attribute>
  <attribute arch="player_only" editor="player only" type="bool">
    If set, only players can enter the tile the object with this flag is in too.
  </attribute>
  <attribute arch="is_ethereal" editor="ethereal (pass thru)" type="bool">
    If no_pass (blocking passage) is set for a object, no one can pass
    the tile is it in (true for walls or closed doors). But if this
    flag is set, the monster can pass through all no_pass objects
    which has pass_thru set. 
    This is used for example from ghosts who moves through doors.
    Be careful! This is a extrem powerful ability! Use it in context!
    Orcs who moves without reason through walls are not senseful.
    NOTE: ethereal has special abilities. It has the same effect
    like can_pass_thru flag but its special. Its like the difference
    between a being make out of dust (which is still kind of matter)
    and a real ghost which is pure energy.
  </attribute>
  <attribute arch="pass_ethereal" editor="etheral can pass" type="bool">
    If no_pass (blocking passage) is set, no one can pass. If this
    flag is set too, etheral flaged objects and CAN_PASS_THRU flag can pass.
  </attribute>
  <attribute arch="can_pass_thru" editor="pass thru blocked" type="bool">
    If no_pass (blocking passage) is set for a object, no one can pass
    the tile is it in (true for walls or closed doors). But if this
    flag is set, the monster can pass through all no_pass objects
    which has pass_thru set. 
    This is used for example from ghosts who moves through doors.
    Be careful! This is a extrem powerful ability! Use it in context!
    Orcs who moves without reason through walls are not senseful.
    NOTE: can_pass_thru is a sub-effect from ethereality. See below.
  </attribute>
  <attribute arch="pass_thru" editor="can pass (no ethereal)" type="bool">
    If no_pass (blocking passage) is set, no one can pass. If this
    flag is set too, objects with the CAN_PASS_THRU flag can pass.
    Ethereal can't pass this as long pass_ethereal is not set!
  </attribute>
  <attribute arch="is_invisible" editor="invisible" type="bool">
    Generally makes the object invisible. Invisible objects will be shown
    if the player has "see invisible" (from spell or item). To hide objects
    totally from detection, use "sys_object".
  </attribute>
  <attribute arch="sys_object" editor="inv. system object" type="bool">
    Marks an object as system object. System objects are ALWAYS invisible and
    hidden from the players. They can't be seen or detected and never will send
    any information about them to the players client. System objects are put
    in layer 0 under the floor tiles.
  </attribute>
  <attribute arch="no_teleport" editor="no teleport" type="bool">
    Marks an object as no teleport object. A no teleport object can't be
    teleported by teleporter except the object is inside the inventory of 
    another object which can be teleported.
  </attribute>
  <attribute arch="blocksview" editor="block view" type="bool">
    If an item is set to block view, players (and monsters) cannot
    see byond it unless they cross it or manage to stand ontop.
  </attribute>
  <attribute arch="one_drop" editor="one drop" type="bool">
   In the moment a player gets or apply this items, it will
   flaged as godgiven and vanish when droped to the ground.
  </attribute>
  <attribute arch="quest_item" editor="quest item" type="bool">
    Item is a quest item. This item will be inserted in the 
    quest container when a quest is finished and for that player
    this item will never drop again.
  </attribute>
  <attribute arch="inv_locked" editor="inv or quest lock" type="bool">
    Double used flag. Item is locked when in player inventory (can't be
    dropped). It also marks closed (locked) quest info and items.
  </attribute>
  <attribute arch="identified" editor="identified" type="bool">
    If an item is identified, the player has
    full knowledge about it.
  </attribute>
  <attribute arch="can_reflect_spell" editor="can reflect spells" type="bool">
  object CAN reflect spells. See reflect spells.
  </attribute>
  <attribute arch="can_reflect_missile" editor="can reflect missiles" type="bool">
   object CAN reflect missiles. See reflect missiles.
  </attribute>
  <attribute arch="is_magical" editor="magical" type="bool">
    If set, this object count as "magical". Detect magic or
    identify will show this flag and the player will see a small
    M in the client inventory part.
  </attribute>
  <attribute arch="cursed" editor="cursed" type="bool">
    The item is cursed. This object can't be removed when
    wielded or worn (without uncurse it). Remove curse will
    remove this flag.
  </attribute>
  <attribute arch="cursed_perm" editor="permanent cursed" type="bool">
    The item is permanent cursed. If this flag set, applying 
    or unapplying will set "cursed 1" again. This flag can't be
    removed by remove curse.
  </attribute>
  <attribute arch="damned" editor="damned" type="bool">
    Stronger form of curse. Item can't be removed when
    wielded or worn. Remove damnation will remove this flag.
  </attribute>
  <attribute arch="damned_perm" editor="permanent damned" type="bool">
    The item is permanent damned. If this flag set, applying 
    or unapplying will set "damned 1" again. This flag can't be
    removed by remove damnation.
  </attribute>
  <attribute arch="no_magic" editor="no spells" type="bool">
    If enabled, it is impossible for players to use (wizard-)
    spells on that spot.
  </attribute>
  <attribute arch="no_cleric" editor="no prayers" type="bool">
    If enabled, it is impossible for players to use (cleric-)
    prayers on that spot.
  </attribute>
  <attribute arch="unpaid" editor="unpaid" type="bool">
    An &lt;unpaid&gt; item cannot be used unless a player carried it over
    a shop mat, paying the demanded price. Setting this flag makes sense
    only for pickable items inside shops.
  </attribute>
  <attribute arch="is_turnable" editor="is turnable" type="bool">
  System flag. Object can be turned to the directions.
  </attribute>
</default_type>

<!-- This ignorelist is for all system objects which are non pickable
     and invisible. They don't interact with players at all. -->
<ignore_list name="system_object">
  <attribute arch="value" />
  <attribute arch="nrof" />
  <attribute arch="sub_type" />
  <attribute arch="weight" />
  <attribute arch="material" />
  <attribute arch="material_real" />
  <attribute arch="no_pick" />
  <attribute arch="unpaid" />
  <attribute arch="title" />
  <attribute arch="glow_radius" />
  <attribute arch="identified" />
  <attribute arch="blocksview" />
  <attribute arch="is_invisible" />
</ignore_list>

<!-- This ignorelist is for non-pickable objects. They can be seen by
     the player, but don't have values like material or weight. -->
<ignore_list name="non_pickable">
  <attribute arch="value" />
  <attribute arch="nrof" />
  <attribute arch="weight" />
  <attribute arch="material" />
  <attribute arch="material_real" />
  <attribute arch="no_pick" />
  <attribute arch="unpaid" />
  <attribute arch="title" />
  <attribute arch="identified" />
</ignore_list>

<!-- This ignorelist is for all objects. We handle here some very
     special stuff. Note: This values has the same meaning for *ALL*
     object type - they are handled always in the same way.
     NOTE: "direction" is hard coded excluded from syntax check
     in the ArchObject.java module  -->
<ignore_list name="default_setting">
  <attribute arch="xxxx" />
</ignore_list>

<!--####################################################################-->
<type number="126" name="AI Object">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    AI objects define how a mob behaves in the game. By select and fine-tuning low-level 
    behaviours many different kinds of high-level behaviours can be achieved.
    For now it may be a good idea to start out with a predefined AI and change some
    of the parameters.
    <br> 
    We aim to create a better behaviour editor in the future. Contact the devteam if
    you are interested in implementing it.
    ]]>
  </description>
  <attribute arch_begin="msg" arch_end="endmsg" editor="Behaviour list" type="text">
    This is where behaviours are defined. A behaviour belongs to one of the predefined classes,
    and may take parameters. 
  </attribute>
</type>

<!--####################################################################-->
<type number="79" name="Misc Object">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    MISC_OBJECT are objects without special features, using the base setting of
    the game engine. This includes many decorative objects like statues or rocks. ]]>
  </description>
  <attribute arch="no_pass" editor="blocking passage" type="bool">
    If set, the object cannot be passed by players nor monsters.
  </attribute>
  <attribute arch="can_roll" editor="moveable" type="bool">
    If set, the object is able to "roll", so it can be pushed around.
    This setting is used for boulders and barrels.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the object.
  </attribute>
</type>

<!--####################################################################-->
<type number="78" name="Light Source">
  <ignore>
    <attribute arch="speed_left" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
	Light Sources are system objects which used as a light/darkness set point. ]]>
  </description>
</type>

<!--####################################################################-->
<type number="74" name="Applyable Light">
  <ignore>
    <attribute arch="speed_left" />
    <attribute arch="glow_radius" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
	A applyable light source for a player or monster. It has a 3 way apply chain:
      First time light the object, second time put it in the hand, 3rd time unapply
      and unlighten it. This will allow to drop a light enlighted or not to the 
      ground.]]>
  </description>
  <attribute arch="last_sp" editor="glow radius" type="int">
    If &lt;glow radius&gt; is set to a value not zero, the object
    appears lit up on dark maps. &lt;glow radius&gt; As higher as 
    more light does the object emmit. The current senseful max value is 9.
    If the value is 0, the light can't be lighten and can't be applied.
    If the value is negative, this object will invoke darkness!
    A value of 0 means, that this light can't be lighten. This will
    be true for permanent burned out lights like torches.
  </attribute>
  <attribute arch="glow_radius" editor="light on" type="int">
   Applyable light can be turned on or off. The value above will 
   determinate how and then its copied to this value. If this 
   value is 0 (default) the light is off - every other value
   means on! This value is normally autoset when applied but can
   be set by map makers to simulate light on.
  </attribute>
  <attribute arch="maxhp" editor="max. ticks of light" type="int">
  'Max. Ticks of Light' defines the maximal value of 'Ticks of Light'.
  This is normally used from refilling light sources.
  </attribute>
  <attribute arch="food" editor="ticks of light" type="int">
  'Ticks of Light' defines how long the object will give light
  before it wear out. Some lights can be refilled, some not.
  </attribute>
  <attribute arch="other_arch" editor="wear out change" type="string">
  If a light source wear out, it checks this value. If it set, the
  object change to this new object. This happens with torches - after
  they wear out, they change to burned out torches which can't be
  relight or refilled.
  </attribute>
  <attribute arch="last_eat" editor="wear out flag" type="bool">
  If set this light will wear out. If not set, it is permanent light and
  'Ticks of Light' counter is ignored.
  </attribute>
</type>

<!--####################################################################-->
<type number="82" name="Light Refill Object">
  <ignore>
    <attribute arch="speed_left" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
	Light Sources are system objects which u]]>
  </description>
  <attribute arch="race" editor="light type" type="string">
  Defines the light type which can we refill with this refill
  object. 
  </attribute>
  <attribute arch="food" editor="refill value" type="int">
  How much ticks can be refilled to a light source of the
  defined light type. If we can refill all in the light, this
  object is deleted. If we can't put all in the light, the
  value is decreased by the number we filled in.
  </attribute>
</type>

<!--####################################################################-->
<type number="0" name="Misc">
  <required>
    <!-- this is a special case: The "misc" type with type number 0 is
         the fallback for all types which don't match any other defined types.
         The required attribute "misc x" prevents that it gets confused with
         other types like "monster & npc" which also have type number 0. -->
    <attribute arch="misc" value="x" />
  </required>
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
	WARNING: Type 0 is a invalid type setting in Daimonin and 
      will cause a warning for the server. ]]>
  </description>
  <attribute arch="no_pass" editor="blocking passage" type="bool">
    If set, the object cannot be passed by players nor monsters.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the object.
  </attribute>
</type>

<!--####################################################################-->
<type number="110" name="Ability">
  <ignore>
    <attribute arch="speed_left" />
    <attribute arch="cursed" />
    <attribute arch="damned" />
    <attribute arch="is_magical" />
    <ignore_list name="system_object" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Abilities are to be put in a monster's inventory. They grant monsters the
    knowledge to cast spells. Spells from abilities are usually magical in
    nature, thus adding magic to the spell-damage they produce. If not marked
    as magical, the ability as natural effect can't be disenchanted or 
    blocked by dispel magic.
    <br><br>
    A particularly nice feature of abilities is that they can hold two
    spells: One for short range- and one for long range use.
    <br><br>
    You should know that spellcasting monsters receive abilities via
    &lt;treasurelist&gt;.  ]]>
  </description>
  <use><![CDATA[
    If you want to create "customized" spellcasting monsters, you
    should use abilities (rather than spellbooks/wands or something).
    The long/short-range spell feature can make boss-monsters more
    interesting and challenging.
    <br><br>
    You should keep in mind that magic abilities allow players
    to get better resistance. You can turn off the magic part to
    make the spells more dangerous. However, this really shouldn't
    be neccessary unless you work on very high level maps.
    And what fun is a magic resistance cloak when it has no effect? ]]>
  </use>
  <attribute arch="no_drop" value="1" type="fixed" />
  <attribute arch="sp" editor="short range spell" type="spell">
    The monster will use the specified &lt;short range spell&gt;
    when the player is within 6-square radius (of the
    monster's head).
  </attribute>
  <attribute arch="hp" editor="long range spell" type="nz_spell">
    The monster will use the specified &lt;long range spell&gt;
    when the player is at least 6 squares away (from the
    monster's head).

    Setting a &lt;long range spell&gt; is optional. If unset, the
    &lt;short range spell&gt; gets used all the time.
  </attribute>
  <attribute arch="maxsp" editor="importance" type="int">
    Sometimes you'll want a monster to use one ability more than others.
    To achieve this, set the &lt;importance&gt; to a value greater than
    one. Abilities with this value zero/unset are counted to be of
    &lt;importance&gt; one.

    Example: A monster with "small fireball" of &lt;importance&gt; 3 and
    "paralyze" of &lt;importance&gt; 1 will averagely cast three out of four
    times the "small fireball".
  </attribute>
  <attribute arch="last_grace" editor="casting delay" type="int">
  The casting delay this spell/ability invoke to a monster using it.
  This is cumulative added to the monster default casting delay.
  </attribute>
  <attribute arch="is_magical" editor="is magical" type="bool">
    This flag specifies wether the ability &lt;is magical&gt; in nature.
    If enabled, all spells produced by this ability will have magic
    attacktype added to the usual attacktypes.

    This should always be set for spell-like abilities. "Natural"
    abilities like a dragon's firebreath are an exception.
    Note that non-magical abilities are more dangerous because
    magic resistance does not protect from those.
  </attribute>
</type>

<!--####################################################################-->
<type number="18" name="Altar">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When a player puts a defined number of certain items on the altar,
    then either a spell is casted (on the player) or a connector is
    triggered. If the latter is the case, the altar works only once.
    Either way, the sacrificed item dissapears. ]]>
  </description>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="match item name" type="string">
    This string specifies the item that must be put on the altar to
    activate it. It can either be the name of an archetype, or directly
    the name of an object. Yet, titles are not recognized by altars.
    Remember to put a note somewhere, telling the player what he is
    expected to drop on the altar. (Often this is put in the altar's
    name: E.g. "drop 100 platinums")
  </attribute>
  <attribute arch="food" editor="drop amount" type="int">
    The drop amount specifies the amount of items (specified
    in &lt;match item name&gt;) that must be dropped to activate the altar. 

    If &lt;match item name&gt; is set to "money", then the value of the
    sacrificed money must be equal to &lt;drop amount&gt; (ie, if food=200, then
    200 silver, 20 gold, or 4 platinum will all work.) 

    Note that the maximum possible for &lt;drop amount&gt; is 32767.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    If a connection value is set, the altar will trigger all objects
    with the same value, when activated. This will only work once.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch="sp" editor="spell" type="spell">
    When activated, the selected &lt;spell&gt; will be casted (once, on the
    player). This should work for any given spell. The altar will work
    infinitly in this way. Don't set both &lt;spell&gt; and &lt;connection&gt; for
    one altar.
  </attribute>
  <attribute arch="level" editor="spell level" type="int">
    Set the power level of the spell. This can be from 1 to 110.
  </attribute>
  <attribute arch="last_sp" editor="cast to direction" type="list_direction">
    The spell will be casted in this direction. Note, that if the altar
    should cast a heal spell on the player, this must be 
    direction 0 &lt;none&gt;. For other spells like fireball,
    it should be set a valid point of the compass direction.
  </attribute>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch_begin="msg" arch_end="endmsg" editor="message" type="text">
    This text will be displayed to the player
    in the exact moment when the altar is activated.
  </attribute>
</type>

<!--####################################################################-->
<type number="31" name="Altar Trigger">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Altar_triggers work pretty much like normal altars
    (drop sacrifice -&gt; connection activated), except for the fact that
    they reset after usage. Hence, altar_triggers can be used infinitly. ]]>
  </description>
  <use><![CDATA[
    Altar_triggers are very useful if you want to charge a price for...
    <UL>
    <LI> ...an item. -&gt; Connect the altar_trigger (set "last_sp 1") to a creator.
    <LI> ...opening a gate. -&gt; Connect the altar_trigger (set "last_sp 0") to the gate. 
    <LI> ...information. -&gt; Connect the altar_trigger (set "last_sp 1") to a magic_mouth.
    </UL>
    The big advantage over normal altars is the infinite usability
    of altar_triggers! If there are ten players on one server, they're
    quite grateful if things work more than once. =) ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="match item name" type="string">
    This string specifies the item that must be put on the altar to
    activate it. It can either be the name of an archetype, or directly
    the name of an object. Yet, titles are not recognized by altars.
    Remember to put a note somewhere, telling the player what he is
    expected to drop on the altar. (Often this is put in the altar's
    name: E.g. "drop 100 platinums")
  </attribute>
  <attribute arch="food" editor="drop amount" type="int">
    The drop amount specifies the amount of items (specified
    in &lt;match item name&gt;) that must be dropped to activate the altar. 

    If &lt;match item name&gt; is set to "money", then the value of the
    sacrificed money must be equal to &lt;drop amount&gt; (ie, if food=200, then
    200 silver, 20 gold, or 4 platinum will all work.) 

    Note that the maximum possible for &lt;drop amount&gt; is 32767.
  </attribute>
  <attribute arch="exp" editor="reset time" type="int">
    Being activated, the altar will reset after &lt;reset time&gt; ticks.
    After reset, the altar is ready to be activated once again.
    The default &lt;reset time&gt; is 30.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    If a connection value is set, the altar will trigger all objects
    with the same value, when activated. This will only work once.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch="last_sp" editor="ignore reset" type="bool">
    If this attribute is enabled, the altar_trigger won't push the
    connected value by altar reset. Only ONCE by dropping the sacrifice.
    This is typically used when the altar is connected to a creator,
    e.g. for selling tickets. 

    If this attribute is disabled (default), the altar_trigger
    will push the connected value TWICE per sacrifice: First by
    dropping sacrifice, second by reset. This mode is typically
    used for altars being connected to gates, resulting in the
    gate being opened and closed again.
  </attribute>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch_begin="msg" arch_end="endmsg" editor="message" type="text">
    This text will be displayed to the player
    in the exact moment when the altar is activated.
  </attribute>
</type>

<!--####################################################################-->
<type number="39" name="Amulet">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing an amulet, the object's stats will directly be inherited to
    the player. Amulets are usually meant for protection and defense. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="ac" editor="armour class" type="int">
    This value defines the amount of armour-class bonus for wearing
    this item. &lt;Armour class&gt; lessens the chance of being hit. Lower
    values are better. It should usually be set only for armour-like equipment.
  </attribute>
  <attribute arch="wc" editor="weapon class" type="int">
    The &lt;weapon class&gt; value adds to the overall weapon class of the wielder's
    melee attacks. Weapon class improves the chance of hitting the opponent.
    Weapon class is the "counterpiece" of &lt;armour class&gt;. It should usually
    be set only for weapon-like items. Lower values are better.
  </attribute>
  <attribute arch="item_level" editor="required level" type="int">
    If &lt;required level&gt; is set to a value greater zero, players cannot
    wear this item unless they meet this level in the skill cathegory
    specified by &lt;level required in&gt;.

    For example: &lt;required level&gt; = 15, &lt;level required in&gt; = physical
    means the player cannot wear the item unless he is equal or greater
    level 15 in the physical skill cathegory.
  </attribute>
  <attribute arch="item_skill" editor="level required in" type="list_item_skill">
    This attribute specifies in which skill cathegory the player
    must meet the &lt;required level&gt; in order to wear the item.
    It is meaningless when &lt;required level&gt; is zero/unset.

    For example: &lt;required level&gt; = 15, &lt;level required in&gt; = physical
    means the player cannot wear the item unless he is equal or greater
    level 15 in the physical skill cathegory.
  </attribute>
  <attribute arch="lifesave" editor="save life" type="bool">
    An item with this flag enabled will save the players life
    for one time: When the player is wearing this item and his
    healthpoints reach zero, the item dissapears, replenishing
    half of the player's health.

    An item with &lt;save life&gt; should not have
    any decent additional bonuses!
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch="applied" editor="is applied" type="bool">
    If you put this item into the inventory of a monster, and
    you want the monster to use/wear the item - you must set
    &lt;is applied&gt;.
    Enabling this flag doesn't make any sense if the item
    is NOT in a monster's inventory.
  </attribute>
<section name="protect">
  <attribute arch="protect_impact" editor="shield impact %" length="15" type="int">
    This adds resistance against physical damage from clubs, maces
    or a simple fist. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_slash" editor="shield slash %" length="15" type="int">
    This adds resistance against physical damage from swords and claws.
    The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_cleave" editor="shield cleave %" length="15" type="int">
    This adds resistance against physical damage from axes and
    halbards. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_pierce" editor="shield pierce %" length="15" type="int">
    This adds resistance against physical damage from arrows and
    rapier weapons. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_weapon_magic" editor="shield w.magic %" length="15" type="int">
    This adds resistance against (physical) weapon magic damage.
    Attention! Weaponmagic is a very powerful attacktype which
    is derived from the power of artifact weapons.
    This kind of resistance must not be easy to get.
    The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_fire" editor="shield fire %" length="15" type="int">
  </attribute>
  <attribute arch="protect_cold" editor="shield cold %" length="15" type="int">
  </attribute>
  <attribute arch="protect_electricity" editor="shield electricity %" length="15" type="int">
  </attribute>
  <attribute arch="protect_poison" editor="shield poison %" length="15" type="int">
  </attribute>
  <attribute arch="protect_acid" editor="shield acid %" length="15" type="int">
  </attribute>
  <attribute arch="protect_magic" editor="shield magic %" length="15" type="int">
  </attribute>
  <attribute arch="protect_mind" editor="shield mind %" length="15" type="int">
  </attribute>
  <attribute arch="protect_body" editor="shield body %" length="15" type="int">
  </attribute>
  <attribute arch="protect_psionic" editor="shield psionic %" length="15" type="int">
  </attribute>
  <attribute arch="protect_force" editor="shield force %" length="15" type="int">
  </attribute>
  <attribute arch="protect_nether" editor="shield nether %" length="15" type="int">
  </attribute>
  <attribute arch="protect_chaos" editor="shield chaos %" length="15" type="int">
  </attribute>
  <attribute arch="protect_death" editor="shield death %" length="15" type="int">
  </attribute>
  <attribute arch="protect_chaos" editor="shield chaos %" length="15" type="int">
  </attribute>
  <attribute arch="protect_holy" editor="shield holy %" length="15" type="int">
  </attribute>
  <attribute arch="protect_corruption" editor="shield corruption %" length="15" type="int">
  </attribute>         	
</section>

<section name="stats">
  <attribute arch="Str" editor="strength" type="int">
    The player's strentgh will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise/fall by the given value while
    wearing this piece of equipment.
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
</section>

<section name="quality">
  <attribute arch="item_quality" editor="max. quality %" type="int">
    Every item has a natural material quality, ranging from 0 top 100.
    This is a % factor, which affects the base stats of the item.
    However, &lt;max. quality&gt; does not represent the actual state of the
    item but the best &lt;actual quality&gt; value this item can ever have.

    Basic quality is 80%. If the item is made of cheap material, the
    value may be lower. If made of very fine material it may be 100%.
  </attribute>
  <attribute arch="item_condition" editor="actual quality" type="int">
    This is the REAL quality status of item - showing how much it is
    used up. Every time the item is overused or damaged, the
    &lt;actual quality&gt; is lowered. The value can range from 0 (destroyed) to 
    the maximum of &lt;max. quality&gt; (It can never get higher than that).
    The quality value represents a % value affecting the item's stats:
    Lower quality than 100% means effects like protection/damage etc.
    are reduced.
  </attribute>
  <attribute arch="is_vul_physical" editor="susceptible to physical" type="bool">
    Physical attacks is able to reduce the quality of the item and
    eventually destroy it.
  </attribute>
  <attribute arch="is_vul_elemental" editor="susceptible to elements" type="bool">
    Elemental attacks (fire, cold, elec, poison and acid!) are able
    to reduce the quality of the item and eventually destroy it.
  </attribute>
  <attribute arch="is_vul_magic" editor="susceptible to magic" type="bool">
    All forms of magical attacks are able to reduce the quality
    of the item and eventually destroy it.
  </attribute>
  <attribute arch="is_vul_sphere" editor="susceptible to sphere" type="bool">
    All forms of spherical attacks are able to reduce the quality
    of the item and eventually destroy it.
  </attribute>
  <attribute arch="is_indestructible" editor="indestructible" type="bool">
    This item can't be damaged in any way (this includes special magic
    and also attacks.
  </attribute>
</section>

<section name="misc">
  <attribute arch="luck" editor="luck bonus" type="int">
    With positive luck bonus, the player is more likely to
    succeed in all sorts of things (spellcasting, praying,...).
    Unless the &lt;luck bonus&gt; is very high, the effect will be
    barely visible in-game. Luck bonus on one piece of equipment
    should never exceed 3, and such bonus should not be too
    frequently available.
  </attribute>
  <attribute arch="exp" editor="speed bonus" type="int">
    Divide by ten to get the player's speed bonus from wearing
	this item. (The real formula to calcuate speed bonus is
	more advanced, but this description will do for now. /Gecko)
  </attribute>
  <attribute arch="hp" editor="health regen." type="int">
    Positive &lt;health regen.&gt; bonus speeds up the
    player's healing process. Negative values slow it down.
  </attribute>
  <attribute arch="maxhp" editor="health bonus" type="int">
    Positive &lt;health bonus&gt; increase the hit points.
    Negative decrease them (decrease can't reduce the total
    hp of the wearer below 1).
  </attribute>
  <attribute arch="sp" editor="mana regen." type="int">
    Positive &lt;mana regen.&gt; bonus speeds up the
    player's mana regeneration. Negative values slow it down.
  </attribute>
  <attribute arch="maxsp" editor="mana bonus" type="int">
    Positive &lt;mana bonus&gt; increase the mana points.
    Negative decrease them (decrease can't reduce the total
    mana of the wearer below 1).
  </attribute>
  <attribute arch="grace" editor="grace regen." type="int">
    Positive &lt;grace regen.&gt; bonus speeds up the
    player's grace regeneration. Negative values slow it down.
    Since grace can be regenerated rather easy with praying,
    additional &lt;grace regen.&gt; bonus should be VERY RARE!!
  </attribute>
  <attribute arch="maxgrace" editor="grace bonus" type="int">
    Positive &lt;grace bonus&gt; increase the hit points.
    Negative decrease them (decrease can't reduce the total
    grace of the wearer below 1).
  </attribute>
  <attribute arch="food" editor="food bonus" type="int">
    Positive &lt;food bonus&gt; slows down the player's digestion,
    thus he consumes less food. Negative values speed it up.

    Note that food is consumed not only for "being alive", but
    also for healing and mana-regeneration.
    &lt;food bonus&gt; only affects the amount of food consumed
    for "being alive". Hence, even with high &lt;food bonus&gt;,
    during a fight a player can run out of food quickly.
  </attribute>
  <attribute arch="make_invisible" editor="make invisible" type="bool">
   When applied the user gets invisible. He can't be seen from player 
   or monster except they have "see invisible" power.
  </attribute>
  <attribute arch="see_invisible" editor="see invisible" type="bool">
   When applied the user can see invisible objects.
  </attribute>
  <attribute arch="make_ethereal" editor="make ethereal" type="bool">
   When applied the user gets ethereal. He can't still be seen but
   transparent. He can move through walls and doors which has the
   PASS_THRU flag set (like ghosts and other non physical monsters).
  </attribute>
  <attribute arch="xrays" editor="gives xray vision" type="bool">
    Xray vision allows the player to see through obstacles
    in a two-square-wide radius. This is extremely helpful and
    desireable, so don't give it away for cheap on equipment.
  </attribute>
  <attribute arch="can_see_in_dark" editor="gives infravision" type="bool">
    A player with the ability to &lt;infravision (see in darkness)&gt;
    can see better (but not perfect) in darkness. Living objects will
    shown red.
    For mobs, this flag is a "should-have" for high-level monsters.
    When a monster is unable to see in darkness, in the night they will
    not be able to move or players can cast darkness and sneak around 
    it safely.
  </attribute>
  <attribute arch="stealth" editor="stealth" type="bool">
    Stealth allows the player to move silently.
    This comes to effect if a player turns himself
    invisible and tries to sneak around monsters.
    (At least that was the idea behind it)
  </attribute>
  <attribute arch="reflect_spell" editor="give reflect spells" type="bool">
    If a player is wearing any piece of equipment with
    the ability to &lt;reflect spells&gt;, all kinds of
    spell-bullets and -beams will bounce off him.
    This works only about 90% of all times, to
    avoid players being completely immune to certain
    types of attacks.

    This is a very powerful ability and it
    shouldn't be handed out cheap!
  </attribute>
  <attribute arch="reflect_missile" editor="give reflect missiles" type="bool">
    If a player is wearing any piece of equipment with
    the ability to &lt;reflect missiles&gt;, all kinds of
    projectiles (e.g. arrows, bolts, boulders) will
    bounce off him. This works only about 90% of all
    times, to avoid players being completely immune to
    certain types of attacks.
  </attribute>
  <attribute arch="flying" editor="levitate" type="bool">
    As soon as the player applies a piece of equipment with
    &lt;levitate&gt; set, the player will start to float in the air.
  </attribute>
  <attribute arch="terrain_type" editor="support terrain" type="bitmask_terrain">
    The bearer of this item can move in every terrain that
    is set by &lt;support terrain&gt;. Such abilities like
    "water walking", "fire walking" etc are almost priceless
    as they open access to an entire new plane of the daimonin
    world.

    Artifacts with &lt;support terrain&gt; attributes are VERY
    SPECIAL and they must be well-balanced!!!
  </attribute>
  <attribute arch="path_attuned" editor="attuned paths" type="bitmask_spellpath">
    Click on the &lt;attuned paths&gt; button to select spellpaths.
    The player will get attuned to the specified spellpaths
    while wearing this item.
  </attribute>
  <attribute arch="path_repelled" editor="repelled paths" type="bitmask_spellpath">
    Click on the &lt;repelled paths&gt; button to select spellpaths.
    The player will get attuned to the specified spellpaths
    while wearing this item.
  </attribute>
  <attribute arch="path_denied" editor="denied paths" type="bitmask_spellpath">
    Click on the &lt;denied paths&gt; button to select spellpaths.
    The specified spellpaths will be denied to the player
    while wearing this item.
  </attribute>
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text describes the item's "story". Every decent artifact
    should have such a description.
  </attribute>
</type>

<!--####################################################################-->
<type number="104" name="Bracers">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Bracers are armour-plates worn around the wrists.
    Wearing bracer, the object's stats will directly be inherited to
    the player. Usually enhancing his defense. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;magic bonus&gt; works just like ac, except that it can be improved by
    "scrolls of Enchant Armour" or reduced by acid. It is less useful
    than direct armour-class bonus on the bracers.
  </attribute>
</type>

<!--####################################################################-->
<type number="16" name="Brestplate Armour">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing an armour, the object's stats will directly be inherited to
    the player. Usually enhancing his defense. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="last_heal" editor="spellpoint penalty" type="int">
    This poses a penalty to spell regeneration speed, for wearing the armour.
    The bigger the spellpoint penalty, the worse.
  </attribute>
  <attribute arch="last_sp" editor="slowdown" type="int">
    Slowdown penalty reduces the player's walking speed when wearing the
    armour. Bigger values are worse - zero is best.
  </attribute>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;magic bonus&gt; works just like ac, except that it can be improved by
    "scrolls of Enchant Armour" or reduced by acid. It is less useful
    than direct armour-class bonus on the armour.
  </attribute>
</type>

<!--####################################################################-->
<type number="8" name="Book">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Applying a book, the containing message is displayed to the player. ]]>
  </description>
  <attribute arch="container" editor="language" type="list_language">
    The language the book is written in. Only when it matches the languages
    the player knows, the book can be written.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="book content" type="text">
    This is the text that appears "written" in the book.
  </attribute>
</type>

<!--####################################################################-->
<type number="99" name="Boots">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing boots, the object's stats will directly be inherited to
    the player. Usually enhancing his speed, or granting some minor
    protection bonus. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="last_heal" editor="spellpoint penalty" type="int">
    This poses a penalty to spell regeneration speed, for wearing the boots.
    The bigger the spellpoint penalty, the worse.
  </attribute>
  <attribute arch="last_sp" editor="slowdown" type="int">
    Slowdown penalty reduces the player's walking speed when wearing the
    boots. Bigger values are worse - zero is best.
  </attribute>
  <attribute arch="exp" editor="speed bonus" type="int">
    Boots with &lt;speed bonus&gt; will increase the player's walking speed
    while worn. This kind of bonus is quite desirable for players of low-
    and medium level. High level players usually have fastest possible
    walking speed and thus don't need &lt;speed bonus&gt; anymore.
    Still, this bonus is good for nice artifacts - not everything has
    to be for highest level.
  </attribute>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;magic bonus&gt; works just like ac, except that it can be improved by
    "scrolls of Enchant Armour" or reduced by acid. It is less useful
    than direct armour-class bonus on the boots.

    Important: &lt;magic bonus&gt; on boots has no effect if there is no
    &lt;armour class&gt; set. It only works in combination with &lt;armour class&gt;.
  </attribute>
</type>

<!--####################################################################-->
<type number="92" name="Button">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When a predefined amount of weigh is placed on a button, the
    &lt;connection&gt; value is triggered. In most cases this happens when a
    player or monster steps on it. When the button is "released", the
    &lt;connection&gt; value get's triggered a second time. ]]>
  </description>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="walk_off" value="1" type="fixed" />
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="weight" editor="press weight" type="string">
    The button is pressed (triggered), as soon as
    &lt;press weigh&gt; gram are placed ontop of it.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    Every time the button is pressed or released, all objects
    with the same &lt;connection&gt; value are activated.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the item. You can use this
    message to explain the button's purpose to the player.
  </attribute>
</type>

<!--####################################################################-->
<type number="30" name="Trigger Button">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When a predefined amount of weigh is placed on a trigger button, the
    &lt;connection&gt; value is triggered. In most cases this happens when a
    player or monster steps on it. TRIGGER_BUTTON objects work like
    TRIGGERS - after they get triggered, they will reset automatically
    and send  another trigger signal to the connected objects. This
    will happen even the player/object which triggered the button
    is still on it. In the time between trigger and reset, the 
    TRIGGER_BUTTON can't be triggered. ]]>
  </description>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="walk_off" value="1" type="fixed" />
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="weight" editor="press weight" type="string">
    The button is pressed (triggered), as soon as
    &lt;press weigh&gt; gram are placed ontop of it.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    Every time the button is pressed or released, all objects
    with the same &lt;connection&gt; value are activated.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the item. You can use this
    message to explain the button's purpose to the player.
  </attribute>
</type>


<!--####################################################################-->
<type number="87" name="Cloak">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing a cloak, the object's stats will directly be inherited to
    the player. Cloaks usually add minor &lt;armour class&gt; and
    sometimes a bit of resistance. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;magic bonus&gt; works just like ac, except that it can be improved by
    "scrolls of Enchant Armour" or reduced by acid. It is less useful
    than direct armour-class bonus on the cloak.

    Important: &lt;magic bonus&gt; on cloaks has no effect if there is no
    &lt;armour class&gt; set. It only works in combination with &lt;armour class&gt;.
  </attribute>
</type>

<!--####################################################################-->
<type number="9" name="Clock">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Applying a clock, the time is displayed to the player. ]]>
  </description>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the item
  </attribute>
</type>

<!--####################################################################-->
<type number="122" name="Container">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A player can put (certain kinds of) items in the container.
    The overall weight of items is reduced when put inside a
    container, depending on the settings.
    <br><br>
    A special feature of containers is the "cauldron",
    capable of mixing alchemical receipes. ]]>
  </description>
  <use><![CDATA[
    Note on chests - There are two types of chests:
    <UL>
    <LI> First the random treasure chests - Those are NOT containers
         (but object type Treasure), they create random treasures when
         applied. Archetype name is "chest".
    <LI> Second there are the permanent chests - Those are containers,
         they can be opened and closed again. Archetype name is "chest_2".
    </UL> ]]>
  </use>
  <attribute arch="race" editor="container class" type="string">
    If set, the container will hold only certain types of objects.
    Possible choices for &lt;container class&gt; are: "gold and jewels",
    "arrows" and "keys". 

    Unfortunately it is not easy to create new container
    classes, because items need a matching counterpiece-attribute
    to the &lt;container class&gt; before they can be put inside a
    container. This attribute ("race") is set only for the existing
    container classes.
  </attribute>
  <attribute arch="slaying" editor="key string" type="string">
    If &lt;key string&gt; is set, only players with a special key
    of matching &lt;key string&gt; are able to open the container.
  </attribute>
  <attribute arch="container" editor="maximum weight" type="int">
    The container can hold a maximum total weight of the given value
    in gram. Note that this weight limit is calculated *after* the
    weight reduction (&lt;reduce weight&gt;) has been applied.
  </attribute>
  <attribute arch="weapon_speed" editor="reduce weight %" type="float">
    This value determines how much the weight of items is reduced in
    percent, when put inside the container. &lt;reduce weight %&gt; 1.0 means no
    reduction, &lt;reduce weight %&gt; 0 means items are weightless inside.
    0.5 means weight is halfed.
  </attribute>
  <attribute arch="is_cauldron" editor="alchemy cauldron" type="bool">
    If set, the container can be used as alchemy-cauldron.
    The player can put ingredients inside, close it, cast alchemy
    and if his formulae is true, he'll get what he longed for.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
    All contents of a unique container are unique as well.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch="other_arch" editor="animation arch" type="string">
    This is used for a certain kind of... "animation" when
    opening the container. Stick to the default arches here
    and you won't get into trouble.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may contain a description of the container.
  </attribute>
</type>

<!--####################################################################-->
<type number="103" name="Converter">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Converters are like "exchange tables". When the player drops a
    specific type of items, they get converted into other items, at a
    predefined exchange-ratio. ]]>
  </description>
  <use><![CDATA[
    Converters are better than shopping with doormats, because the
    converters never get sold out. For some items like food or jewels
    those "exchange tables" are really nice, while for the more important
    stuff like potions converters should not exist.
    <br><br>
    VERY IMPORTANT: Be careful with the exchange-ratio! When you drop
    items on a converter, the stuff you get must be of equal or lesser
    value than before! (Except if you are using "rare" items like
    dragonscales for payment). The code will not check if your ratio is
    sane, so the player could gain infinite wealth by using your converter. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="cost arch" type="string">
    &lt;cost arch&gt; is the name of the archetype the player has to
    put on the converter, as payment.
  </attribute>
  <attribute arch="food" editor="cost number" type="int">
    The player has to put &lt;cost number&gt; items of &lt;cost arch&gt;
    on the converter, in order to get &lt;receive number&gt; items
    of &lt;receive arch&gt;.
  </attribute>
  <attribute arch="other_arch" editor="receive arch" type="string">
    &lt;receive arch&gt; is the name of the archetype to convert into.
  </attribute>
  <attribute arch="sp" editor="receive number" type="int">
    The player has to put &lt;cost number&gt; items of &lt;cost arch&gt;
    on the converter, in order to get &lt;receive number&gt; items
    of &lt;receive arch&gt;.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may contain a description of the converter.
  </attribute>
</type>

<!--####################################################################-->
<type number="42" name="Creator">
  <ignore>
    <ignore_list name="system_object" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A creator is an object which creates another object when it
    is triggered. The child object can be anything. Creators are
    VERY useful for all kinds of map-mechanisms. ]]>
  </description>
  <use><![CDATA[
    Don't hesitate to hide your creators under the floor.
    The created items will still always appear ontop of the floor. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="other_arch" editor="create arch" type="string">
    This string defines the object that will be created.
    You can choose any of the existing arches.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    Whenever the connection value is activated,
    the creator gets triggered.  
  </attribute>
  <attribute arch="lifesave" editor="infinit uses" type="bool">
    If &lt;infinit uses&gt; is set, the creator will work
    infinitly, regardless of the value in &lt;number of uses&gt;.
  </attribute>
  <attribute arch="hp" editor="number of uses" type="int">
    The creator can be triggered &lt;number of uses&gt; times, thus
    creating that many objects, before it dissappears.
    Default is &lt;number of uses&gt; 1 (-&gt; one-time usage).
  </attribute>
  <attribute arch="slaying" editor="name of creation" type="string">
    The created object will bear the name specified in &lt;name creation&gt;.
    If nothing is set, the standard name of the archetype is used. 
  </attribute>
  <attribute arch="level" editor="level of creation" type="int">
    The created object will be of that level. If zero/unset,
    the standard level of the archetype is used.
  </attribute>
</type>

<!--####################################################################-->
<type number="51" name="Detector">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Detectors work quite much like inv. checkers/pedestals: If the detector
    finds a specific object, it toggles its connected value.
    <br><br>
    What is "unique" about them, compared to inv. checkers/ pedestals?
    - First, detectors check their square for a match periodically, not
    instantly. Second, detectors check directly for object names. Third,
    detectors do not check the inventory of players/monsters. ]]>
  </description>
  <use><![CDATA[
    There is one major speciality about detectors: You can detect spells
    blown over a detector! To detect a lighting bolt for example, set
    "slaying ligthing" and "speed 1.0". In combination with spellcasting
    walls, this can be very useful for map-mechanisms. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="match name" type="string">
    &lt;match name&gt; specifies the name of the object we are looking for.
    Actually it does also check for the &lt;key string&gt; in key-objects,
    but for this case inventory checkers are often more powerful to use.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    When the detector is triggered, all objects with the same
    connection value get activated.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch="speed" editor="detection speed" type="float">
    This value defines the time between two detector-checks.
    If you want the detector to behave almost like pedestals/buttons,
    set speed rather high, like &lt;detection speed&gt; 1.0.
  </attribute>
</type>

<!--####################################################################-->
<type number="112" name="Director">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Directors change the direction of spell objects and other projectiles
    that fly past. Unlike spinners, directors always move objects in the
    same direction. It does not make a difference from what angle you
    shoot into it.<br>
    Directors are visible per default. ]]>
  </description>
  <use><![CDATA[
    Directors are rarely used in maps. Sometimes they are placed to
    change the direction of spells coming out of magic walls,
    "channeling" spell-projectiles in some direction. When doing this,
    <B>never place directors facing each other with magic walls fireing
    into them!</B> The spell-projectiles bouncing between the directors
    would accumulate to huge numbers and at some point slow down the
    server by eating memory- and CPU-time.
    <br><br>
    You'd better not place directors in monster vs. player combat
    areas too much, because that freaks out wizard-type players. ]]>
  </use>
  <attribute arch="connected" editor="connection" type="int">
    If a connection value is set, the DIRECTOR will turnable when
    a handle or button is used.
  </attribute>
  <attribute arch="sp" editor="reflect to direction" type="list_direction">
    Projectiles will leave the director flying in the selected &lt;direction&gt;.
    A director with direction &lt;none&gt; simply stops projectiles.
    (The latter works out a bit strange for some spells).
  </attribute>
  <attribute arch="maxsp" editor="turn value" type="int">
    If object is turned, turn it "turn value" steps every time.
  </attribute>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="fly_on" value="1" type="fixed" />
</type>

<!--####################################################################-->
<type number="158" name="Disease">
  <ignore>
    <ignore_list name="system_object" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Diseases are an intersting form of spellcraft in Daimonin.
    Once casted, they can spread out and infect creatures in a large
    area. Being infected can have various effects, from amusing farts
    to horrible damage - almost everything is possible. ]]>
  </description>
  <use><![CDATA[
    Diseases are extremely flexible and usable in a many ways.
    So far they are mostly used for causing bad, unwanted effects.
    You could just as well create a disease which helps the player
    (recharging mana for example).
    Infection with a "positive disease" could even be a quest reward. ]]>
  </use>
  <attribute arch="level" editor="plaque level" type="int">
    The &lt;plaque level&gt; is proportional to the disease's deadliness.
    This mainly reflects in the &lt;damage&gt;. It has no effect on
    most other symptoms. Neverthless, it is a very important value for
    all damage-inflicting diseases.
  </attribute>
  <attribute arch="race" editor="infect race" type="string">
    The disease will only infect creatures of the specified &lt;race&gt;.
    "&lt;race&gt; *" means every creature can be infected.
  </attribute>
  <attribute arch="ac" editor="progressiveness" type="int">
    Every time the disease "moves" the severity of the symptoms are increased
    by &lt;progressiveness&gt;/100. (severity = 1 + (accumlated progression)/100)
  </attribute>
<section name="spreading">
  <attribute arch="wc" editor="infectiosness" type="int">
    The &lt;infectiosness&gt; defines the chance of new creatures getting
    infected. If you set this too high, the disease is very likely to
    be too effective.

    &lt;infectiosness&gt;/127 is the chance of someone in range catching it.
  </attribute>
  <attribute arch="last_grace" editor="attenuation" type="int">
    The &lt;attenuation&gt; value reduces the diseases' &lt;infectiosness&gt;
    everytime it infects someone new. This limits how many generations
    a disease can propagate.
  </attribute>
  <attribute arch="magic" editor="infection range" type="int">
    &lt;infection range&gt; sets the range at which infection may occur.
    If positive, the &lt;infection range&gt; is level dependant - If negative,
    it is not:
    E.g. "&lt;infection range&gt; -6" means creatures can be infected in
    six square range, and &lt;plaque level&gt; doesn't modify that. 
  </attribute>
  <attribute arch="maxhp" editor="persistence" type="int">
    &lt;persistence&gt; defines how long the disease can persist OUTSIDE a host.
    The disease can "move" &lt;persistence&gt; times outside a host before it
    vanishes. A negative value means the disease lasts for permanent
    (which is only recommended to use in maps without monsters).
  </attribute>
  <attribute arch="maxgrace" editor="curing duration" type="int">
    The disease will last in the host for &lt;curing duration&gt; "disease moves"
    (Assuming the host survives and doesn't use a curing spell).
    After this period the disease is naturally cured, which provides the
    host with immunity from this particular disease of lower or equal level.

    A negative value means the disease can never be cured naturally.

    Note that this value can be further modulated by spell-parameters,
    if the disease is registered as spell in the code. Due to that,
    most default diseases take a lot longer to cure than it seems.
  </attribute>
  <attribute arch="speed" editor="moving speed" type="float">
    The &lt;speed&gt; of the disease determines how fast the disease will
    "move", thus how fast the symptoms strike the host.
  </attribute>
</section>
<section name="symptoms">
  <attribute arch="dam" editor="damage" type="int">
    A disease with a positive &lt;damage&gt; value will strike the player for that
    amount of damage every time the symptoms occur.
    A negative &lt;damage&gt; value produces %-based damage: "&lt;damage&gt; -10" means
    the player's health is reduced by 10% every time the symptoms strike.

    Diseases with %-based damage can be dangerous - but not deadly -
    for players of all levels.
  </attribute>
  <attribute arch="other_arch" editor="create arch" type="string">
    If set, the specified arch is created and dropped every time the
    symptoms strike.

    This can be various things: farts, body pieces, eggs ...
    Even monsters can be created that way. You could also make a
    disease where some exotic stuff like money/gems is created.
  </attribute>
  <attribute arch="last_sp" editor="slowdown" type="int">
    If set, the disease imposes a &lt;slowdown&gt; penatly while being infected.
    The player's speed is reduced by &lt;slowdown&gt; % of normal value.
  </attribute>
  <attribute arch="exp" editor="exp. for curing" type="int">
    When the player manages to cure this disease (with a curing spell),
    he is awarded with &lt;exp. for curing&gt; experience.
  </attribute>
  <attribute arch="maxsp" editor="mana depletion" type="int">
    Every time the disease "moves", the player's mana is
    reduced by the value of &lt;mana depletion&gt;.
    For negative values, a %-based amount is taken.
  </attribute>
  <attribute arch="last_eat" editor="food depletion" type="int">
    Every time the disease "moves", the player's food is
    reduced by the value of &lt;food depletion&gt;.
    For negative values, a %-based amount is taken.
  </attribute>
  <attribute arch="hp" editor="health regen." type="int">
    This value increases the player's healing rate.
    Negative values decrease it.
  </attribute>
  <attribute arch="sp" editor="mana regen." type="int">
    This value increases the player's rate of mana regeneration.
    Negative values decrease it.
  </attribute>
</section>
<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>
<section name="disability">
  <attribute arch="Str" editor="strength" type="int">
    The player's strength will rise by the given value
    while being infected. (Negative values make strength fall)
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise by the given value
    while being infected. (Negative values make dexterity fall)
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise by the given value
    while being infected. (Negative values make constitution fall)
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise by the given value
    while being infected. (Negative values make intelligence fall)
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise by the given value
    while being infected. (Negative values make power fall)
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise by the given value
    while being infected. (Negative values make wisdom fall)
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise by the given value
    while being infected. (Negative values make charisma fall)
  </attribute>
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="message" type="text">
    This text is displayed to the player every time the
    symptoms strike.
  </attribute>
</type>

<!--####################################################################-->
<type number="66" name="Exit">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When the player applies an exit, he is transferred to a different location.
    (Monsters cannot use exits.) Depending on how it is set, the player applies
    the exit just by walking into it, or by pressing &lt;a&gt;pply when standing on
    the exit.  ]]>
  </description>
  <use><![CDATA[
    If you want to have an invisible exit, set &lt;invisible&gt; (, of course 
    &lt;apply by walking&gt;), and put it *under* the floor. Otherwise it could be
    detected with the show_invisible spell.
    <br><br>
    You can be quite creative with the outlook of secret exits (their "face").
    Don't forget to give the player relyable hints about them though. ]]>
  </use>
  <attribute arch="slaying" editor="exit path" type="string">
    The exit path defines the map that the player is transferred to.
    You can enter an absolute path, beginning with '/' (for example
    "/peterm/FireTemple/fire1"). It can also be a relative path, not beginning
    with '/' (On the map "/peterm/FireTemple/Fire2" for example I could use the
    relative path "Fire1"). Use relative paths whenever possible! Note that
    upper/lower case must always be set correctly. However, please use lower
    case only. 
    It is well possible to have an exit pointing to the same map that the exit
    is on. If slaying is not set in an exit, the player will see a message like
    "the exit is closed".
  </attribute>
  <attribute arch="hp" editor="destination X" type="int">
    The exit destinations define the (x, y)-coordinates where the exit
    leads to.
    If both are set to zero, the player will be transferred to the "default
    enter location" of the destined map. The latter can be set in the map-
    properties as "Enter X/Y". Though, please DO NOT use that.
    It turned out to be a source for numerous map-bugs.
  </attribute>
  <attribute arch="sp" editor="destination Y" type="int">
    The exit destinations define the (x, y)-coordinates where the exit
    leads to.
    If both are set to zero, the player will be transferred to the "default
    enter location" of the destined map. The latter can be set in the map-
    properties as "Enter X/Y". Though, please DO NOT use that.
    It turned out to be a source for numerous map-bugs.
  </attribute>
  <attribute arch="walk_on" editor="apply by walking" type="bool">
    If set, the player will apply the exit by just walking into it. This must
    be set for the invisible exits for example. If unset, the player has
    to step onto the exit and press 'a' to get transferred.
  </attribute>
  <attribute arch="fly_on" editor="apply by flying" type="bool">
    If set, the player will apply the exit by "flying into it". Flying means
    the player is levitating. E.g. wearing levitation boots.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="exit message" type="text">
    If set, this message will be displayed to the player when he applies the exit.
    This is quite useful to throw in some "role-play feeling": "As you enter the
    dark cave you hear the sound of rustling dragonscales...". Well, my english
    is poor, but you get the point. =)
  </attribute>
  <attribute arch="last_eat" editor="unique destination" type="bool">
    This flag defines the destined map as "personal unique map". If set,
    there will be a seperate version of that map for every player out there.
    This feature is used for the permanent apartments.
    It should not be used for anything else than apartments, since Daimonin is a 
    *multi*player game. In such a permanent apartment don't forget to set the 
    unique-flag for all floor tiles too (see floors).
    An exit pointing outside of a personal unique map must have the
    "unique destination"-flag unset.
  </attribute>
</type>

<!--####################################################################-->
<type number="72" name="Flesh">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    By eating/drinking food-objects, the player can fill his
    stomache and gain a little health. ]]>
  </description>
  <attribute arch="food" editor="foodpoints" type="int">
    The player's stomache will get filled with this amount of foodpoints.
    The player's health will increase by &lt;foodpoints&gt;/50 hp.
  </attribute>
  <attribute arch="level" editor="flesh level" type="int">
    The &lt;flesh level&gt; is not visible to the players and it affects only
    dragon players. Normally this value reflects the level of the monster
    from which the flesh item originates.
    Dragon players always search for flesh of highest level possible,
    because it bears the best chance to gain high resistances.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
<section name="resistance">
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
    Resistances on flesh items make them more durable
    against spellcraft of the appropriate kind.
    This should only be set if placing a flesh item
    in a monster's inventory.
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the item.
  </attribute>
</type>

<!--####################################################################-->
<type number="71" name="Floor">
  <ignore>
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Floors are the base ground objects, which "defines" the tile.
    All settings for ground type and moving issues are done in the 
    floor tile.
    For floor tiles, we have 2 rules:
    a.) There must be a floor tile for every map position of a map.
    b.) Only ONE and exactly ONE floor tile per map position. ]]>
  </description>
  <attribute arch="is_floor" value="1" type="fixed" />
  <attribute arch="no_pass" editor="blocking passage" type="bool">
    If set, the object cannot be passed by players nor monsters.
  </attribute>
  <attribute arch="last_sp" editor="luminousness" type="int">
  This value sets the basic light/darkness value of tile space. This is
  how much this space is naturally glowing (luminousness). This is NOT
  the light source value. This value can be negative (shadow) and is
  direct added to a tile light value.
  </attribute>
<section name="terrain">
  <attribute arch="terrain_type" editor="terrain type" type="bitmask_terrain">
    The &lt;terrain type&gt; defines what kind of environment exists on
    this tile. This can be anything from normal land (= "none")
    to water, fire etc. Only creatures whith appropriate terrain-
    abilities can pass over this square.
  </attribute>
  <attribute arch="slow_move" editor="slow movement" type="int">
    If &lt;slow movement&gt; is set to a value greater zero, all
    creatures moving over this spot will be slower than normal.

    &lt;slow movement&gt; 1  - rough terrain
    &lt;slow movement&gt; 2  - very rough terrain
    ...
    &lt;slow movement&gt; 7  - spider web (sticky as hell)
  </attribute>
  <attribute arch="is_wooded" editor="wooded terrain" type="bool">
    This flag indicates this spot contains wood or high grass.
    Players with activated woodsman skill can move faster here.
  </attribute>
  <attribute arch="is_hilly" editor="hilly terrain" type="bool">
    This flag indicates this spot contains hills or large rocks.
    Players with activated mountaineer skill can move faster here.
  </attribute>
</section>
  <attribute arch="unique" editor="unique map" type="bool">
    Unique floor means that any items dropped on that spot
    will be saved byond map reset. For permanent apartments,
    all floor tiles must be set &lt;unique map&gt;.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the object.
  </attribute>
</type>

<!--####################################################################-->
<type number="77" name="Wall">
  <ignore>
    <attribute arch="no_magic" />
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Walls are like floor basic objects for maps.
    Walls are special in the way, the client use wall faces
    for some graphical tricks. ]]>
  </description>
  <attribute arch="no_pass" editor="blocking passage" type="bool">
    If set, the object cannot be passed by players nor monsters.
  </attribute>
  <attribute arch="can_roll" editor="moveable" type="bool">
    If set, the object is able to "roll", so it can be pushed around.
    This setting is used for boulders and barrels.
  </attribute>
  <attribute arch="no_magic" editor="restrict spells" type="bool">
    This takes effect only with &lt;blocksview&gt; disabled.
    Restricting the use of spells to pass this wall.
  </attribute>
  <attribute arch="damned" editor="restrict prayers" type="bool">
    This takes effect only with &lt;blocksview&gt; disabled.
    Restricting the use of spells to pass this wall.
  </attribute>
</type>

<!--####################################################################-->
<type number="6" name="Food">
  <ignore>
    <attribute arch="cursed" />
    <attribute arch="damned" />
    <attribute arch="speed_left" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    By eating/drinking food-objects, the player can fill his
    stomache and gain a little health and/or mana bonus.
    Temporary are stat gain or loses and resistance gain
    or loses possible. Cursed and damned food can increase
    and/or negate positive effects. ]]>
  </description>
  <attribute arch="food" editor="foodpoints" type="int">
    The player's stomache will get filled with this amount of foodpoints.
    The player's health will increase by &lt;foodpoints&gt;/50 hp.
  </attribute>
  <attribute arch="hp" editor="health bonus" type="int">
    Positive &lt;health&gt; bonus added to player's 
    hp when food eaten. Negative values will reduce hp.
    Curse will double amd damned will triple it. In both 
    cases are positive values negated.
  </attribute>
  <attribute arch="sp" editor="mana bonus" type="int">
    Positive &lt;mana&gt; bonus added to player's mana
    when food eaten. Negative values will reduce mana.
    Curse will double amd damned will triple it. In both 
    cases are positive values negated.
  </attribute>
  <attribute arch="cursed" editor="cursed food" type="bool">
    Turn positive effects negative and then double all
    negative effects.
  </attribute>
  <attribute arch="damned" editor="damned food" type="bool">
    Turn positive effects negative and then trible all
    negative effects.
  </attribute>
  <attribute arch="speed_left" editor="force time" type="float">
    The &lt;speed&gt; determines how long a force will stay
    it gets created from food effects. Only used when food has effects
    and then copied to force speed.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
<section name="Force Effects">
  <attribute arch="Str" editor="strength" type="int">
    The player's strentgh will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise/fall by the given value while
    wearing this piece of equipment.
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
</type>
<!--####################################################################-->
<type number="54" name="Drink">
  <ignore>
    <attribute arch="cursed" />
    <attribute arch="damned" />
    <attribute arch="speed_left" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    DRINK Objects are like food objects - just liquids instead
    of organics.
    Consuming drink objects, the player can fill his
    stomache and gain a little health and/or mana bonus.
    Temporary are stat gain or loses and resistance gain
    or loses possible. Cursed and damned drink can increase
    and/or negate positive effects. ]]>
  </description>
  <attribute arch="food" editor="foodpoints" type="int">
    The player's stomache will get filled with this amount of foodpoints.
    The player's health will increase by &lt;foodpoints&gt;/50 hp.
  </attribute>
  <attribute arch="hp" editor="health bonus" type="int">
    Positive &lt;health&gt; bonus added to player's 
    hp when consumed. Negative values will reduce hp.
    Curse will double amd damned will triple it. In both 
    cases are positive values negated.
  </attribute>
  <attribute arch="sp" editor="mana bonus" type="int">
    Positive &lt;mana&gt; bonus added to player's mana
    when consumed. Negative values will reduce mana.
    Curse will double amd damned will triple it. In both 
    cases are positive values negated.
  </attribute>
  <attribute arch="cursed" editor="cursed food" type="bool">
    Turn positive effects negative and then double all
    negative effects.
  </attribute>
  <attribute arch="damned" editor="damned food" type="bool">
    Turn positive effects negative and then trible all
    negative effects.
  </attribute>
  <attribute arch="speed_left" editor="force time" type="float">
    The &lt;speed&gt; determines how long a force will stay when
    it gets created from food/drink effects. Only used when drink 
    has effects which gets copied to a force.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
<section name="Force Effects">
  <attribute arch="Str" editor="strength" type="int">
    The player's strentgh will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise/fall by the given value while
    wearing this piece of equipment.
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
</type>

<!--####################################################################-->
<type number="91" name="Gate">
  <ignore>
    <attribute arch="no_magic" />
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Gates play an important role in Daimonin. Gates can be opened
    by activating a button/trigger, by speaking passwords (-&gt; magic_ear)
    or carrying special key-objects (-&gt; inventory checker).
    Unlike locked doors, gates can get shut again after a player has
    passed, which makes them more practical in many cases. ]]>
  </description>
  <use><![CDATA[
    Use gates to divide your maps into seperated areas. After solving
    area A, the player gains access to area B, and so on. Make your
    maps more complex than "one-way". ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="connected" editor="connection" type="int">
    Whenever a "signal" object is triggered, all objects with identical
    &lt;connection&gt; value get activated. This only makes sense together with
    &lt;blocking passage&gt; disabled.
  </attribute>
  <attribute arch="wc" editor="position state" type="int">
    The &lt;position state&gt; defines the position of the gate:
    Zero means completely open/down, the "number of animation-steps" (usually
    about 6 or 7) means completely closed/up state. I suggest you don't
    mess with this value - Leave the default in place.
  </attribute>
  <attribute arch="no_magic" editor="restrict spells" type="bool">
    Restricting the use of spells to pass this gate. This has
    an effect only if &lt;block view&gt; is disabled.
  </attribute>
  <attribute arch="damned" editor="restrict prayers" type="bool">
    Restricting the use of prayers to pass this door. This has
    an effect only if &lt;block view&gt; is disabled.
  </attribute>
</type>
<!--####################################################################-->
<type number="26" name="Timed Gate">
  <ignore>
    <attribute arch="no_magic" />
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Timed Gates are like normal gates except they close automatically after
    a set time. Timed Gates can be opened by activating a button/trigger,
    by speaking passwords (-&gt; magic_ear) or carrying special key-objects 
    (-&gt; inventory checker). Except the auto closing they are like normal
    gates. ]]>
  </description>
  <use><![CDATA[
    Use timed gates to divide your maps into seperated areas. After solving
    area A, the player gains access to area B, and so on. Make your
    maps more complex than "one-way". U can use the auto close feature for
    many tricks. You can force your player after trigger the gate to do a choice
    (get one of both but you can't go back) or you trigger a timed gate somewhere
    else on the map and your player must enter it in a set time limit (and when he
    fails he can try it again). ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="connected" editor="connection" type="int">
    Whenever a "signal" object is triggered, all objects with identical
    &lt;connection&gt; value get activated. This only makes sense together with
    &lt;blocking passage&gt; disabled.
  </attribute>
  <attribute arch="maxhp" editor="condition time delay" type="int">
    When triggered, this time the timed gate will stay in the new condition, until
    it reset itself. When opened, it stays this time open, then it close. 10 ticks
    are around 5 seconds.
  </attribute>
  <attribute arch="no_magic" editor="restrict spells" type="bool">
    Restricting the use of spells to pass this gate. This has
    an effect only if &lt;block view&gt; is disabled.
  </attribute>
  <attribute arch="damned" editor="restrict prayers" type="bool">
    Restricting the use of prayers to pass this door. This has
    an effect only if &lt;block view&gt; is disabled.
  </attribute>
</type>

<!--####################################################################-->
<type number="113" name="Girdle">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing a girdle, the object's stats will directly be inherited to
    the player. Girdles usually provide stats- or damage bonuses and no
    defense. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;magic bonus&gt; works just like ac, except that it can be improved by
    "scrolls of Enchant Armour" or reduced by acid. It is less useful
    than direct armour-class bonus on the helmet.

    Important: &lt;magic bonus&gt; on girdles has no effect if there is no
    &lt;armour class&gt; set. Girdles shouldn't have &lt;armour class&gt;, thus
    &lt;magic bonus&gt; is pointless here.
  </attribute>
</type>

<!--####################################################################-->
<type number="100" name="Gloves">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing gloves, the object's stats will directly be inherited to
    the player. Gloves can add defense or damage bonuses. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="magic" editor="magic bonus" type="int">
    If the gloves provide &lt;armour class&gt;, &lt;magic bonus&gt; will increase it.
    If the gloves have &lt;weapon class&gt; instead, then &lt;magic bonus&gt;
    will increase that.
  </attribute>
</type>

<!--####################################################################-->
<type number="93" name="Handle">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A handle can be applied by players and (certain) monsters.
    Every time it is applied, the &lt;connection&gt; value is triggered. ]]>
  </description>
  <use><![CDATA[
    Handles are commonly used to move gates. When placing your lever,
    don't forget that some monsters are able to apply it.
    The ability to apply levers is rare among monsters -
    but vampires can do it for example. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="connected" editor="connection" type="int">
    Every time the handle is applied, all objects
    with the same &lt;connection&gt; value are activated.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the item. You can use this
    message to explain the handle's purpose to the player.
  </attribute>
</type>

<!--####################################################################-->
<type number="27" name="Handle Trigger">
  <import_type name="Handle" />
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Handle triggers are handles which reset after a short period
    of time. Every time it is either applied or reset, the
    &lt;connection&gt; value is triggered. ]]>
  </description>
  <use><![CDATA[
    When you connect an ordinary handle to a gate, the gate normally remains
    opened after the first player passed. If you want to keep the gate shut,
    connecting it to a handle trigger is an easy solution.  ]]>
  </use>
</type>

<!--####################################################################-->
<type number="88" name="Hazard Floor">
  <required>
    <attribute arch="is_floor" value="1" />
  </required>
  <ignore>
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    The best example for Hazard Floor is lava. It works like standard
    floor, but damages all creatures standing on it.
    Damage is taken in regular time intervals. ]]>
  </description>
  <use><![CDATA[
    The default lava for example does minor damage. But you can turn
    it up so that your hazard floor poses a real threat.<br>
    Like magic walls, such floors add a permanent thrill to your map.
    You can use that to safely chase off too-weak players, or just
    to have something different. ]]>
  </use>
  <attribute arch="is_floor" value="1" type="fixed" />
  <attribute arch="lifesave" value="1" type="fixed" />
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="dam" editor="base damage" type="int">
    The &lt;base damage&gt; defines how much damage is inflicted to the
    victim per hit. The final damage is influenced by several other
    factors like the victim's resistance and level.
  </attribute>
  <attribute arch="wc" editor="weaponclass" type="int">
    &lt;weapon class&gt; improves the chance of hitting the victim.
    Lower values are better.
    Usually, hazard floors like lave are supposed to hit the
    victim all the time. Therefore, &lt;weaponclass&gt; should be set
    to something like 200.
  </attribute>
  <attribute arch="level" editor="attack level" type="int">
    I guess this value is supposed to work similar to monster levels.
    But in fact, it does not seem to have an effect. Set any non-zero
    value to be on the safe side.
  </attribute>
<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>
<section name="terrain">
  <attribute arch="slow_move" editor="slow movement" type="int">
    If &lt;slow movement&gt; is set to a value greater zero, all
    creatures moving over this spot will be slower than normal.

    &lt;slow movement&gt; 1  - rough terrain
    &lt;slow movement&gt; 2  - very rough terrain
    ...
    &lt;slow movement&gt; 7  - spider web (sticky as hell)
  </attribute>
  <attribute arch="is_wooded" editor="wooded terrain" type="bool">
    This flag indicates this spot contains wood or high grass.
    Players with activated woodsman skill can move faster here.
  </attribute>
  <attribute arch="is_hilly" editor="hilly terrain" type="bool">
    This flag indicates this spot contains hills or large rocks.
    Players with activated mountaineer skill can move faster here.
  </attribute>
</section>
  <attribute arch="unique" editor="unique map" type="bool">
    Unique floor means that any items dropped on that spot
    will be saved byond map reset. For permanent apartments,
    all floor tiles must be set &lt;unique map&gt;.
  </attribute>
</type>

<!--####################################################################-->
<type number="34" name="Helmet">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing a helmet, the object's stats will directly be inherited to
    the player. Normal helmets usually increase defense, while crowns
    add more special bonuses like stats/resistances paired with
    low defense. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="last_heal" editor="spellpoint penalty" type="int">
    This poses a penalty to spell regeneration speed, for wearing the helmet.
    The bigger the spellpoint penalty, the worse.
  </attribute>
  <attribute arch="last_sp" editor="slowdown" type="int">
    Slowdown penalty reduces the player's walking speed when wearing the
    helmet. Bigger values are worse - zero is best.
  </attribute>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;magic bonus&gt; works just like ac, except that it can be improved by
    "scrolls of Enchant Armour" or reduced by acid. It is less useful
    than direct armour-class bonus on the helmet.

    Important: &lt;magic bonus&gt; on helmets has no effect if there is no
    &lt;armour class&gt; set. It only works in combination with &lt;armour class&gt;.
    Crowns for instance typically provide no &lt;amour class&gt;.
  </attribute>
</type>

<!--####################################################################-->
<type number="56" name="Holy Altar">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Holy_altars are altars for the various religions. Praying
    at a Holy_altar will make you a follower of that god, and
    if you already follow that god, you may get some extra bonus. ]]>
  </description>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="other_arch" editor="god name" type="string">
    The altar belongs to the god of the given name. Possible options for
    &lt;god name&gt; are: Devourers, Lythander, Mostrai, Gaea, Ruggilli, Gnarg,
    Gorokh, Valriel and Sorig. 

    If you want to have an unconsecrated altar, set
    &lt;god name&gt; 0 and eventually &lt;reconsecrate level&gt; 0.
  </attribute>
  <attribute arch="level" editor="reconsecrate level" type="int">
    To re-consecrate an altar, the player's wisdom level must be as
    high or higher than this value. In that way, some altars can not
    be re-consecrated, while other altars, like those in dungeons, could be. 

    Altars located in temples should have at least &lt;reconsecrate level&gt; 100.
    Some characters might need those altars, they would be very unhappy to
    see them re-consecrated to another cult.
  </attribute>
</type>

<!--####################################################################-->
<type number="35" name="Horn">
  <ignore>
    <attribute arch="title" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Horns are very similar to rods. The difference is that horns regenerate
    spellpoints faster and thus are more valuable than rods.
    <br><br>
    A horn contains a spell. The player can use this spell by applying and
    "fireing" (blowing) the horn. Unlike wands/scrolls, horns can be
    used endlessly. ]]>
  </description>
  <use><![CDATA[
    Horns are powerful due to their fast recharge rate. They should
    never contain high level attacking spells. Even curing/healing spells
    are almost too good on a horn. ]]>
  </use>
  <attribute arch="sp" editor="spell" type="spell">
    Sets the &lt;spell&gt; of the horn. Consider twice before handing out any
    horns to players, since they can be used endlessly without any mana cost!
    Horns with heal/ restoration/ protection spells, IF available, MUST be
    very very VERY hard to get!
  </attribute>
  <attribute arch="level" editor="casting level" type="int">
    The casting level of the &lt;spell&gt; determines it's power.
    For attack spells, level should not be set too high.
  </attribute>
  <attribute arch="last_grace" editor="use speed" type="int">
  When fired/used, this value in ticks defines how long it needs
  thats the player can fire it again. The value is in ticks.
  8 ticks are a second.
  </attribute>
  <attribute arch="hp" editor="initial spellpoints" type="int">
    This value represents the initial amount of spellpoints in the horn.
    Naturally, this is quite unimportant.
  </attribute>
  <attribute arch="maxhp" editor="max. spellpoints" type="int">
    When the horn is fully charged up, it will hold this maximum amount of
    spellpoints. Make sure it is enough to cast the contained spell at least
    once. But don't set the value too high, as that might make the horn way
    too effective.
  </attribute>
  <attribute arch="make_invisible" editor="make invisible" type="bool">
   When applied the user gets invisible. He can't be seen from player 
   or monster except they have "see invisible" power.
  </attribute>
  <attribute arch="make_ethereal" editor="make ethereal" type="bool">
   When applied the user gets ethereal. He can't still be seen but
   transparent. He can move through walls and doors which has the
   PASS_THRU flag set (like ghosts and other non physical monsters).
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may contain a description of the horn.
  </attribute>
</type>

<!--####################################################################-->
<type number="73" name="Inorganic">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Inorganic materials are generally used as ingredients for
    alchemical receipes. By themselves, they have no special
    functionalities. ]]>
  </description>
  <attribute arch="is_dust" editor="is dust" type="bool">
  </attribute>
  <section name="resistance">
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
</type>

<!--####################################################################-->
<type number="64" name="Inventory Checker">
  <ignore>
    <ignore_list name="system_object" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Inventory checkers passively check the players inventory for a
    specific object. You can set a connected value that is triggered
    either if that object is present or missing (-&gt; "last_sp") when a
    player walks over the inv. checker. A valid option is to remove the
    matching object (usually not recommended, see "last_heal").
    <br><br>
    Alternatively, you can set your inv. checker to block all players
    that do/don't carry the matching object (-&gt; "no_pass").
    <br><br>
    As you can see, inv. checkers are quite powerful, holding a
    great variety of possibilities. ]]>
  </description>
  <use><![CDATA[
    Putting a check_inventory space in front of a gate (one below) and
    one on the opposite side works reasonably well as a control mechanism.
    Unlike the key/door-combo, this one works infinite since it is
    independant from map reset. Use it to put a "structure" into your
    maps: Player must solve area A to gain access to area B. This concept
    can be found in nearly every RPG - simple but effective. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="match key string" type="string">
    This string specifies the object we are looking for: We have a match
    if the player does/don't carry a key object or a mark with identical
    &lt;key string&gt;. Note that key objects usually appear as "passports" in
    this context. This string is compared to the name of an object. If
    the "match = slaying field" is set, the text is compared to the slaying
    field of the object we search for. This can make sense if we really want
     avoid any problems with user set names of objects.
  </attribute>
  <attribute arch="sp" editor="match = slaying field" type="bool">
    Enabled means key text is compared to the slaying field of an object
    and NOT to the name.
  </attribute>
  <attribute arch="race" editor="match arch name" type="string">
    This string specifies the object we are looking for: We have a match
    if the player does/don't carry an object of archtype &lt;match arch name&gt;.
  </attribute>
  <attribute arch="hp" editor="match type" type="int">
    This value specifies the object we are looking for: We have a match
    if the player does/don't carry an object that is of type &lt;match type&gt;. 

    Example: Set &lt;match type&gt; 15 (type 15 =&gt; weapon) and &lt;blocking passage&gt;
    enabled. Now you have an inv. checker blocking all players that carry any
    kind of melee weapon. To pass, a player is forced to leave behind all
    his weaponry... bad news for a warrior. ;)
  </attribute>
  <attribute arch="last_sp" editor="match = having" type="bool">
    Enabled means having that object is a match.
    Disabled means not having that object is a match.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    Whenever the inventory checker is triggered, all objects with identical
    &lt;connection&gt; value get activated. This only makes sense together with
    &lt;blocking passage&gt; disabled.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch="last_grace" editor="blocking passage" type="bool">
    If set, only players meeting the match criteria can pass
    through that space. If unset (default), the inventory
    checker acts like a trigger/button.
  </attribute>
  <attribute arch="last_heal" editor="remove match" type="bool">
    &lt;remove match&gt; means remove object if found. Setting this is usually not
    recommended because inv. checkers are in general invisible. So, unlike
    for altars/ locked doors, the player won't expect to lose an object when
    walking over that square. And he doesn't even get a message either. 

    So, *if* you enable &lt;remove match&gt;, make sure
    to inform the player what's going on!
  </attribute>
</type>

<!--####################################################################-->
<type number="60" name="Gems">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Items of the type Gems are handled like a currency.
    Unlike for any other type of item, in shops, the buy- and selling
    prices differ only marginally. ]]>
  </description>
  <attribute arch="race" value="gold and jewels" type="fixed" />
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the object.
  </attribute>
</type>
<!--####################################################################-->
<type number="116" name="Jewels">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Items of the type Jewels are handled like a currency.
    Unlike for any other type of item, in shops, the buy- and selling
    prices differ only marginally. ]]>
  </description>
  <attribute arch="race" value="gold and jewels" type="fixed" />
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the object.
  </attribute>
</type>
<!--####################################################################-->
<type number="117" name="Nuggets">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Items of the type Nuggets are handled like a currency.
    Unlike for any other type of item, in shops, the buy- and selling
    prices differ only marginally. ]]>
  </description>
  <attribute arch="race" value="gold and jewels" type="fixed" />
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the object.
  </attribute>
</type>

<!--####################################################################-->
<type number="20" name="Locked Door">
  <ignore>
    <attribute arch="no_magic" />
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A locked door can be opened only when car
    the appropriate special key. ]]>
  </description>
  <use><![CDATA[
    If you want to create a locked door that cannot be opened (no key),
    set a &lt;key string&gt; like "no_key_available". This will clearify things
    and only a fool would create a key matching that string. 

    Door-objects can not only be used for "doors". In many maps these
    are used with all kinds of faces/names, especially often as
    "magic force". A good example is the map "Lake_Country/ebony/masterlev".
    There you have magic forces (door objects) put under certain artifact
    items. To get your hands on the artifacts, you need to bring up the
    appropriate quest items (key objects). ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="key string" type="string">
    The &lt;key string&gt; in the door must be identical with the
    &lt;key string&gt; in the special key, then the door is unlocked.
    It is VERY important to set the &lt;key string&gt; to something that
    is unique among the CF mapset.  

    DONT EVER USE the default string "set_individual_value".
  </attribute>
  <attribute arch="other_arch" editor="change to object" type="string">
    If set, the door will when opened changed permantly to this object.
    If not set, the door will be used as "auto-closing" door, using the
    open counter value.
  </attribute>
  <attribute arch="sp" editor="open counter" type="int">
    A opened door will auto-close after some time. As higher
    this value as longer the door stay open.
  </attribute>
  <attribute arch="no_magic" editor="restrict spells" type="bool">
    Restricting the use of spells to pass this door.
    This should be set in most cases.
    (Don't forget that the spell "dimension door" is easily
    available at about wisdom level 10).
  </attribute>
  <attribute arch="damned" editor="restrict prayers" type="bool">
    Restricting the use of prayers to pass this door.
    This should be set in most cases.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="lock message" type="text">
    When a player is trying to open the door without carrying the
    appropriate key, this text is displayed to the player. This is
    a good opportunity to place hints about the special key needed
    to unlock the door.
  </attribute>
</type>

<!--####################################################################-->
<type number="29" name="Magic Ear">
  <ignore>
    <ignore_list name="system_object" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Magic_ears trigger a connected value
    when the player speaks a specific keyword. ]]>
  </description>
  <use><![CDATA[
    Whenever you put magic_ears on your maps, make sure there are
    CLEAR and RELYABLE hints about the keywords somewhere. Don't make
    something like a gate that is opened by speaking "open" or
    "sesame", expecting the player to figure this out all by himself.
    <br><br>
    Magic_ears are typically used for interaction with NPCs. You
    can create the impression that the NPC actually *does* something
    according to his conversation with a player. Mostly this means
    opening a gate or handing out some item, but you could be quite
    creative here. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="connected" editor="connection" type="int">
    The Magic_ear will trigger all objects with the
    same connection value, every time it is activated.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="keyword-matching" type="text">
    This textfield contains the keyword-matching-syntax. The text should
    have the following format: "@match &lt;keyword1&gt;|&lt;keyword2&gt;|... ".
    Any number of keywords from one to infinite is allowed. Make sure
    they are seperated by a '|'.

    Examples: "@match yes", "@match gold|treasure". The connected
    value will be triggerd when the player speaks any of the given
    keywords within a two-square radius. IMPORTANT: Upper/lower case
    does not make a difference!
  </attribute>
</type>

<!--####################################################################-->
<type number="62" name="Magic Wall">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Magic walls fire spells in a given direction, in regular intervals.
    Magic walls can contain any spell. However, some spells do not
    operate very successfully in them. The only way to know is to test
    the spell you want to use with a wall.
    <br><br>
    Several types of magical walls are predefined for you in the
    archetypes, and can be found on a pick-map available in crossedit. ]]>
  </description>
  <use><![CDATA[
    Spellcasting walls pose an interesting alternative to monsters.
    Usually they are set to be undestroyable ("alive 0"). Thus, while
    monsters in a map can be cleared out, the magic walls remain. Low
    level characters for example will not be able to pass through their
    spell-area, hence they cannot loot a map that a high level character
    might have cleared out.
    <br><br>
    Another point of magic walls is that if the player dies, he has to face
    them all again. Magic walls can add a kind of "permanent thrill" to
    your maps.
    <br><br>
    Be careful that your magic walls don't kill the monsters on a map. If
    placing monsters, eventually take ones that are immune to the
    walls' spell(s).]]>
  </use>
  <attribute arch="last_eat" editor="casting on/off" type="bool">
	If set the wall is "on" and cast spells - if not set the
      wall is "off" and don't cast spells (but can be turned).
  </attribute>
  <attribute arch="dam" editor="spell" type="spell">
    The magic wall will cast this &lt;spell&gt;.
  </attribute>
  <attribute arch="level" editor="spell level" type="int">
    The wall will cast it's spells at level &lt;spell level&gt;. "level 1"
    walls cast spells at minimal strength. "level 100" walls cast deadly
    spells. Arch default is level 1 - you should always set this value
    to meet the overall difficulty of your map.
  </attribute>
  <attribute arch="speed" editor="casting speed" type="float">
    The &lt;casting speed&gt; defines the spellcasting speed of the wall.
    You can fine-tune how long the duration between two casts shall be. 
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    Every time the &lt;connection&gt; value is triggered, the wall will cast
    it's spell. You should set &lt;casting speed&gt; to zero, or this won't
    have much visible effect.
  </attribute>
  <attribute arch="maxsp" editor="turn steps" type="int">
	If set and a connected object without "last_eat 1" gives
      signal, the magic wall turns this steps.
  </attribute>
  <attribute arch="no_pass" editor="blocking passage" type="bool">
    If set, the object cannot be passed by players nor monsters.
  </attribute>
<section name="destroyable">
  <attribute arch="alive" editor="is destroyable" type="bool">
    Walls with &lt;is destroyable&gt; enabled can be attacked and (eventually)
    destroyed by the player. If disabled, all other attributes on
    this tab, as well as resistances, are meaningless.
  </attribute>
  <attribute arch="hp" editor="hitpoints" type="int">
    The more &lt;hitpoints&gt; the wall has, the longer
    it takes to be destroyed.
  </attribute>
  <attribute arch="maxhp" editor="max hitpoints" type="int">
    &lt;max hitpoints&gt; are the maximum amount of hitpoints the wall
    can have. This only makes sense if the wall can regain health.
  </attribute>
  <attribute arch="ac" editor="armour class" type="int">
    A magic wall of high &lt;armour class&gt; is less likely to get hit from
    an opponent. &lt;armour class&gt; can be considered the "counterpiece"
    to &lt;weapon class&gt;.
  </attribute>
</section>
<section name="resistance">
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
</type>

<!--####################################################################-->
<type number="55" name="Marker">
  <ignore>
    <ignore_list name="system_object" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A marker is an object that inserts an invisible force (a mark) into a
    player stepping on it. This force does nothing except containing a
    &lt;key string&gt; which can be discovered by detectors or inventory
    checkers. It is also possible to use markers for removing marks again.
    <br><br>
    Note that the player has no possibility to "see" his own marks,
    except by the effect that they cause on the maps. ]]>
  </description>
  <use><![CDATA[
    Markers hold real cool possibilities for map-making. I encourage
    you to use them frequently. However there is one negative point
    about markers: Players don't "see" what's going on with them. It is
    your task, as map-creator, to make sure the player is always well
    informed and never confused.
    <br><br>
    Please avoid infinite markers when they aren't needed. They're
    using a little space in the player file after all, so if there
    is no real purpose, set an expire time. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="key string" type="string">
    The &lt;key string&gt; can be detected by inv. checkers/detectors.
    If the player already has a force with that &lt;key string&gt;,
    there won't be inserted a second one.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    When the detector is triggered, all objects with the same
    connection value get activated.
  </attribute>
  <attribute arch="speed" editor="marking speed" type="float">
    The &lt;marking speed&gt; defines how quickly it will mark something
    standing on the marker. Set this value rather high to make
    sure the player really gets his mark. I think &lt;marking speed&gt; 1.0
    should do fine.
  </attribute>
  <attribute arch="food" editor="mark duration" type="int">
    This value defines the duration of the force it inserts.
    If nonzero, the duration of the player's mark is finite:
    about 1 food per 10 seconds. &lt;mark duration&gt; zero/unset
    means the mark will stay on the player forever.
  </attribute>
  <attribute arch="name" editor="delete mark" type="string">
    When the player steps onto the marker, all existing forces in
    the players inventory with a &lt;key string&gt; matching &lt;delete mark&gt;
    will be removed. If you don't want to remove any marks, leave
    this textfield empty. 

    Note that the string &lt;delete mark&gt; is set as the name of
    this marker. So don't be confused, and remember changing the
    name will take effect on the marker's functionality.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="marking message" type="text">
    In the moment when the player gets marked, this text is displayed
    to him. You should really set a message in any marker you create,
    because it's the only way for the player to notice what's going on.
  </attribute>
</type>

<!--####################################################################-->
<type number="36" name="Money">
  <ignore>
    <attribute arch="unpaid" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Items of the type Money are handled as currency.
    Money cannot be sold/bought in shops. When money is dropped
    in a shop, it stays the same.<br>
    When a player picks an item from a shop and attempts to
    walk over the shop mat, the item's selling-price is automatically
    subtracted from the player's money.
    <br><br>
    For money, always use the default arches.
    Don't modify them. ]]>
  </description>
  <attribute arch="race" value="gold and jewels" type="fixed" />
</type>

<!--####################################################################-->
<type number="80" name="Monster &amp; NPC">
  <ignore>
    <attribute arch="material" />
    <attribute arch="material_real" />
    <attribute arch="nrof" />
    <attribute arch="value" />
    <attribute arch="unpaid" />
    <attribute arch="identified" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Monsters can behave in various kinds of ways.
    They can be aggressive, attacking the player. Or peaceful,
    helping the player - maybe joining him as pet.
    The unagressive creatures who communicate with players are
    usually called "NPCs" (Non Player Character), a well-known
    term in role-play environments. ]]>
  </description>
  <use><![CDATA[
    Monsters play a central role in most maps. Choosing the right
    combination of monsters for your map is vital:
    <UL>
    <LI> Place only monsters of slightly varying (increasing) strength.
         It's no fun to play for two hours just to find out the last
         monster is unbeatable. Similar, it's not exciting to fight orcs
         after passing a room of dragons.<br>
         This rule applies only for linear maps (one room after the other),
         with treasure at the end. You can sprinkle the treasure around,
         or make non-linear maps - That is often more entertaining. 
    <LI> Places with high level monsters must not be easy to reach.
         Balrogs, Dragonmen and the likes should be at the end of a quest,
         not at the beginning. 
    <LI> Don't stick monsters together that tend to kill each other.
         Fire- and cold dragons in one room for example is a bad idea.
         By weakening and killing each other they are easy prey for players,
         not worth the experience they hold.
    <LI> Create your own monsters, especially for "boss"-type monsters.
         Having stage-bosses guarding treasure is a lot of fun when done right.
         Avoid to create monsters with completely non-intuitive abilities:
         Don't give ice-spells to firedragons or vice versa. Don't add
         draining attack to trolls, etc. Additionally, you should inform the
         player before he bumps right into some very special/unusual monster.
    <LI> Last but not least: Always keep an eye on the experience your monsters
         hold. Design your maps in a way that high experience
         is always well-defended. Don't make large rooms full with only one kind
         of monster. Keep in mind the different abilities/techniques players
         can use.
    </UL>
    I know it's impossible to make the perfectly balanced map. There's always
    some part which is found too easy or too hard for a certain kind of player.
    Just give it your best shot. And listen to feedback from players if you
    receive some. :-) ]]>
  </use>
  <attribute arch="alive" value="1" type="fixed" />
  <attribute arch="randomitems" editor="treasurelist" type="treasurelist">
    When the monster is killed, items from the treasurelist will
    drop to the ground. This is a common way to reward players
    for killing (masses of) monsters.

    Note that you can always put items into the monster's
    inventory. Those will drop-at-kill just like the stuff
    from the &lt;treasurelist&gt;.
  </attribute>
  <attribute arch="level" editor="level" type="int">
    A monster's &lt;level&gt; is the most important attribute.
    &lt;level&gt; affects the power of a monster in various ways.
  </attribute>
  <attribute arch="race" editor="race" type="string">
    Every monster should have a race set to cathegorize it.
    The monster's &lt;race&gt; can have different effects:
    Slaying weapons inflict tripple damage against enemy races
    and holy word kills only enemy races of the god.
  </attribute>
  <attribute arch="exp" editor="experience" type="int">
    When a player kills this monster, he will get exactly this
    amount of &lt;experience&gt;. The experience will flow into
    the skill-cathegory the player used for the kill.

    If you create special monsters of tweaked strenght/abilities,
    always make sure that the &lt;experience&gt; is set to a
    reasonable value. Compare with existing arches to get a feeling
    what reasonable means. Keep in mind that spellcasting monsters
    are a lot harder to kill than non-spellcasters!
  </attribute>
  <attribute arch="speed" editor="speed" type="float">
    The &lt;speed&gt; determines how fast a monster will both move
    and fight. High &lt;speed&gt; makes a monster considerably stronger.
    If the start value is negative (like -0.1) then the speed is set to
    0.1 but the speed counter becomes a random start value. This will avoid
    for generated objects of same type thats they act totally synchron.
  </attribute>
  <attribute arch="other_arch" editor="breed monster" type="string">
    This only takes effect if &lt;multiply&gt; or &lt;splits&gt; is enabled. 
	The monster will create a &lt;breed monster&gt; every once in a while. 
	&lt;breed monster&gt; can be set to any valid arch-name of a monster. 
	Multipart monster should not be used.
  </attribute>
  <attribute arch="generator" editor="multiply" type="bool">
    Monsters with &lt;multiply&gt; enabled will create a &lt;breed monster&gt;
    every once in a while. Mice are a good example for this effect.
    If enabled, you must also set &lt;breed monster&gt;.
  </attribute>
  <attribute arch="food" editor="split number" type="int">
    This is the number of new monsters generated when this monster
	is split. This only takes effect if &lt;split&gt; and &lt;breed monster&gt;
	is set.
  </attribute>
  <attribute arch="splitting" editor="split" type="bool">
    Monsters with &lt;split&gt; enabled will split into one or more 
	&lt;breed monster&gt; whenever they're hit. The number of new monsters
	is controlled by &lt;split number&gt;. 
	If enabled, you must also set &lt;breed monster&gt; and &lt;split number&gt;.
  </attribute>
  <attribute arch="invulnerable" editor="invulnerable" type="bool">
    This mob will NEVER take any damage - so it can't die by damage.
  </attribute>
  <attribute arch="no_attack" editor="never attack" type="bool">
    This mob will NEVER attack or fight back. Its permanent unaggressive.
  </attribute>
  <attribute arch="flying" editor="flying" type="bool">
    Flying monsters won't get slowed down in rough terrain
    and they won't be affected by movers.
  </attribute>
  <attribute arch="undead" editor="undead" type="bool">
    Several spells only affect undead monsters:
    turn undead, banish undead, holy word, etc.
  </attribute>
  <attribute arch="corpse" editor="corpse" type="bool">
    This monster will leave a corpse behind when it dies.
  </attribute>
  <attribute arch="carrying" editor="carries weight" type="int">
    If a monster has something in the inventory, this
    value can be set to reflect the slowdown due to
    the carried weight.
  </attribute>
  <attribute arch="is_male" editor="male" type="bool">
    This monster is male. You can create male, female and neuter monsters.
	But for some reason, two-sexed monsters doesn't seem to work really well.
  </attribute>
  <attribute arch="is_female" editor="female" type="bool">
    This monster is female. You can create male, female and neuter monsters.
	But for some reason, two-sexed monsters doesn't seem to work really well.
  </attribute>

<section name="melee">
  <attribute arch="dam" editor="damage" type="int">
    A value of 50 will be handled as 5.0, a value of 55 = 5.5.
    Among other parameters, &lt;damage&gt; affects how much melee damage
    a monster inflicts. &lt;damage&gt; is used as base value for damage per
    hit. &lt;level&gt;, &lt;speed&gt;, &lt;weapon class&gt; and resistances also
    take effect on the melee damage of a monster.
  </attribute>
  <attribute arch="wc" editor="weapon class" type="int">
    Monsters of low &lt;weapon class&gt; are more likely to really hit
    their opponent. &lt;weapon class&gt; can be considered the "counterpiece"
    to &lt;armour class&gt;.
    Note that the monster's level further improves weapon class:
    "real weapon class" = &lt;weapon class&gt; - &lt;level&gt;
  </attribute>
  <attribute arch="wc_range" editor="wc hit range" type="int">
    This value is set to 20 from the server when == 0. Its the
    The server will add a random value between 0 ad wc_range to the wc.
    If that is higher as the target ac, the target is hit. As higher
    wc_range is as 20, as more dangerous and more often a mob will hit.
    Because the mobile level is added to wc too, a wc_range of 40 will
    let the monster hit VERY often even against the best armours.
  </attribute>
  <attribute arch="hp" editor="health points" type="int">
    The &lt;health points&gt; of a monster define how long it takes to
    kill it. With every successful hit from an opponent, health points
    get drained - The monster dies by zero health points.
    If the value '-1' is set, the monster will start out with full
    health. How much that is depends on &lt;max health&gt;.
  </attribute>
  <attribute arch="maxhp" editor="max health" type="int">
    &lt;max health&gt; is the maximum amount of &lt;health points&gt; this
    monster can have.

    Important: This is a relative value, dependant on level.
    The in-game value is calculated as follows:
    A value of 50 will be handled as 5.0, a value of 55 = 5.5.
    "real max health" = (&lt;max health&gt; * (&lt;level&gt; + 3))/10
  </attribute>
  <attribute arch="ac" editor="armour class" type="int">
    Monsters of low &lt;armour class&gt; are less likely to get hit from
    their opponent. &lt;armour class&gt; can be considered the "counterpiece"
    to &lt;weapon class&gt;.
    Values typically range between +20 (very bad) to -20 (quite good).
    Note that the monster's level further improves armour class:
    "real armour class" = &lt;armour class&gt; - &lt;level&gt;
  </attribute>
  <attribute arch="Con" editor="healing rate" type="int">
    Monsters regenerate this many hit points each move. Each time the
    monster has a move, it gets &lt;healing rate&gt; health points back.
    Hence, &lt;movement speed&gt; has great effect on the monster's healing
    rate as well.
  </attribute>
  <attribute arch="hitback" editor="hitback" type="bool">
    Monsters with &lt;hitback&gt; enabled hurt the attacker in proportion
    to the amount of damage the *attacker* inflicted. This damage
    is additional to the regular melee damage of the monster.
    As far as I know, hitback uses acid attacktype, and it only takes
    effect if the monster actually has acid attacktype at it's disposal.
    Acid spheres for example use this feature.
  </attribute>
  <attribute arch="one_hit" editor="one hit only" type="bool">
    Monsters with &lt;one hit only&gt; dissapear after one successful hit
    to a player.
  </attribute>
</section>

<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>

<section name="spellcraft">
  <attribute arch="can_cast_spell" editor="can cast spell" type="bool">
    If &lt;can cast spell&gt; is disabled, the monster cannot cast any spell.
    Only wands/rods/etc can be used, given the appropriate abilities.
  </attribute>
  <attribute arch="sp" editor="spellpoints" type="int">
    Like players, monsters need &lt;spellpoints&gt; to do magic. Monsters use
    them for both wizard- and prayer-spells. However, this value defines
    only the amount of *initial* spellpoints the monster starts with.
    When creating a spellcasting monster, remember that &lt;max spellpoints&gt;
    and &lt;spellpoint regen.&gt; are more important.
    If &lt;spelloints&gt; are set to '-1', the monster will start out with
    maxed spellpoints.
    &lt;spellpoints&gt;.
  </attribute>
  <attribute arch="maxsp" editor="max spellpoints" type="int">
    &lt;max spellpoints&gt; is the maximum number of spellpoints a monster
    can hold. Setting this to high values has little effect unless
    the monster has a decent &lt;spellpoint regen.&gt;, or the spell
    "regenerate mana" at it's disposal.

    Important: This is a relative value, dependant on monster level.
    The in-game value is calculated as follows:
    "real max spellpoints" = &lt;max spellpoints&gt; * (&lt;level&gt; + 1)
  </attribute>
  <attribute arch="Pow" editor="spellpoint regen." type="int">
    Monsters regenerate this many spellpoints each move. Each time the
    monster has a move, it gets &lt;spellpoint regen.&gt; spellpoints back.
    Hence, &lt;movement speed&gt; has great effect on the monster's
    spellpoint regeneration as well.

    To make a real tough spellcasting monster, the rate of spellpoint
    regeneration is most important. If your monster is still not casting
    fast enough, give it the spell-ability of "regenerate mana".
    That, paired with high &lt;max spellpoints&gt;, is the ultimate thing.
  </attribute>
  <attribute arch="magic" editor="casting delay" type="int">
  The casting delay this monster invoke every cast.
  This is cumulative added to the spell default casting delay.
  </attribute>
  <attribute arch="path_attuned" editor="attuned paths" type="bitmask_spellpath">
    Click on the &lt;attuned paths&gt; button to select spellpaths.
    The creature will get attuned to the specified spellpaths.
  </attribute>
  <attribute arch="path_repelled" editor="repelled paths" type="bitmask_spellpath">
    Click on the &lt;repelled paths&gt; button to select spellpaths.
    The creature will get repelled to the specified spellpaths.
  </attribute>
  <attribute arch="path_denied" editor="denied paths" type="bitmask_spellpath">
    Click on the &lt;denied paths&gt; button to select spellpaths.
    The creature won't be able to cast spells of the specified paths.
  </attribute>
</section>

<section name="ability">
  <attribute arch="terrain_flag" editor="can move on" type="bitmask_terrain">
    These settings define on which kind of terrain this
    creature can move. If nothing is set, the creature
    can walk on land surface.
  </attribute>
  <attribute arch="Dex" editor="use ability 1/" type="int">
    The &lt;use ability&gt; value is a 1/x chance that the monster
    *try* to use per active tick a special ability like spellcasting,
    throwing, etc.
  </attribute>
  <attribute arch="Int" editor="detect hidden" type="int">
    The &lt;detect hidden&gt; value gives monsters the abiltity to find
    hidden/invisible creatures. Higher values make for better
    detection-skills. Enabling &lt;see invisible&gt; makes this value
    obsolete.
  </attribute>
  <attribute arch="see_invisible" editor="see invisible" type="bool">
    A monster with the ability to &lt;see invisible&gt; cannot be fooled
    with by invisible or hiding players. This flag is a must-have
    for high-level monsters. When a monster is unable to detect
    invisible players, it can be killed without fighting back.
  </attribute>
  <attribute arch="can_see_in_dark" editor="see in darkness" type="bool">
    A monster with the ability to &lt;see in darkness&gt; cannot be fooled
    by spells of darkness or dark maps. This flag is a "should-have"
    for high-level monsters. When a monster is unable to see in
    darkness, players can cast darkness and sneak around it safely.
  </attribute>
  <attribute arch="can_use_weapon" editor="can use weapons" type="bool">
  </attribute>
  <attribute arch="can_use_bow" editor="can use bows" type="bool">
  </attribute>
  <attribute arch="can_use_armour" editor="can use armour" type="bool">
  </attribute>
  <attribute arch="can_use_ring" editor="can use rings" type="bool">
  </attribute>
  <attribute arch="can_use_range" editor="can use rods/wands" type="bool">
    If set, this creature can use range weapons like
    rods, wands, staves and horns.
  </attribute>
  <attribute arch="can_use_scroll" editor="can use scrolls" type="bool">
  </attribute>
  <attribute arch="can_use_skill" editor="can use skills" type="bool">
  </attribute>
</section>

<section name="behave">
  <attribute arch="unaggressive" editor="unaggressive" type="bool">
    &lt;unaggressive&gt; monsters do not attack players unless attacked first.
  </attribute>
  <attribute arch="friendly" editor="friendly" type="bool">
    &lt;friendly&gt; monsters help the player, attacking any
    non-friendly monsters in range.
  </attribute>
  <attribute arch="random_move" editor="random movement" type="bool">
    Monsters with this flag enabled move around at random.
    Specifically, that means they do not approach enemy players
    when agressive, but they never stand still either.
  </attribute>

  <attribute arch="item_race" editor="random move range X" type="int">
   if random_move is set, this determinates a ABS() value of x position
   the creatures can move away from the spawn point.
  </attribute>
  <attribute arch="item_level" editor="random move range Y" type="int">
   if random_move is set, this determinates a ABS() value of y position
   the creatures can move away from the spawn point.
  </attribute>

  <attribute arch="stand_still" editor="stand still" type="bool">
    Monsters which &lt;stand still&gt; won't move to leave their position.
    When agressive, they will attack all enemies who get close to
    them. This behaviour is commonly known from castle guards.

    When lining up &lt;stand still&gt;-monster in order to "defend"
    something: Be aware that such monsters are rather easy to kill.
    It's good for low level maps, but not much more.
  </attribute>
  <attribute arch="sleep" editor="asleep" type="bool">
    Being &lt;asleep&gt;, a monster won't move unless a player enters the
    &lt;sensing range&gt; of the monster. Usually the sensing range is
    larger than the players line of sight. Due to that, in most cases
    the player won't ever notice weither a monster was asleep or not.
  </attribute>
  <attribute arch="will_apply" editor="misc. actions" type="bitmask_will_apply">
    This entry defines which kinds of environment actions the
    creature is able to perform.
  </attribute>
  <attribute arch="pick_up" editor="pick up" type="bitmask_pick_up">
    Click on the &lt;pick up&gt; button and select which types of objects
    the creature should try to pick up.

    Note also that if &lt;can use armor&gt;, &lt;can use weapon&gt;, &lt;can use ring&gt;...
    etc are set, then the creature will pick up the matching items even
    if this is not set here.
  </attribute>
  <attribute arch="Wis" editor="sensing range" type="int">
    &lt;sensing range&gt; determines how close a player needs to be before
    the creature wakes up. This is done as a square, for reasons of speed.
    Thus, if the &lt;sensing range&gt; is 11, any player that moves within the
    11x11 square of the monster will wake the monster up. If the player
    has stealth, the size of this square is reduced in half plus 1.
  </attribute>
  <attribute arch="attack_movement" editor="attack movement" type="doublelist:attack_type,move_type"> 
	FIXME: copy documentation from define.h 
  </attribute>
  <attribute arch="run_away" editor="run at % health" type="int">
    This is a percentage based value in the range 0-100.
    The creature will attempt to run from the attacker when it's
    health points drops below this percentage of max health.
  </attribute>
</section>

<section name="resistance">
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
<section name="protect">
  <attribute arch="protect_impact" editor="shield impact %" length="15" type="int">
    This adds resistance against physical damage from clubs, maces
    or a simple fist. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_slash" editor="shield slash %" length="15" type="int">
    This adds resistance against physical damage from swords and claws.
    The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_cleave" editor="shield cleave %" length="15" type="int">
    This adds resistance against physical damage from axes and
    halbards. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_pierce" editor="shield pierce %" length="15" type="int">
    This adds resistance against physical damage from arrows and
    rapier weapons. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_weapon_magic" editor="shield w.magic %" length="15" type="int">
    This adds resistance against (physical) weapon magic damage.
    Attention! Weaponmagic is a very powerful attacktype which
    is derived from the power of artifact weapons.
    This kind of resistance must not be easy to get.
    The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_fire" editor="shield fire %" length="15" type="int">
  </attribute>
  <attribute arch="protect_cold" editor="shield cold %" length="15" type="int">
  </attribute>
  <attribute arch="protect_electricity" editor="shield electricity %" length="15" type="int">
  </attribute>
  <attribute arch="protect_poison" editor="shield poison %" length="15" type="int">
  </attribute>
  <attribute arch="protect_acid" editor="shield acid %" length="15" type="int">
  </attribute>
  <attribute arch="protect_magic" editor="shield magic %" length="15" type="int">
  </attribute>
  <attribute arch="protect_mind" editor="shield mind %" length="15" type="int">
  </attribute>
  <attribute arch="protect_body" editor="shield body %" length="15" type="int">
  </attribute>
  <attribute arch="protect_psionic" editor="shield psionic %" length="15" type="int">
  </attribute>
  <attribute arch="protect_force" editor="shield force %" length="15" type="int">
  </attribute>
  <attribute arch="protect_nether" editor="shield nether %" length="15" type="int">
  </attribute>
  <attribute arch="protect_chaos" editor="shield chaos %" length="15" type="int">
  </attribute>
  <attribute arch="protect_death" editor="shield death %" length="15" type="int">
  </attribute>
  <attribute arch="protect_chaos" editor="shield chaos %" length="15" type="int">
  </attribute>
  <attribute arch="protect_holy" editor="shield holy %" length="15" type="int">
  </attribute>
  <attribute arch="protect_corruption" editor="shield corruption %" length="15" type="int">
  </attribute>         	
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="npc message" type="text">
  </attribute>
</type>

<!--####################################################################-->
<type number="81" name="Spawn Point">
  <ignore>
    <attribute arch="material" />
    <attribute arch="material_real" />
    <attribute arch="nrof" />
    <attribute arch="value" />
    <attribute arch="unpaid" />
    <attribute arch="identified" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Spawn points are used to spawn monsters.
    After the spawn point is set, one or more
    mobs can be added to the spawn points inventory. 
    By changing the monster type from MONSTER to
    SPAWN POINT MOB, the mob will used as prototyp
    for a spawn. The map maker can set some options,
    like chance to spawn. Is a spawn monster is generate
    and then slain, the spawn point will try to generate
    another one. ]]>
  </description>
  <attribute arch="speed" editor="speed" type="float">
    The &lt;speed&gt; determines how often a spawn point will
    control himself and/or the mob. If there is no mob, the
    spawn point will try to spawn a mob.
  </attribute>
  <attribute arch="last_grace" editor="spawn chance" type="int">
  Defines the base spawn chance. Value 0 means spawn
  try every actice phase. -1 means no spawn try.
  Values >0 means spawn chance is 1/value+1.
  </attribute>
  <attribute arch="sp" editor="forced spawn" type="int">
    If -1 at start, the spawn point will do a normal spawn.
    If set to 0-9999, the spawn point will be forced to spawn
    the mob with the nearest set chance (lower or same value)
    ONE TIME when the spawn point is called the first time.
    See SPAWN POINT MOB objects for more information.
  </attribute>
  <attribute arch="last_heal" editor="spawn range" type="int">
    Size of an area around the spawn point where the mob should 
    be placed randomly. If this value is set to 0, spawn point
    will find no free place. If set to 1, it test the space where
    the spawn point itself is. Increasing the value will start a search
    around the spot, starting in the south. value 2 search spot 0,-1,
    value 3 spot 1,-1, 4 = 0,-1 ... 
    Warning: The Test will ONLY be done for the head - so careful when
    inserting big monsters on the map. Depending on the "free" area,
    the spawn point will drop the mob somewhere in the free area.
  </attribute>
</type>
<!--####################################################################-->
<type number="83" name="Spawn Point Mob">
  <ignore>
    <attribute arch="material" />
    <attribute arch="material_real" />
    <attribute arch="nrof" />
    <attribute arch="speed_left" />
    <attribute arch="value" />
    <attribute arch="unpaid" />
    <attribute arch="identified" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Spawn Point Mobs are Monsters, put in the inventory
    of a spawn point and used as prototyp for map spawn.
    The spawn point will set a copy of this object on the map,
    reseting it to a normal MONSTER. ]]>
  </description>
  <use><![CDATA[
    Monsters play a central role in most maps. Choosing the right
    combination of monsters for your map is vital:
    <UL>
    <LI> Place only monsters of slightly varying (increasing) strength.
         It's no fun to play for two hours just to find out the last
         monster is unbeatable. Similar, it's not exciting to fight orcs
         after passing a room of dragons.<br>
         This rule applies only for linear maps (one room after the other),
         with treasure at the end. You can sprinkle the treasure around,
         or make non-linear maps - That is often more entertaining. 
    <LI> Places with high level monsters must not be easy to reach.
         Balrogs, Dragonmen and the likes should be at the end of a quest,
         not at the beginning. 
    <LI> Don't stick monsters together that tend to kill each other.
         Fire- and cold dragons in one room for example is a bad idea.
         By weakening and killing each other they are easy prey for players,
         not worth the experience they hold.
    <LI> Create your own monsters, especially for "boss"-type monsters.
         Having stage-bosses guarding treasure is a lot of fun when done right.
         Avoid to create monsters with completely non-intuitive abilities:
         Don't give ice-spells to firedragons or vice versa. Don't add
         draining attack to trolls, etc. Additionally, you should inform the
         player before he bumps right into some very special/unusual monster.
    <LI> Last but not least: Always keep an eye on the experience your monsters
         hold. Design your maps in a way that high experience
         is always well-defended. Don't make large rooms full with only one kind
         of monster. Keep in mind the different abilities/techniques players
         can use.
    </UL>
    I know it's impossible to make the perfectly balanced map. There's always
    some part which is found too easy or too hard for a certain kind of player.
    Just give it your best shot. And listen to feedback from players if you
    receive some. :-) ]]>
  </use>
  <attribute arch="alive" value="1" type="fixed" />
  <attribute arch="randomitems" editor="treasurelist" type="treasurelist">
    When the monster is killed, items from the treasurelist will
    drop to the ground. This is a common way to reward players
    for killing (masses of) monsters.

    Note that you can always put items into the monster's
    inventory. Those will drop-at-kill just like the stuff
    from the &lt;treasurelist&gt;.
  </attribute>
  <attribute arch="level" editor="level" type="int">
    A monster's &lt;level&gt; is the most important attribute.
    &lt;level&gt; affects the power of a monster in various ways.
  </attribute>
  <attribute arch="race" editor="race" type="string">
    Every monster should have a race set to cathegorize it.
    The monster's &lt;race&gt; can have different effects:
    Slaying weapons inflict tripple damage against enemy races
    and holy word kills only enemy races of the god.
  </attribute>
  <attribute arch="exp" editor="experience" type="int">
    When a player kills this monster, he will get exactly this
    amount of &lt;experience&gt;. The experience will flow into
    the skill-cathegory the player used for the kill.

    If you create special monsters of tweaked strenght/abilities,
    always make sure that the &lt;experience&gt; is set to a
    reasonable value. Compare with existing arches to get a feeling
    what reasonable means. Keep in mind that spellcasting monsters
    are a lot harder to kill than non-spellcasters!
  </attribute>
  <attribute arch="speed" editor="speed" type="float">
    The &lt;speed&gt; determines how fast a monster will both move
    and fight. High &lt;speed&gt; makes a monster considerably stronger.
    If the start value is negative but the speed counter becomes a 
    random start value. This will avoid for generated objects of same 
    type thats they act totally synchron.
  </attribute>
  <attribute arch="other_arch" editor="breed monster" type="string">
    This only takes effect if &lt;multiply&gt; is enabled. The monster will
    create a &lt;breed monster&gt; every once in a while. &lt;breed monster&gt;
    can be set to any valid arch-name of a monster. Multipart monster
    should not be used.
  </attribute>
  <attribute arch="generator" editor="multiply" type="bool">
    Monsters with &lt;generator&gt; enabled will create a &lt;breed monster&gt;
    every once in a while. Mice are a good example for this effect.
    If enabled, you must also set &lt;breed monster&gt;.
  </attribute>
  <attribute arch="invulnerable" editor="invulnerable" type="bool">
    This mob will NEVER take any damage - so it can't die by damage.
  </attribute>
  <attribute arch="no_attack" editor="never attack" type="bool">
    This mob will NEVER attack or fight back. Its permanent unaggressive.
  </attribute>
  <attribute arch="flying" editor="flying" type="bool">
    Flying monsters won't get slowed down in rough terrain
    and they won't be affected by movers.
  </attribute>
  <attribute arch="undead" editor="undead" type="bool">
    Several spells only affect undead monsters:
    turn undead, banish undead, holy word, etc.
  </attribute>
  <attribute arch="carrying" editor="carries weight" type="int">
    If a monster has something in the inventory, this
    value can be set to reflect the slowdown due to
    the carried weight.
  </attribute>
<section name="spawn-settings">
  <attribute arch="object_int1" editor="chance to spawn" type="int">
    The spawn point will use a random number between 0-9999 to
    find a usable mob to spawn. If this value is nearest but
    not higher, this mob is selected. A number of 0 and only one
    mob in the spawn point means this mob is spawned always. A 
    number of 5000 means a 50% chance to spawn.
  </attribute>
  <attribute arch="last_eat" editor="darkness to spawn" type="int">
    The monster will a.) only spawn when this dark settings are same
    like the map darkness or world darkness (outdoor flag set) is equal.
    b.) if the monster is set from the spawn point and the darkness change
    to a invalid value, the spawn point remove the monster.
    A positive darkness value means "if higher".
    A negative darkness value means "if lower" from absolute value.
    A value of 4 means monster will be shown until darkness drops to 4 or lower.
    A value of -4 means monster will be shown until darkness is 4 or higher.
    Note that this is a exclusive notation. 0 means "show always" (default).
  </attribute>
</section>
<section name="melee">
  <attribute arch="dam" editor="damage" type="int">
    A value of 50 will be handled as 5.0, a value of 55 = 5.5.
    Among other parameters, &lt;damage&gt; affects how much melee damage
    a monster inflicts. &lt;damage&gt; is used as base value for damage per
    hit. &lt;level&gt;, &lt;speed&gt;, &lt;weapon class&gt; and resistances also
    take effect on the melee damage of a monster.
  </attribute>
  <attribute arch="wc" editor="weapon class" type="int">
    Monsters of low &lt;weapon class&gt; are more likely to really hit
    their opponent. &lt;weapon class&gt; can be considered the "counterpiece"
    to &lt;armour class&gt;.
    Note that the monster's level further improves weapon class:
    "real weapon class" = &lt;weapon class&gt; - &lt;level&gt;
  </attribute>
  <attribute arch="hp" editor="health points" type="int">
    The &lt;health points&gt; of a monster define how long it takes to
    kill it. With every successful hit from an opponent, health points
    get drained - The monster dies by zero health points.
    If the value '-1' is set, the monster will start out with full
    health. How much that is depends on &lt;max health&gt;.
  </attribute>
  <attribute arch="wc_range" editor="wc hit range" type="int">
    This value is set to 20 from the server when == 0. Its the
    The server will add a random value between 0 ad wc_range to the wc.
    If that is higher as the target ac, the target is hit. As higher
    wc_range is as 20, as more dangerous and more often a mob will hit.
    Because the mobile level is added to wc too, a wc_range of 40 will
    let the monster hit VERY often even against the best armours.
  </attribute>
  <attribute arch="maxhp" editor="max health" type="int">
    &lt;max health&gt; is the maximum amount of &lt;health points&gt; this
    monster can have.

    Important: This is a relative value, dependant on level
    A value of 50 will be handled as 5.0, a value of 55 = 5.5.
    The in-game value is (roughly) calculated as follows:
    "real max health" = &lt;max health&gt; * (&lt;level&gt; + 3)/10
  </attribute>
  <attribute arch="ac" editor="armour class" type="int">
    Monsters of low &lt;armour class&gt; are less likely to get hit from
    their opponent. &lt;armour class&gt; can be considered the "counterpiece"
    to &lt;weapon class&gt;.
    Values typically range between +20 (very bad) to -20 (quite good).
    Note that the monster's level further improves armour class:
    "real armour class" = &lt;armour class&gt; - &lt;level&gt;
  </attribute>
  <attribute arch="Con" editor="healing rate" type="int">
    Monsters regenerate this many hit points each move. Each time the
    monster has a move, it gets &lt;healing rate&gt; health points back.
    Hence, &lt;movement speed&gt; has great effect on the monster's healing
    rate as well.
  </attribute>
  <attribute arch="hitback" editor="hitback" type="bool">
    Monsters with &lt;hitback&gt; enabled hurt the attacker in proportion
    to the amount of damage the *attacker* inflicted. This damage
    is additional to the regular melee damage of the monster.
    As far as I know, hitback uses acid attacktype, and it only takes
    effect if the monster actually has acid attacktype at it's disposal.
    Acid spheres for example use this feature.
  </attribute>
  <attribute arch="one_hit" editor="one hit only" type="bool">
    Monsters with &lt;one hit only&gt; dissapear after one successful hit
    to a player.
  </attribute>
</section>

<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>

<section name="spellcraft">
  <attribute arch="can_cast_spell" editor="can cast spell" type="bool">
    If &lt;can cast spell&gt; is disabled, the monster cannot cast any spell.
    Only wands/rods/etc can be used, given the appropriate abilities.
  </attribute>
  <attribute arch="sp" editor="spellpoints" type="int">
    Like players, monsters need &lt;spellpoints&gt; to do magic. Monsters use
    them for both wizard- and prayer-spells. However, this value defines
    only the amount of *initial* spellpoints the monster starts with.
    When creating a spellcasting monster, remember that &lt;max spellpoints&gt;
    and &lt;spellpoint regen.&gt; are more important.
    If &lt;spelloints&gt; are set to '-1', the monster will start out with
    maxed spellpoints.
    &lt;spellpoints&gt;.
  </attribute>
  <attribute arch="maxsp" editor="max spellpoints" type="int">
    &lt;max spellpoints&gt; is the maximum number of spellpoints a monster
    can hold. Setting this to high values has little effect unless
    the monster has a decent &lt;spellpoint regen.&gt;, or the spell
    "regenerate mana" at it's disposal.

    Important: This is a relative value, dependant on monster level.
    The in-game value is calculated as follows:
    "real max spellpoints" = &lt;max spellpoints&gt; * (&lt;level&gt; + 1)
  </attribute>
  <attribute arch="Pow" editor="spellpoint regen." type="int">
    Monsters regenerate this many spellpoints each move. Each time the
    monster has a move, it gets &lt;spellpoint regen.&gt; spellpoints back.
    Hence, &lt;movement speed&gt; has great effect on the monster's
    spellpoint regeneration as well.

    To make a real tough spellcasting monster, the rate of spellpoint
    regeneration is most important. If your monster is still not casting
    fast enough, give it the spell-ability of "regenerate mana".
    That, paired with high &lt;max spellpoints&gt;, is the ultimate thing.
  </attribute>
  <attribute arch="magic" editor="casting delay" type="int">
  The casting delay this monster invoke every cast.
  This is cumulative added to the spell default casting delay.
  </attribute>
  <attribute arch="path_attuned" editor="attuned paths" type="bitmask_spellpath">
    Click on the &lt;attuned paths&gt; button to select spellpaths.
    The creature will get attuned to the specified spellpaths.
  </attribute>
  <attribute arch="path_repelled" editor="repelled paths" type="bitmask_spellpath">
    Click on the &lt;repelled paths&gt; button to select spellpaths.
    The creature will get repelled to the specified spellpaths.
  </attribute>
  <attribute arch="path_denied" editor="denied paths" type="bitmask_spellpath">
    Click on the &lt;denied paths&gt; button to select spellpaths.
    The creature won't be able to cast spells of the specified paths.
  </attribute>
</section>

<section name="ability">
  <attribute arch="terrain_flag" editor="can move on" type="bitmask_terrain">
    These settings define on which kind of terrain this
    creature can move. If nothing is set, the creature
    can walk on land surface.
  </attribute>
  <attribute arch="Dex" editor="use ability 1/" type="int">
    The &lt;use ability&gt; value is a 1/x chance that the monster
    *try* to use per active tick a special ability like spellcasting,
    throwing, etc.
  </attribute>
  <attribute arch="Int" editor="detect hidden" type="int">
    The &lt;detect hidden&gt; value gives monsters the ablitity to find
    hidden/invisible creatures. Higher values make for better
    detection-skills. Enabling &lt;see invisible&gt; makes this value
    obsolete.
  </attribute>
  <attribute arch="see_invisible" editor="see invisible" type="bool">
    A monster with the ability to &lt;see invisible&gt; cannot be fooled
    with by invisible or hiding players. This flag is a must-have
    for high-level monsters. When a monster is unable to detect
    invisible players, it can be killed without fighting back.
  </attribute>
  <attribute arch="can_see_in_dark" editor="see in darkness" type="bool">
    A monster with the ability to &lt;see in darkness&gt; cannot be fooled
    by spells of darkness or dark maps. This flag is a "should-have"
    for high-level monsters. When a monster is unable to see in
    darkness, players can cast darkness and sneak around it safely.
  </attribute>
  <attribute arch="can_use_weapon" editor="can use weapons" type="bool">
  </attribute>
  <attribute arch="can_use_bow" editor="can use bows" type="bool">
  </attribute>
  <attribute arch="can_use_armour" editor="can use armour" type="bool">
  </attribute>
  <attribute arch="can_use_ring" editor="can use rings" type="bool">
  </attribute>
  <attribute arch="can_use_range" editor="can use rods/wands" type="bool">
    If set, this creature can use range weapons like
    rods, wands, staves and horns.
  </attribute>
  <attribute arch="can_use_scroll" editor="can use scrolls" type="bool">
  </attribute>
  <attribute arch="can_use_skill" editor="can use skills" type="bool">
  </attribute>
</section>

<section name="behave">
  <attribute arch="unaggressive" editor="unaggressive" type="bool">
    &lt;unaggressive&gt; monsters do not attack players unless attacked first.
  </attribute>
  <attribute arch="friendly" editor="friendly" type="bool">
    &lt;friendly&gt; monsters help the player, attacking any
    non-friendly monsters in range.
  </attribute>
  <attribute arch="random_move" editor="random movement" type="bool">
    Monsters with this flag enabled move around at random.
    Specifically, that means they do not approach enemy players
    when agressive, but they never stand still either.
  </attribute>
  <attribute arch="item_race" editor="random move range X" type="int">
   if random_move is set, this determinates a ABS() value of x position
   the creatures can move away from the spawn point.
  </attribute>
  <attribute arch="item_level" editor="random move range Y" type="int">
   if random_move is set, this determinates a ABS() value of y position
   the creatures can move away from the spawn point.
  </attribute>
  <attribute arch="stand_still" editor="stand still" type="bool">
    Monsters which &lt;stand still&gt; won't move to leave their position.
    When agressive, they will attack all enemies who get close to
    them. This behaviour is commonly known from castle guards.

    When lining up &lt;stand still&gt;-monster in order to "defend"
    something: Be aware that such monsters are rather easy to kill.
    It's good for low level maps, but not much more.
  </attribute>
  <attribute arch="sleep" editor="asleep" type="bool">
    Being &lt;asleep&gt;, a monster won't move unless a player enters the
    &lt;sensing range&gt; of the monster. Usually the sensing range is
    larger than the players line of sight. Due to that, in most cases
    the player won't ever notice weither a monster was asleep or not.
  </attribute>
  <attribute arch="will_apply" editor="misc. actions" type="bitmask_will_apply">
    This entry defines which kinds of environment actions the
    creature is able to perform.
  </attribute>
  <attribute arch="pick_up" editor="pick up" type="bitmask_pick_up">
    Click on the &lt;pick up&gt; button and select which types of objects
    the creature should try to pick up.

    Note also that if &lt;can use armor&gt;, &lt;can use weapon&gt;, &lt;can use ring&gt;...
    etc are set, then the creature will pick up the matching items even
    if this is not set here.
  </attribute>
  <attribute arch="Wis" editor="sensing range" type="int">
    &lt;sensing range&gt; determines how close a player needs to be before
    the creature wakes up. This is done as a square, for reasons of speed.
    Thus, if the &lt;sensing range&gt; is 11, any player that moves within the
    11x11 square of the monster will wake the monster up. If the player
    has stealth, the size of this square is reduced in half plus 1.
  </attribute>
  <attribute arch="attack_movement" editor="attack movement" type="doublelist:attack_type,move_type"> 
	FIXME: copy documentation from define.h 
  </attribute>
  <attribute arch="run_away" editor="run at % health" type="int">
    This is a percentage based value in the range 0-100.
    The creature will attempt to run from the attacker when it's
    health points drops below this percentage of max health.
  </attribute>
</section>

<section name="resistance">
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
<section name="protect">
  <attribute arch="protect_impact" editor="shield impact %" length="15" type="int">
    This adds resistance against physical damage from clubs, maces
    or a simple fist. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_slash" editor="shield slash %" length="15" type="int">
    This adds resistance against physical damage from swords and claws.
    The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_cleave" editor="shield cleave %" length="15" type="int">
    This adds resistance against physical damage from axes and
    halbards. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_pierce" editor="shield pierce %" length="15" type="int">
    This adds resistance against physical damage from arrows and
    rapier weapons. The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_weapon_magic" editor="shield w.magic %" length="15" type="int">
    This adds resistance against (physical) weapon magic damage.
    Attention! Weaponmagic is a very powerful attacktype which
    is derived from the power of artifact weapons.
    This kind of resistance must not be easy to get.
    The number is a percent-value in the range 0-100.
  </attribute>
  <attribute arch="protect_fire" editor="shield fire %" length="15" type="int">
  </attribute>
  <attribute arch="protect_cold" editor="shield cold %" length="15" type="int">
  </attribute>
  <attribute arch="protect_electricity" editor="shield electricity %" length="15" type="int">
  </attribute>
  <attribute arch="protect_poison" editor="shield poison %" length="15" type="int">
  </attribute>
  <attribute arch="protect_acid" editor="shield acid %" length="15" type="int">
  </attribute>
  <attribute arch="protect_magic" editor="shield magic %" length="15" type="int">
  </attribute>
  <attribute arch="protect_mind" editor="shield mind %" length="15" type="int">
  </attribute>
  <attribute arch="protect_body" editor="shield body %" length="15" type="int">
  </attribute>
  <attribute arch="protect_psionic" editor="shield psionic %" length="15" type="int">
  </attribute>
  <attribute arch="protect_force" editor="shield force %" length="15" type="int">
  </attribute>
  <attribute arch="protect_nether" editor="shield nether %" length="15" type="int">
  </attribute>
  <attribute arch="protect_chaos" editor="shield chaos %" length="15" type="int">
  </attribute>
  <attribute arch="protect_death" editor="shield death %" length="15" type="int">
  </attribute>
  <attribute arch="protect_chaos" editor="shield chaos %" length="15" type="int">
  </attribute>
  <attribute arch="protect_holy" editor="shield holy %" length="15" type="int">
  </attribute>
  <attribute arch="protect_corruption" editor="shield corruption %" length="15" type="int">
  </attribute>         	
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="npc message" type="text">
  </attribute>
</type>

<!--####################################################################-->
<type number="65" name="Mood Floor">
  <ignore>
    <attribute arch="damned" />
    <ignore_list name="system_object" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    As the name implies, mood floors can change the "mood" of
    a monsters/NPC. For example, an unagressive monster could be
    turned mad to start attacking. Similar, an agressive monster
    could be calmed. ]]>
  </description>
  <use><![CDATA[
    Mood floors are absolutely cool for NPC interaction. To make an
    unaggressive monster/NPC attack, put a creator with "other_arch
    furious_floor" under it. Connect the creator to a magic_ear, so the
    player speaks a keyword like "stupid sucker" - and the monster attacks.
    <br><br>
    To turn an NPC into a pet, put a charm_floor under it and connect
    it directly to a magic_ear. Then the player speaks a keyword like
    "help me" - and the NPC joins him as pet.
    <br><br>
    (Of course you must always give clear hints about keywords!
    And there is no reason why you couldn't use a button/lever/pedestal
    etc. instead of a magic_ear.) ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="last_sp" editor="mood" type="list_mood">
    &lt;mood&gt; is used to determine what will happen to the
    monster when affected by the mood floor:

    &lt;mood&gt; 'furious': Makes all monsters aggressive

    &lt;mood&gt; 'angry': As above but pets are unaffected
 
    &lt;mood&gt; 'calm': Makes all monsters unaggressive
 
    &lt;mood&gt; 'sleep': Puts all monsters to sleep
 
    &lt;mood&gt; 'charm': Turns monster into a pet of person
                    who triggers the square. This setting is not
                    enabled for continous operation, you need to
                    insert a &lt;connection&gt; value!
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    This should only be set in combination with 'charm' mood.
    Normally, monsters are affected by the mood floor as soon as they
    step on it. But charming (monster -&gt; pet) is too powerful,
    so it needs to be activated. 

    Typically it is connected to an altar, for buying a "hireling".
    But a powerful pet could as well be the reward for solving a
    quest. Or even better: It could be *part* of a quest!
  </attribute>
</type>

<!--####################################################################-->
<type number="40" name="Mover">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Movers move the objects above them. However, only living objects
    are affected (monsters/NPCs always, players optional). Movers have
    a direction, so players can be made to move in a pattern, and so
    can monsters. Motion is involuntary. Additionally, players or
    monsters can be "frozen" while ontop of movers so that they MUST
    move along a chain of them.
    <br><br>
    Multisquare monsters can be moved as well, given
    enough space. Movers are usually invisible. ]]>
  </description>
  <use><![CDATA[
    NEVER EVER consider a mover being unpassable in the backwards
    direction. Setting force movement makes it seemingly impossible
    but there is still a trick: One player can push a second player
    past the mover, in opposite to the mover's direction! The more
    movers, the more players needed. Hence, don't make a treasure
    room that is surrounded by movers instead of solid walls/gates.
    <br><br>
    Btw, it does not make a difference putting movers above or
    below the floor. Moreover, movers that are set to be invisible
    cannot be discovered with the show_invisible spell.
    <br><br>
    Note that Movers and Directors are seperate objects, even though
    they look and act similar. Directors only do spells/missiles,
    while movers only do living creatures (depending on how it
    is set: monsters and players). ]]>
  </use>
  <attribute arch="attacktype" editor="TODO - DON'T USE" type="bool">
    If forced movement is enabled, the mover "freezes" anyone it
    moves (so they are forced to move along a chain).
    For players there is no way to escape this forced movement,
    except being pushed by a second player.
  </attribute>
  <attribute arch="maxsp" editor="freeze duration" type="int">
    The player will be "frozen" for that many moves.
    If &lt;freeze duration&gt; is zero, with &lt;forced movement&gt;
    enabled, then &lt;freeze duration&gt; gets assigned the
    "default value" 2 automatically.
  </attribute>
  <attribute arch="speed" editor="movement speed" type="float">
    The movement speed value determines how fast a chain of
    these movers will push a player along (default is -0.2).
  </attribute>
  <attribute arch="lifesave" editor="gets used up" type="bool">
    If enabled, the mover gets "used up" after a certain number of moves
    (specified by &lt;number of uses&gt;). If disabled, the mover works infinitly.
  </attribute>
  <attribute arch="hp" editor="number of uses" type="int">
    This value has only a meaning if &lt;gets used up&gt; is set:
    &lt;number of uses&gt; is the number of times minus one, that it
    will move a creature before disappearing. (It will move
    someone &lt;number of uses&gt;+1 times, then vanish). 
  </attribute>
<section name="targets">
  <attribute arch="level" editor="move players" type="bool">
    If &lt;move players&gt; is enabled, both players and monsters will be
    moved. In the arches' default it is disabled - thus ONLY monsters
    get moved. Remember that "monsters" includes NPCs!

    This feature provides you with the possibility to make NPCs
    literally "come to life". Example: The player is talking with an
    NPC, speaking a certain keyword. This triggers a magic_ear and
    activates creators, creating (per default: monster-only) movers
    under the NPC's feet. The NPC starts "walking" on a predefined
    route! Note that it's useful to set this NPC immune to everything,
    preventing the player to push the NPC off his trace.
  </attribute>
  <attribute arch="walk_on" editor="move walking creatures" type="bool">
    This should always be set.
  </attribute>
  <attribute arch="fly_on" editor="move flying creatures" type="bool">
    Move flying creatures enabled means all flying (living)
    objects will get moved too. If disabled, only walking
    (non-flying) creatures will get moved.
  </attribute>
</section>
</type>

<!--####################################################################-->
<type number="17" name="Pedestal">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
 </ignore>
  <description><![CDATA[
    Pedestals are designed to detect certain types of living objects or keys.
    When a predefined type of living creature steps on the pedestal, the
    connected value is triggered.

    There are 2 ways to use a Pedestal:
    1.) if the slaying text = "player", then the Pedestal triggers when
        a player move over it.
    2.) If not "player", the slaying text is compared to the race name
        of a object above it. ]]>
  </description>
  <use><![CDATA[
    If you want to create a place where only players of a certain race
    can enter, put a teleporter over your pedestal. So the teleporter is
    only activated for players of the matching race. Do not use gates,
    because many other players could sneak in.  ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="match text" type="string">
    the &lt;match race&gt; defines the object we're looking for. If &lt;match race&gt;
    matches the monster's or the player's race, we have a match.
    Yes, pedestals can detect a player's race! E.g. you could create a
    place where only fireborns can enter, by setting "slaying unnatural". 

    If it is set to "player", any player stepping on the pedestal
    is a match. Very useful if you want to open a gate for players
    but not for monsters.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    When the pedestal is triggered, all objects with the same
    connection value get activated.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="walk_off" value="1" type="fixed" />
</type>
<!--####################################################################-->
<type number="32" name="Trigger Pedestal">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Trigger Pedestals are like normal Pedestal but they reset after they got triggered
    automatically. In the reset time they can't be triggered again.
    They are designed to detect certain types of living objects or keys.
    When a predefined type of living creature steps on the pedestal, the
    connected value is triggered.

    There are 2 ways to use a Pedestal:
    1.) if the slaying text = "player", then the Pedestal triggers when
        a player move over it.
    2.) If not "player", the slaying text is compared to the race name
        of a object above it. ]]>
  </description>
  <use><![CDATA[
    If you want to create a place where only players of a certain race
    can enter, put a teleporter over your pedestal. So the teleporter is
    only activated for players of the matching race. Do not use gates,
    because many other players could sneak in.  ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="slaying" editor="match text" type="string">
    the &lt;match race&gt; defines the object we're looking for. If &lt;match race&gt;
    matches the monster's or the player's race, we have a match.
    Yes, pedestals can detect a player's race! E.g. you could create a
    place where only fireborns can enter, by setting "slaying unnatural". 

    If it is set to "player", any player stepping on the pedestal
    is a match. Very useful if you want to open a gate for players
    but not for monsters.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    When the pedestal is triggered, all objects with the same
    connection value get activated.
  </attribute>
  <attribute arch="last_eat" editor="connection flag1" type="bool">
    Depending on the target object, setting this flag or not
    can have different effects. See the object you are connecting
    to this.
  </attribute>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="walk_off" value="1" type="fixed" />
</type>

<!--####################################################################-->
<type number="94" name="Pit">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Pits are holes, transporting the player when he walks (and falls) into them.
    A speciality about pits is that they don't transport the player to
    the exact destination, but within a two-square radius of the destination
    (never on blocked squares).<br>
    Optionally, pits can get closed and opened, similar to gates.<br><br>
    Monsters and items are affected by pits just as well as players.
    Even multipart monsters can fall through them, given enough space. ]]>
  </description>
  <use><![CDATA[
    Pits can add interesting effects to your map. When using them, make
    sure to use them in a "logical way": Pits should always drop the
    player to some kind of lower level. They should not be used to
    randomly interconnect maps like teleporters do. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="connected" editor="connection" type="int">
    When a &lt;connection&gt; value is set, the pit can be opened/closed
    by activating the connection.
  </attribute>
  <attribute arch="slaying" editor="exit path" type="string">
    The exit path defines the map that the player is transferred to.
    You can enter an absolute path, beginning with '/' (for example
    "/peterm/FireTemple/fire1"). It can also be a relative path, not beginning
    with '/' (On the map "/peterm/FireTemple/Fire2" for example I could use the
    relative path "Fire1"). Use relative paths whenever possible! Note that
    upper/lower case must always be set correctly. However, please use lower
    case only. 
    It is well possible to have an exit pointing to the same map that the exit
    is on. If slaying is not set in an exit, the player will see a message like
    "the exit is closed".
    If the slaying field is blank, the destination will be the same map.
  </attribute>
  <attribute arch="hp" editor="destination X" type="int">
    The pit will transport creatures (and items) randomly into a two-square
    radius of the destination coordinates.
    If the destination square becomes blocked, the pit will act like
    being filled up and not work anymore!
  </attribute>
  <attribute arch="sp" editor="destination Y" type="int">
    The pit will transport creatures (and items) randomly into a two-square
    radius of the destination coordinates.
    If the destination square becomes blocked, the pit will act like
    being filled up and not work anymore!
  </attribute>
  <attribute arch="last_sp" editor="transfer flag" type="bool">
    If the transfer flag is set, the destination values are used in a
    special way - instead of marking a fixed position, they are used to
    define a "drop area" where the player drops randomly.
  </attribute>
  <attribute arch="wc" editor="position state" type="int">
    The &lt;position state&gt; defines the position of the gate:
    Zero means completely open/down, the "number of animation-steps" (usually
    about 6 or 7) means completely closed/up state. I suggest you don't
    mess with this value - Leave the default in place.
  </attribute>
  <attribute arch="walk_on" editor="swallow walking" type="bool">
    If set, all walking creatures will fall into the pit.
    This does NOT need to be set for closed pits!
  </attribute>
  <attribute arch="fly_on" editor="swallow flying" type="bool">
    If set, all flying creatures will fall into the pit as well.
    This is not the behaviour expected from a pit, and it should
    only be used for map-mechanisms (e.g. for transporting flying
    monsters).
    An interesting side-effect: If this flag is enabled, spell
    effects like fire/snow also make their way through the pit.
  </attribute>
</type>

<!--####################################################################-->
<type number="7" name="Poison Food">
  <ignore>
    <attribute arch="cursed" />
    <attribute arch="damned" />
    <attribute arch="speed_left" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When eating, the player's stomache is drained by 1/4 of food
    and the player is poisoned (a DOT poisoned force is inserted
    in the player). Until the DOT (DOT = Damage Over Time) force 
    wears out, the player gets damage all x ticks. 
    Also stats and resists can be effected.]]>
  </description>
  <attribute arch="dam" editor="damage" type="int">
    A poison with a positive &lt;damage&gt; value will hit the player
    all ticks with it adjusted by level.
  </attribute>
  <attribute arch="level" editor="poison level" type="int">
    Set the power level of the poison. This can be range from 1 to 110.
  </attribute>
  <attribute arch="last_heal" editor="# of DOT ticks" type="int">
   When a poison force is created after someone is effected
   by this poison food this value sets how often the DOT force
   applies damage before it wear out. 
   (DOT = Damage Over Time)
  </attribute>
  <attribute arch="speed_left" editor="speed of DOT ticks" type="float">
   This value sets the speed of the DOT ticks. Careful - a value
   of 1 means damage every game tick - thats can be 9 per second!
   (DOT = Damage Over Time)
  </attribute>
  <attribute arch="cursed" editor="cursed" type="bool">
    Turn positive effects negative and then double all
    negative effects.
  </attribute>
  <attribute arch="damned" editor="damned" type="bool">
    Turn positive effects negative and then trible all
    negative effects.
  </attribute>
  <section name="Force Effects">
  <attribute arch="Str" editor="strength" type="int">
    The player's strentgh will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise/fall by the given value while
    wearing this piece of equipment.
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise/fall by the given value
    while wearing this piece of equipment.
  </attribute>
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
  </attribute>
  <attribute arch="resist_weaponmagic" editor="resist w.magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_magic" editor="resist magic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_death" editor="resist death %" length="15" type="int">
  </attribute>
  <attribute arch="resist_ghosthit" editor="resist ghosthit %" length="15" type="int">
  </attribute>
  <attribute arch="resist_life_steal" editor="resist life leech %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
  <attribute arch="resist_time" editor="resist time %" length="15" type="int">
  </attribute>
  <attribute arch="resist_chaos" editor="resist chaos %" length="15" type="int">
  </attribute>
  <attribute arch="resist_godpower" editor="resist godpower %" length="15" type="int">
  </attribute>
  <attribute arch="resist_purity" editor="resist purity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_nether" editor="resist nether %" length="15" type="int">
  </attribute>
  <attribute arch="resist_sonic" editor="resist sonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_demonic" editor="resist demonic %" length="15" type="int">
  </attribute>
  <attribute arch="resist_psionic" editor="resist psionic %" length="15" type="int">
  </attribute>
</section>
</type>
<!--####################################################################-->
<type number="86" name="Organic">
  <ignore>
    <attribute arch="speed_left" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    These are body parts which can't be eaten (dragon scales, hair...).]]>

  </description>
</type>
<!--####################################################################-->
<type number="5" name="Potion">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    The player can drink these and gain various kinds of benefits
    (/penalties) by doing so. ]]>
  </description>
  <use><![CDATA[
    One potion should never give multiple benefits at once. ]]>
  </use>
  <attribute arch="level" editor="potion level" type="int">
    If the potion contains a spell, the spell is cast at this level.
    For other potions it should be set at least to 1.
  </attribute>
  <attribute arch="sp" editor="spell" type="spell">
    When a player drinks this potion, the selected spell
    will be casted (once). This should work for any given spell.
    last_eat must be 0 to invoke the spell effect!
  </attribute>
  <attribute arch="last_eat" editor="special potion" type="int">
  If this value is 0, the potion will invoke a spell effect
  when use. If set to -1, the potion will create a force when used
  and grant the user with the effects set (stats boni/mali, resists,..).
  Values >0 are used intern for special potions - don't play around with
  it here!
  </attribute>
  <attribute arch="last_grace" editor="throw speed" type="int">
  When throwable, this value in ticks defines how long it needs
  thats the player can throw something again. The value is in ticks.
  8 ticks are a second.
  </attribute>
  <attribute arch="last_sp" editor="throw range" type="int">
    This value is supposed to be the base &lt;throw range&gt;,
    The value is only valid for potions who can be thrown.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
<section name="stats">
  <attribute arch="Str" editor="strength" type="int">
    The player's strentgh will rise/fall by the given value for permanent
    (of course there is an upper limit). Generally there shouldn't be stat
    potions granting more than one stat. Cursed potions will subtract the
    stats if positive.
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise/fall by the given value for permanent
    (of course there is an upper limit). Generally there shouldn't be stat
    potions granting more than one stat. Cursed potions will subtract the
    stats if positive.
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise/fall by the given value for permanent
    (of course there is an upper limit). Generally there shouldn't be stat
    potions granting more than one stat. Cursed potions will subtract the
    stats if positive.
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise/fall by the given value for permanent
    (of course there is an upper limit). Generally there shouldn't be stat
    potions granting more than one stat. Cursed potions will subtract the
    stats if positive.
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise/fall by the given value for permanent
    (of course there is an upper limit). Generally there shouldn't be stat
    potions granting more than one stat. Cursed potions will subtract the
    stats if positive.
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise/fall by the given value for permanent
    (of course there is an upper limit). Generally there shouldn't be stat
    potions granting more than one stat. Cursed potions will subtract the
    stats if positive.
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise/fall by the given value for permanent
    (of course there is an upper limit). Generally there shouldn't be stat
    potions granting more than one stat. Cursed potions will subtract the
    stats if positive.
  </attribute>
</section>
<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>
<section name="resistance">
  <attribute arch="resist_impact" editor="resist impact %" length="15" type="int">
    The player's resistance to bash hits will rise by this value in percent
    (range -100 till +100). The effect is only temporare.
    Cursed potions will make negative resistance.. very nasty in combat!
  </attribute>
  <attribute arch="resist_slash" editor="resist slash %" length="15" type="int">
    The player's resistance to sword hits will rise by this value in percent
    (range -100 till +100). The effect is only temporare.
    Cursed potions will make negative resistance.. very nasty in combat!
  </attribute>
  <attribute arch="resist_pierce" editor="resist pierce %" length="15" type="int">
    The player's resistance to pierce hits will rise by this value in percent
    (range -100 till +100). The effect is only temporare.
    Cursed potions will make negative resistance.. very nasty in combat!
  </attribute>
  <attribute arch="resist_cleave" editor="resist cleave %" length="15" type="int">
    The player's resistance to axe hits will rise by this value in percent
    (range -100 till +100). The effect is only temporare.
    Cursed potions will make negative resistance.. very nasty in combat!
  </attribute>
  <attribute arch="resist_fire" editor="resist fire %" length="15" type="int">
  </attribute>
  <attribute arch="resist_cold" editor="resist cold %" length="15" type="int">
  </attribute>
  <attribute arch="resist_electricity" editor="resist electricity %" length="15" type="int">
  </attribute>
  <attribute arch="resist_acid" editor="resist acid %" length="15" type="int">
  </attribute>
  <attribute arch="resist_poison" editor="resist poison %" length="15" type="int">
  </attribute>
  <attribute arch="resist_confusion" editor="resist confusion %" length="15" type="int">
  </attribute>
  <attribute arch="resist_fear" editor="resist fear %" length="15" type="int">
  </attribute>
  <attribute arch="resist_drain" editor="resist drain %" length="15" type="int">
  </attribute>
  <attribute arch="resist_depletion" editor="resist deplete %" length="15" type="int">
  </attribute>
  <attribute arch="resist_slow" editor="resist slow %" length="15" type="int">
  </attribute>
  <attribute arch="resist_paralyze" editor="resist paralyze %" length="15" type="int">
  </attribute>
  <attribute arch="resist_blind" editor="resist blinding %" length="15" type="int">
  </attribute>
</section>
</type>

<!--####################################################################-->
<type number="156" name="Power Crystal">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Power crystals can store a player's mana:
    When the player applies the crystal with full mana, half of
    it flows into the crystal. When the player applies it with
    lacking mana, the crystal replenishes the player's mana. ]]>
  </description>
  <attribute arch="sp" editor="initial mana" type="int">
    &lt;initial mana&gt; is the amount of spellpoints that the
    crystal holds when the map is loaded.
  </attribute>
  <attribute arch="maxsp" editor="mana capacity" type="int">
    The &lt;mana capacity&gt; defines how much mana can be stored
    in the crystal. This is what makes the crystal interesting.
    Wizard-players will always seek for crystals with large
    capacities.
  </attribute>
</type>

<!--####################################################################-->
<type number="13" name="Projectile">
  <ignore>
    <attribute arch="sub_type" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Projectiles like arrows/crossbow bolts are used as ammunition
    for shooting weapons.
    <br><br>
    It's very easy to add new pairs of weapons &amp; projectiles.
    Just set matching &lt;ammunition class&gt; both for shooting
    weapon and projectile. ]]>
  </description>
  <use><![CDATA[
    If you want to create new kinds of projectiles, you could
    add an alchemical receipe to create these.

    Don't create new pairs of weapons &amp; projectiles unless
    they really fullfill a useful purpose. In fact, even bows
    and crossbows are rarely ever used. ]]>
  </use>
  <attribute arch="sub_type" editor="ammunition type" type="list_projectile_st">
    The &lt;ammunition type&gt; defines which kind of shooting weapon
    is able to fire these projectiles. Note that the
    &lt;ammunition class&gt; has to match as well.
  </attribute>
  <attribute arch="race" editor="ammunition class" type="string">
    Only shooting weapons with matching &lt;ammunition class&gt;
    (and matching &lt;ammunition type&gt;) can fire these projectiles.
    For arrows set "arrows", for crossbow bolts set
    "crossbow bolts" (big surprise).

    ** a bow with race == NULL count as "broken". **
    In certain cases, the ammunition class is displayed in the game.
    Hence, when you create a new ammunition class, choose an
    intuitive name like "missiles", "spirit bolts" - whatever.

    You can also make special containers holding these projectiles
    by setting the &lt;container class&gt; to match your &lt;ammunition class&gt;.
  </attribute>
  <attribute arch="slaying" editor="slaying race" type="string">
    Slaying means the weapon does tripple (3x) damage to monsters
    of the specified race. If &lt;slaying race&gt; matches an arch name,
    only monsters of that archtype receive tripple damage.
    Tripple damage is very effective.
  </attribute>
  <attribute arch="dam" editor="damage" type="int">
    The projectile &lt;damage&gt; significantly affects the damage
    done. Damage can be further increased by the shooting
    weapon's attributes.
  </attribute>
  <attribute arch="last_grace" editor="shooting speed" type="int">
  After shooting the player can't do a 2nd shoot for some time.
  This value + the bow shooting delay (different bows can have
  different delay) will terminate the time the player must wait.
  The value is in ticks. 8 ticks are one second.
  </attribute>
  <attribute arch="last_sp" editor="throw/shooting range" type="int">
    This value is supposed to be the base &lt;throw or shooting range&gt;,
    For ammunition like arrows or bolts, the value is a base value which
    is added to the shooting weapon base value (bow, xbow, sling).
  </attribute>
  <attribute arch="wc" editor="weaponclass" type="int">
    This value is supposed to be the base &lt;weaponclass&gt;,
  </attribute>
  <attribute arch="magic" editor="magic bonus" type="int">
    Magic bonus increases chance to hit and damage a little bit.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch="no_drop" editor="don't drop" type="bool">
    When a monster carries a projectile with &lt;don't drop&gt;,
    this item will never drop to the ground but
    vanish instead. If this object is shot, it can still drop
    after hitting an obstacle.
  </attribute>
<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the projectile. This
    could be nice for very special ones.
  </attribute>
</type>

<!--####################################################################-->
<type number="70" name="Ring">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Rings are worn on the hands - one ring each.
    Wearing rings, the object's stats will directly be inherited to
    the player. Usually enhancing his spellcasting potential. ]]>
  </description>
  <use><![CDATA[
    When you create an artifact ring, never forget that players can
    wear <B>two</B> rings! Due to that it is extremely important to
    keep rings in balance with the game.
    <br><br>
    Also keep in mind that rings are generally the wizard's tools.
    They should primarily grant bonuses to spellcasting abilities
    and non-physical resistances. ]]>
  </use>
</type>

<!--####################################################################-->
<type number="3" name="Rod">
  <ignore>
    <attribute arch="title" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A rod contains a spell. The player can use this spell by applying and
    fireing the rod. Rods need time to regenerate their "internal" spellpoints,
    lowering the effectiveness in combat. But unlike wands/scrolls, rods can be
    used endlessly. ]]>
  </description>
  <use><![CDATA[
    Rods with healing/curing spells are extremely powerful. Usually, potions have
    to be used for that purpose. Though, potions are expensive and only good for
    one-time-use.<br> ]]>
  </use>
  <attribute arch="sp" editor="spell" type="spell">
    Sets the &lt;spell&gt; of the rod. Consider twice before handing out special
    rods to players, since they can be used endlessly without any mana cost!
    Rods with heal/ restoration/ protection spells, IF available, MUST be
    very very VERY hard to get!
  </attribute>
  <attribute arch="last_grace" editor="use speed" type="int">
  When fired/used, this value in ticks defines how long it needs
  thats the player can fire it again. The value is in ticks.
  8 ticks are a second.
  </attribute>
  <attribute arch="level" editor="casting level" type="int">
    The casting level of the &lt;spell&gt; determines it's power.
    For attack spells, level should be set to something reasonable.
  </attribute>
  <attribute arch="hp" editor="initial spellpoints" type="int">
    This value represents the initial amount of spellpoints in the rod.
    Naturally, this is quite unimportant.
  </attribute>
  <attribute arch="maxhp" editor="max. spellpoints" type="int">
    When the rod is fully charged up, it will hold this maximum amount of
    spellpoints. Make sure it is enough to cast the contained spell at least
    once. But don't set the value too high, as that might make the rod
    too effective.
  </attribute>
  <attribute arch="make_invisible" editor="make invisible" type="bool">
   When applied the user gets invisible. He can't be seen from player 
   or monster except they have "see invisible" power.
  </attribute>
  <attribute arch="make_ethereal" editor="make ethereal" type="bool">
   When applied the user gets ethereal. He can't still be seen but
   transparent. He can move through walls and doors which has the
   PASS_THRU flag set (like ghosts and other non physical monsters).
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may contain a description of the rod.
  </attribute>
</type>

<!--####################################################################-->
<type number="154" name="Rune &amp; Trap">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A rune is a magical enscription on the dungeon floor. Traps are just
    like runes except they are not magical in nature, and generally have
    a physical attack.
    <br><br>
    Runes hit any monster or person who steps on them for 'dam' damage in
    'attacktype' attack. Alternatively, the rune could contain any spell,
    and will cast this spell when it detonates. Yet another kind is the
    "summoning rune", summoning predefined monsters of any kind, at detonation.
    <br><br>
    Many traps and runes are already defined in the archetypes. ]]>
  </description>
  <use><![CDATA[
    Avoid monsters stepping on your runes. For example, summoning runes
    together with spellcasting- and  attack-runes is usually a bad idea. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="level" editor="rune level" type="int">
    This value sets the level the rune will cast the spell it contains at,
    if applicable. A level 99 rune casts a very, very mean spell of whatever.
    (&lt;rune level&gt; 0 runes won't detonate at all!) 

    Level Also effects how easily a trap may be found and disarmed, and
    how much experience the player gets for doing so. Beware: High level
    runes can be quite a cheap source of experience! So either make them
    tough, or keep the level low.
  </attribute>
  <attribute arch="Cha" editor="visibility" type="int">
    This value determines what fraction of the time the rune is visible:
    It'll be randomly visible 1/&lt;visibility&gt; of the time. Also effects
    how easily the trap may be found.
  </attribute>
  <attribute arch="hp" editor="number of charges" type="int">
    The rune will detonate &lt;number of charges&gt; times before disappearing.
  </attribute>
  <attribute arch="dam" editor="direct damage" type="int">
    &lt;direct damage&gt; specifies how much damage is done by the rune,
    if it doesn't contain a spell. This should be set in reasonable
    relation to the rune's level. 
  </attribute>
<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>
<section name="spellcraft">
  <attribute arch="sp" editor="spell" type="spell">
    The selected &lt;spell&gt; defines the spell in the rune, if any.
    (Many runes and all traps do direct damage).
  </attribute>
  <attribute arch="slaying" editor="spell name" type="string">
    Name of the spell in the rune, if any. Slaying is optional,
    but if present, overrides the &lt;spell&gt; setting.

    For a summoning rune, set &lt;spell name&gt; to "summon evil monster".
  </attribute>
  <attribute arch="maxsp" editor="invoke direction" type="list_direction">
    If set, the rune will cast it's containing spell (if any) in
    this &lt;direction&gt;.In most cases this appears useless because
    the spell directly hits the player.
  </attribute>
  <attribute arch="race" editor="summon monster" type="string">
    If this is set to the arch name of any monster, together with
    &lt;spell name&gt; "summon evil monster", the rune will summon a bunch
    of those on detonation. (dam and attacktype will still be ignored
    in this case). Runes are even capable of summoning multi-square
    monsters, given enough space. You'd better test it though.
  </attribute>
  <attribute arch="maxhp" editor="summon amount" type="int">
    This should only be set to a summoning rune. It will then summon
    that many creatures of the kind &lt;summon monster&gt;.
  </attribute>
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="detonation text" type="text">
    When the rune detonates, this text is displayed to the
    victim. For especially powerful runes, create an appropriate
    thrilling description. ;)
  </attribute>
</type>

<!--####################################################################-->
<type number="106" name="Savebed">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When the player applies a savebed, he is not only saved. Both his
    respawn-after-death and his word-of-recall positions are pointing
    to the last-applied savebed. ]]>
  </description>
  <use><![CDATA[
    Put savebed locations in towns, do not put them into dungeons.
    It is absolutely neccessary that a place with savebeds is 100% secure.
    That means:
    <UL>
    <LI> Monsters must not be able to reach the savebeds under any circumstances!
    <LI> If there are NPCs around, make sure they have the friendly-flag set.
    <LI> Insert a relyable exit! Make sure there is no possibility that
         players get trapped in a savebed location.
    <LI> If possible, mark the whole site as no-spell area (Insert this
         arch called "dungeon_magic" everywhere). This is not required,
         but it makes the place much more safe.
    </UL> ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="no_magic" value="1" type="fixed" />
  <attribute arch="damned" value="1" type="fixed" />
</type>

<!--####################################################################-->
<type number="14" name="Shooting Weapon">
  <ignore>
    <attribute arch="sub_type" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Schooting weapons like bows/crossbows are used to shoot projectiles
    (arrows/bolts). Shooting weapons and normal (melee) weapons can be
    wielded both at the same time. Like with any other equipment,
    stats/bonuses from shooting weapons are directly inherited to the player.
    <br><br>
    It's very easy to add new pairs of weapons &amp; projectiles.
    Just set matching &lt;ammunition class&gt; both for shooting
    weapon and projectile. ]]>
  </description>
  <use><![CDATA[
    Shooting weapons should not add bonuses in general. There's already
    enough "equipment-slots" doing that: swords, rings, amulets, girdles etc.
    Schooting weapons should especially not add bonuses to the player
    that have nothing to do with schooting. A Wisdom bonus on a bow
    is crap for example! A name like "Longbow of great Wisdom" doesn't help
    - still crap. ]]>
  </use>
  <attribute arch="sub_type" editor="weapon type" type="list_shootweapon_st">
    The &lt;weapon type&gt; characterizes the type of shooting weapon this is.
    Each of these weapon types requires an according skill to be used.
  </attribute>
  <attribute arch="race" editor="ammunition class" type="string">
    Only projectiles with matching &lt;ammunition class&gt; can be fired
    with this weapon. For normal bows set "arrows", for normal
    crossbows set "crossbow bolts".

    In certain cases, the ammunition class is displayed in the game.
    Hence, when you create a new ammunition class, choose an
    intuitive name like "missiles", "spirit bolts" - whatever.
  </attribute>
  <attribute arch="sp" editor="shooting speed" type="int">
  After shooting the player can't do a 2nd shoot for some time.
  This value + the arrow shooting delay (different arrows can have
  different delay) will terminate the time the player must wait.
  The value is in ticks. 8 ticks are one second.
  </attribute>
  <attribute arch="last_sp" editor="shooting range" type="int">
    This value is supposed to be the base &lt;shooting range&gt;.
    It is added to the base range of the used ammunition (arrow, bolt,...)    
  </attribute>
  <attribute arch="dam" editor="base damage" type="int">
    The &lt;base damage&gt; significantly affects the damage done
    by using this weapon. This damage is added to the projectile
    damage and then (if &lt;ignore strength&gt; disabled) a bonus
    according to the player's strength is added.
  </attribute>
  <attribute arch="wc" editor="weaponclass" type="int">
    This value is supposed to be the base &lt;weaponclass&gt;,
    but it seems to have rather little effect.
    High values are good here, low values bad.
  </attribute>
  <attribute arch="wc_range" editor="wc hit range" type="int">
    The wc_range of a archery weapon is copied to the projectile
    which is fired with it!
  </attribute>
  <attribute arch="item_level" editor="required level" type="int">
    If &lt;required level&gt; is set to a value greater zero, players cannot
    use the weapon unless they meet this level in the skill cathegory
    specified by &lt;level required in&gt;.

    For example: &lt;required level&gt; = 15, &lt;level required in&gt; = physical
    means the player cannot use the weapon unless he is equal or greater
    level 15 in the physical skill cathegory.
  </attribute>
  <attribute arch="item_skill" editor="level required in" type="list_item_skill">
    This attribute specifies in which skill cathegory the player
    must meet the &lt;required level&gt; in order to use the weapon.
    It is meaningless when &lt;required level&gt; is zero/unset.

    For example: &lt;required level&gt; = 15, &lt;level required in&gt; = physical
    means the player cannot use the weapon unless he is equal or greater
    level 15 in the physical skill cathegory.
  </attribute>
  <attribute arch="no_strength" editor="ignore strength" type="bool">
    Usually the player's strentgh takes effect on the damage
    done by the shooting weapon. If &lt;ignore strength&gt; is set,
    the player's strength is ignored.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch="make_invisible" editor="make invisible" type="bool">
   When applied the user gets invisible. He can't be seen from player 
   or monster except they have "see invisible" power.
  </attribute>
  <attribute arch="make_ethereal" editor="make ethereal" type="bool">
   When applied the user gets ethereal. He can't still be seen but
   transparent. He can move through walls and doors which has the
   PASS_THRU flag set (like ghosts and other non physical monsters).
  </attribute>
<section name="stats">
  <attribute arch="Str" editor="strength" type="int">
    The player's strentgh will rise/fall by the given value
    while wearing this shooting weapon.
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise/fall by the given value
    while wearing this shooting weapon.
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise/fall by the given value
    while wearing this shooting weapon.
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise/fall by the given value
    while wearing this shooting weapon.
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise/fall by the given value
    while wearing this shooting weapon.
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise/fall by the given value while
    wearing this shooting weapon.
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise/fall by the given value
    while wearing this shooting weapon.
  </attribute>
</section>
<section name="bonus">
  <attribute arch="luck" editor="luck bonus" type="int">
    With positive luck bonus, the player is more likely to
    succeed in all sorts of things (spellcasting, praying,...).
    Unless the &lt;luck bonus&gt; is very high, the effect will be
    barely visible in-game. Luck bonus on one piece of equipment
    should never exceed 3, and such bonus should not be too
    frequently available.
  </attribute>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;Magic bonus&gt; improves the quality of the shooting weapon.
    I'm not sure what exactly is increased - maybe weaponclass?
    However, &lt;magic bonus&gt; seems to have a little bit of positive
    influence on your chance to hit.
  </attribute>
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text describes the weapons's "story". Every decent artifact weapon
    should have such a description.
  </attribute>
</type>

<!--####################################################################-->
<type number="111" name="Scroll">
  <ignore>
    <attribute arch="title" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Scrolls contain spells (similar to spell-potions). Unlike potions,
    scrolls require a certain literacy skill to read successfully.
    Accordingly, for a successful reading, a small amount of
    experience is gained. Scrolls allow only one time usage, but
    usually they are sold in bulks. ]]>
  </description>
  <use><![CDATA[
    For low level quests, scrolls of healing/curing-spells
    can be a nice reward. At higher levels, scrolls become less
    and less useful. ]]>
  </use>
  <attribute arch="level" editor="casting level" type="int">
    The spell of the scroll will be casted at this level.
    This value should always be set, at least to 1.
  </attribute>
  <attribute arch="sp" editor="spell" type="spell">
    When a player/monster applies this scroll, the selected &lt;spell&gt;
    will be casted (once). This should work for any given spell.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
</type>

<!--####################################################################-->
<type number="33" name="Shield">
  <import_type name="Amulet" />
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wearing a shield, the object's stats will directly be inherited to
    the player. Shields usually provide good defense, only surpassed
    by brestplate armour. Resistances on shields aren't uncommon either. ]]>
  </description>
  <use><![CDATA[
    Feel free to create your own special artifacts. However, it is very
    important that you keep your artifact in balance with existing maps. ]]>
  </use>
  <attribute arch="magic" editor="magic bonus" type="int">
    &lt;magic bonus&gt; works just like ac, except that it can be improved by
    "scrolls of Enchant Armour" or reduced by acid. It is less useful
    than direct armour-class bonus on the shield.
  </attribute>
</type>

<!--####################################################################-->
<type number="68" name="Shop Floor">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Shop floor is used for shops. It acts like a combination of the
    common floor- and the treasure type: When the map is loaded,
    randomitems (depending on the setings) are generated on it.
    These items are all flagged as unpaid.
    When a player drops an item onto shop floor, the item becomes
    unpaid and the player receives payment according to the item's
    selling-value.
    Shopfloor always prevents magic (To hinder players from burning
    or freezing the goods). ]]>
  </description>
  <use><![CDATA[
    Tile your whole shop-interior space which shop floor.
    (That assures players receive payment for dropping items).
    Place shop mats to enter/leave the shop, and make sure
    there is no other exit than the shop mat. ]]>
  </use>
  <attribute arch="is_floor" value="1" type="fixed" />
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="no_magic" value="1" type="fixed" />
  <attribute arch="auto_apply" editor="generate goods" type="bool">
    If enabled, items will appear on this square when the map is loaded.
    You need to specify a &lt;treasurelist&gt; to define what kinds of items
    are generated. The items will be unpaid.
  </attribute>
  <attribute arch="randomitems" editor="treasurelist" type="treasurelist">
    This entry determines what kind of treasure will appear, when
    &lt;generate goods&gt; is enabled. Look into /crossfire/share/crossfire/treasures
    for details about existing treasurelists.
  </attribute>
  <attribute arch="exp" editor="quality level" type="int">
    The &lt;quality level&gt; will be used for the quality of the generated
    goods. If zero/unset, &lt;quality level&gt; 5 is used. Usually this value
    doesn't need to be set, unless you want extraordinarily good/bad
    quality. If you want to make a shop with very high quality, meaybe
    charge an entrance fee, or make the shop hard-to-come-by.
    Note that &lt;quality level&gt; mainly affects chance of magic bonus
    and appearance of artifact-items.
  </attribute>
</type>

<!--####################################################################-->
<type number="69" name="Shop Mat">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Shop mats are used for entering/leaving shops. You should always
    have exactly TWO shop mats on your shop-map: One inside the
    "shopping-area" and one outside. Shop mats don't use exit paths/
    or -destinations. When stepping onto a shopmat the player gets beamed
    to the nearest other mat. If the player has unpaid items in his
    inventory, the price gets charged from his coins automatically.
    If the player has insufficient coins to buy his unpaid items, he
    is unable to pass any shopmat (So he has to drop unpaid items). ]]>
  </description>
  <use><![CDATA[
    As stated above, always place TWO shop mats into your shop.
    Not more and not less than that. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="walk_on" editor="apply by walking" type="bool">
    If set, the player can enter/leave the
    shop by just walking into the shop mat.
  </attribute>
  <attribute arch="fly_on" editor="apply by flying" type="bool">
    If set, the player can enter/leave the
    shop by "flying" into the shop mat.
  </attribute>
</type>

<!--####################################################################-->
<type number="98" name="Sign &amp; MagicMouth">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    The purpose of a sign or magic_mouth is to display a certain message to
    the player. There are three ways to have the player get this message:
    The player walking onto it (-&gt; magic_mouth), the player pressing &lt;a&gt;pply
    (-&gt; sign) or the player triggering a button/handle/etc (-&gt; magic_mouth). ]]>
  </description>
  <use><![CDATA[
    Use signs and magic_mouths, plenty of them! Place magic_mouths to add
    some true roleplay feeling to your maps, support your storyline or give
    hints about hidden secrets/dangers. Place signs to provide the player
    with all kinds of useful information for getting along in your maps. ]]>
  </use>
  <attribute arch="container" editor="language" type="list_language">
    The language the sign is written in. Only when it matches the languages
    the player knows, the book can be written.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    When a connection value is set, the message will be printed whenever
    the connection is triggered. This should be used in combination with
    &lt;invisible&gt; enabled and &lt;activate by walking/flying&gt; disabled.
    If activating your magic_mouth this way, the message will not only be
    printed to one player, but all players on the current map.
  </attribute>
  <attribute arch="walk_on" editor="activate by walking" type="bool">
    If set, the player gets the message when walking ontop of the object.
    This is the typical configuration
    for a "magic_mouth": The player walks through a dungeon and suddenly he
    gets a message. Use this to create some roleplay atmosphere, and to inform
    the player about possible dangers or secrets.
  </attribute>
  <attribute arch="fly_on" editor="activate by flying" type="bool">
    If set, the player gets the message when flying (=levitating) ontop
    of the object. Usually this should be set together with walk_on.
  </attribute>
  <attribute arch="food" editor="counter" type="int">
    If a counter-value is set (greater zero), the sign/magic_mouth can be applied
    (printing the message) only that many times. For signs this really shouldn't
    be used, while for magic_mouths it is extremely helpful.
    Monsters walking over the magic_mouth do not decrease the counter.

    Often, you might want to have a message displayed only one time. For example:
    The player enters your map and you put a magic_mouth to tell him about the
    monsters and how dangerous they look and all. Later, when all the monsters
    are killed and the player leaves the map, displaying the same message a
    second time would be silly. &lt;counter&gt; 1 does a perfect job in such cases.
    Otherwise set &lt;counter&gt; zero/unset for infinite use (that is the default).
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="message" type="text">
    This text will be displayed to the player.
  </attribute>
</type>

<!--####################################################################-->
<type number="21" name="Special Key">
  <ignore>
    <attribute arch="material" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When carrying the appropriate special key, a locked door can
    be opened. The key will dissapear.
    <br><br>
    This object-type can also be used for "passport"-like items:
    When walking onto an invetory checker, a gate for example might
    get opened. The "passport" will stay in the player's inventory. ]]>
  </description>
  <use><![CDATA[
    How to make a "passport": You take the special key arch
    (archetype name is "key2"), set the face to something like
    card.111 and the name to "passport" - that's all. The &lt;key string&gt;
    certainly must match with the appropiate inventory checker.
    <br><br>
    Of course you can be creative with names and faces of
    key-objects. A "mysterious crystal" or a "big dragon claw"
    (with appropriate faces) appear more interesting than just
    a "strange key", or "passport". ]]>
  </use>
  <attribute arch="slaying" editor="key string" type="string">
    This string must be identical with the &lt;key string&gt; in the
    locked door, then it can be unlocked. It can also be used
    to trigger inventory checkers.
  </attribute>
  <attribute arch="material" editor="material class" type="bitmask_material">
    For Special Keys, material should always be set to
    "0" (no material) or "256" (adamantite). This prevents
    the key from getting burned or otherwise destroyed.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.

    This can be used if you want to sell apartments on your
    map: Simply sell a unique passport/key, and place
    an inventory checker at the entrance of your apartment.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This will add a description to the object. The player can read
    this text by clicking on the item in his inventory. Use this
    message to describe what the key/passport is good for. A player
    might have 50 different keys on his key-ring. Don't expect
    players to recall their purpose just by their names.
  </attribute>
</type>

<!--####################################################################-->
<type number="85" name="Spellbook">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    By reading a spellbook, the player has a chance of learning the
    contained spell. Once learned from a book, the spell is available
    forever. Spellbooks with high level spells require some skill-level
    to read. ]]>
  </description>
  <use><![CDATA[
    Don't put any of the godgiven spells into a spellbook! These are
    reserved for the followers of the appropriate cults. Handing them
    out in a spellbook would violate the balance between different religions.
    <br><br>
    If you want to have a random spellbook, you must use the arch
    "random_spells" (Treasure-type) instead. ]]>
  </use>
  <attribute arch="sp" editor="spell" type="spell">
    The book will contain the specified spell.
    You could alternatively use the spell name.
  </attribute>
  <attribute arch="slaying" editor="spell name" type="string">
    This string also defines the contained spell (just like
    field above), but here you write the spell's name directly.
    Setting both &lt;spell&gt; and &lt;spell name&gt; makes no sense.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may contain a nice description
    of the spellbook's cover or something.
  </attribute>
</type>

<!--####################################################################-->
<type number="90" name="Spinner">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Spinners change the direction of spell objects and other projectiles
    that fly past. Unlike directors, it does make a difference from what
    angle you shoot into the spinner. The direction of objects flying past
    is always changed by a certain degree.
    The spinner will change the direction of flying objects by
    45 degrees per &lt;direction number&gt;.
    Example: &lt;direction number&gt; 2 means spin 90 degrees clockwise.]]>
  </description>
  <use><![CDATA[
    Spinners are very rarely used. One use of them is in mazes or building
    some puzzle about where to shoot into spinners to shoot somewhere you
    otherwise couldn't.

    When placing spinners on a map with magic walls, make sure the spell-
    projectiles from magic walls don't get to fly in loops. ]]>
  </use>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="fly_on" value="1" type="fixed" />
</type>

<!--####################################################################-->
<type number="138" name="Swamp">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Swamp areas show a special behaviour:
    When a player stands still on a swamp-square for too long,
    he will start to sink in and eventually drown and die.
    Items dropped on the swamp sink in and dissapear.
    Players with knowledge of the woodsman skill are a lot less likely
    to die in the swamp. ]]>
  </description>
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="is_floor" value="1" type="fixed" />
  <attribute arch="is_wooded" value="1" type="fixed" />
  <attribute arch="speed" editor="drowning speed" type="float">
    The higher the &lt;drowning speed&gt;, the faster will players and items
    sink into the swamp. Swamp with very high &lt;drowning speed&gt; can be a nasty
    and unexpected death-trap. Players should get a warning before such areas.
  </attribute>
  <attribute arch="slow_move" editor="slow movement" type="int">
    If &lt;slow movement&gt; is set to a value greater zero, all
    creatures moving over this spot will be slower than normal.

    &lt;slow movement&gt; 1  - rough terrain
    &lt;slow movement&gt; 2  - very rough terrain
    ...
    &lt;slow movement&gt; 5  - default for deep swamp
  </attribute>
</type>

<!--####################################################################-->
<type number="41" name="Teleporter">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    When the player walks into a teleporter, he is transferred to a
    different location. The main difference to the object-type exit
    is the possibility to have teleporters connected to levers/buttons/etc.
    Sometimes teleporters are activated even against the players will.
    <br><br>
    Unlike exits, teleporters can also transfer items and
    monsters to different locations on the same map. ]]>
  </description>
  <use><![CDATA[
    When creating maps, I guess sooner or later you'll want to have
    an invisible teleporter. And in some cases you can't place it 
    under the floor to prevent this.
    <br><br>
    Fortunately, there is a cool trick to make a perfectly invisible
    teleporter: You simply add teleporter functionality to the floor
    itself. That means: You take the floor arch (e.g. "flagstone"),
    set "type 41", and add slaying/hp/sp/connected... everything you need. ]]>
  </use>
  <attribute arch="slaying" editor="exit path" type="string">
    The exit path specifies the map that the player is transferred to.
    &lt;exit path&gt; can be an absolute path, beginning with '/'
    (for example "/peterm/FireTemple/fire1"). It can also be a relative
    path, not beginning with '/' (On the map "/peterm/FireTemple/Fire2"
    for example I could use the relative path "Fire1"). Use relative
    paths whenever possible! Note that upper/lower case must always be
    set correctly. However, please use lower case only.

    If the &lt;exit path&gt; is set, ONLY players can get teleported. If the
    &lt;exit path&gt; is unset (empty), anything can get teleported: Players,
    monsters and items. In this case, the destined map is automatically
    the same map the teleporter is on.
  </attribute>
  <attribute arch="hp" editor="destination X" type="int">
    The exit destinations define the (x, y)-coordinates where the exit
    leads to.

    If both are set to zero and &lt;exit path&gt; is empty, the player will
    get teleported to another, randomly chosen teleporter on the same
    map (Slightly confusing for the player though). Make sure there
    actually *is* a second one in that case.

    If both are set to zero and &lt;exit path&gt; is set, the player will
    be transferred to the "default enter location" of the destined map.
    The latter can be set in the map-properties as "Enter X/Y". Though,
    please DO NOT use that. It turned out to be a source for numerous
    map-bugs.
  </attribute>
  <attribute arch="sp" editor="destination Y" type="int">
    The exit destinations define the (x, y)-coordinates where the exit
    leads to.

    If both are set to zero and &lt;exit path&gt; is empty, the player will
    get teleported to another, randomly chosen teleporter on the same
    map (Slightly confusing for the player though). Make sure there
    actually *is* a second one in that case.

    If both are set to zero and &lt;exit path&gt; is set, the player will
    be transferred to the "default enter location" of the destined map.
    The latter can be set in the map-properties as "Enter X/Y". Though,
    please DO NOT use that. It turned out to be a source for numerous
    map-bugs.
  </attribute>
  <attribute arch="connected" editor="connection" type="int">
    If a connection value is set, the teleporter will be activated
    whenever the connection is triggered. To use this properly,
    &lt;activation speed&gt; must be zero.
  </attribute>
  <attribute arch="speed" editor="activation speed" type="float">
    If the &lt;activation speed&gt; is nonzero, the teleporter will
    automatically be activated in regular time-intervals. Hence, the
    player can just step on it and gets teleported sooner or later.
    The duration between two activates depends on the given value.
    Default in the teleporter arch is &lt;activation speed&gt; 0.1. 

    VERY IMPORTANT: If you want to have your teleporter activated via
    button/handle/magic_ear/etc, you must set &lt;activation speed&gt; to zero!
  </attribute>
</type>

<!--####################################################################-->
<type number="95" name="Trapdoor">
  <ignore>
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Trapdoors are very similar to pits. The difference is that they
    can not be closed. Instead, the weight of the object on the
    trapdoor determines weither it slams the trapdoor open and falls through
    or not.<br>
    Once a trapdoor has been opened (by a creature or items of sufficient
    weight,) it remains open, acting like an opened pit. ]]>
  </description>
  <use><![CDATA[
    Trapdoors should be used in the same fashion as pits:
    They should always drop the victims to some kind of lower level. They
    are not supposed to be used to randomly interconnect maps like teleporters. ]]>
  </use>
  <attribute arch="no_pick" value="1" type="fixed" />
  <attribute arch="walk_on" value="1" type="fixed" />
  <attribute arch="weight" editor="hold weight" type="int">
    This value defines how much weight the trapdoor can hold.
    Once items or creatures are gathered on the trapdoor, with
    a total weight surpassing this value, then the trapdoor will
    open and things start falling through.
  </attribute>
  <attribute arch="slaying" editor="exit path" type="string">
    The exit path defines the map that the player is transferred to.
    You can enter an absolute path, beginning with '/' (for example
    "/peterm/FireTemple/fire1"). It can also be a relative path, not beginning
    with '/' (On the map "/peterm/FireTemple/Fire2" for example I could use the
    relative path "Fire1"). Use relative paths whenever possible! Note that
    upper/lower case must always be set correctly. However, please use lower
    case only. 
    It is well possible to have an exit pointing to the same map that the exit
    is on. If slaying is not set in an exit, the player will see a message like
    "the exit is closed".
    If the slaying field is blank, the destination will be the same map.
  </attribute>
  <attribute arch="hp" editor="destination X" type="int">
    The trapdoor will transport creatures (and items) randomly into
    a two-square radius of the destination coordinates.
    If the destination square becomes blocked, the trapdoor will act like
    being filled up and not work anymore!
  </attribute>
  <attribute arch="sp" editor="destination Y" type="int">
    The trapdoor will transport creatures (and items) randomly into
    a two-square radius of the destination coordinates.
    If the destination square becomes blocked, the trapdoor will act like
    being filled up and not work anymore!
  </attribute>
  <attribute arch="last_sp" editor="transfer flag" type="bool">
    If the transfer flag is set, the destination values are used in a
    special way - instead of marking a fixed position, they are used to
    define a "drop area" where the player drops randomly.
  </attribute>
</type>

<!--####################################################################-->
<type number="4" name="Treasure">
  <ignore>
    <attribute arch="nrof" />
    <attribute arch="title" />
    <attribute arch="value" />
    <attribute arch="weight" />
    <attribute arch="material" />
    <attribute arch="material_real" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    A treasure-object turns into certain randomitems when the map is loaded
    into the game. ]]>
  </description>
  <use><![CDATA[
    About usage of the "random-artifact" treasurelist:
    This will generate powerful stuff like girdles, xray helmets, special
    swords etc. If you put this as reward to your quest, players might be
    motivated to do it more than once. BUT, by doing so they will get a huge
    number of different artifacts! Besides, players will always seek the place
    with the most easy-to-get random artifact and ignore all others.
    My advice: Don't use it! Attract players with good fighting experience
    (from monsters), potions, spellbooks, money, and non-random artifacts.  ]]>
  </use>
  <attribute arch="randomitems" editor="treasurelist" type="treasurelist">
    This entry determines what kind of treasure will appear. Look into
    /crossfire/share/crossfire/treasures for details about existing
    treasurelists.
  </attribute>
  <attribute arch="auto_apply" editor="auto-generate" type="bool">
    "Auto-generate" must be set in order to have the treasure be created
    when the map is loaded.
    If you want to create a random treasure chest, you unset this flag.
    That way, the player has to apply the object (the chest), then the
    treasure is generated.
  </attribute>
  <attribute arch="exp" editor="quality level" type="int">
    The &lt;quality level&gt; will be used for the quality of the generated
    treasure instead of the map difficulty (as was done with shops).
    If zero/unset, the map difficulty will instead be used.
    (Example for comparison: Shop floors generate treasure of
    &lt;quality level&gt; 5 per default).
  </attribute>
</type>

<!--####################################################################-->
<type number="15" name="Weapon">
  <ignore>
    <attribute arch="sub_type" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wielding a weapon, the object's stats will directly be inherited to the
    player. Usually enhancing his fighting-abilities. Non-magical weapons can
    be improved with scrolls. ]]>
  </description>
  <use><![CDATA[
    If you create artifacts (equipment) with stats- or resistance-bonus:
    Keep playbalance in mind! Such items mustn't be reachable without hard
    fighting AND questing. ]]>
  </use>
  <attribute arch="sub_type" editor="weapon type" type="list_weapon_st">
    The &lt;weapon type&gt; characterizes the type of weapon.
    Each of these weapon types requires an according skill to be used.
    You should always set this correctly when creating new weapons for
    your maps.
  </attribute>
  <attribute arch="dam" editor="damage" type="int">
    The damage value is used as base value for how much damage the weapon
    does per hit. The actual damage involves more dependencies,
    like wielder's level and defender's level. Look at existing weapons
    to get a feel for the range of weapon damage values.
  </attribute>
  <attribute arch="slaying" editor="slaying race" type="string">
    Slaying means the weapon does tripple (3x) damage to monsters of the
    specified race. If &lt;slaying race&gt; matches an arch name (e.g. "big_dragon"),
    only monsters of that archtype are hit with tripple damage.

    No god blessings are possible for weapons with a race set in this entry
    (That's because god blessings add tripple damage against their own
    enemy races). Tripple damage is very effective.
  </attribute>
  <attribute arch="weapon_speed" editor="weapon speed" type="float">
    The weapon speed determines how often the wielder can swing the weapon
    during a certain period of time. The lower the faster, &lt;weapon speed&gt; 1
    is best (that is lightning- fast). A typical average value is 8.
    Speed and damage should be kept in reasonable relation.
  </attribute>
  <attribute arch="wc" editor="weapon class" type="int">
    The weapon class value adds to the overall weapon class of the wielder's
    melee attacks. Weapon class improves the chance of hitting the opponent.
  </attribute>
  <attribute arch="magic" editor="magic bonus" type="int">
    For a weapon, magic bonus works just like weapon class, except that
    magic bonus can be improved by the gods or reduced by acid. Hence, it is
    less useful than direct weapon class value on a weapon.
  </attribute>
  <attribute arch="item_level" editor="required level" type="int">
    If &lt;required level&gt; is set to a value greater zero, players cannot
    use the weapon unless they meet this level in the skill cathegory
    specified by &lt;level required in&gt;.

    For example: &lt;required level&gt; = 15, &lt;level required in&gt; = physical
    means the player cannot use the weapon unless he is equal or greater
    level 15 in the physical skill cathegory.
  </attribute>
  <attribute arch="item_skill" editor="level required in" type="list_item_skill">
    This attribute specifies in which skill cathegory the player
    must meet the &lt;required level&gt; in order to use the weapon.
    It is meaningless when &lt;required level&gt; is zero/unset.

    For example: &lt;required level&gt; = 15, &lt;level required in&gt; = physical
    means the player cannot use the weapon unless he is equal or greater
    level 15 in the physical skill cathegory.
  </attribute>
  <attribute arch="lifesave" editor="save life" type="bool">
    An item with this flag enabled will save the players life
    for one time: When the player is wearing this item and his
    healthpoints reach zero, the item dissapears, replenishing
    half of the player's health.

    An item with &lt;save life&gt; should not have
    any decent additional bonuses!
  </attribute>
  <attribute arch="make_invisible" editor="make invisible" type="bool">
   When applied the user gets invisible. He can't be seen from player 
   or monster except they have "see invisible" power.
  </attribute>
  <attribute arch="make_ethereal" editor="make ethereal" type="bool">
   When applied the user gets ethereal. He can't still be seen but
   transparent. He can move through walls and doors which has the
   PASS_THRU flag set (like ghosts and other non physical monsters).
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
<section name="attack">
  <attribute arch="attack_impact" editor="impact attack %" length="15" type="int">
    "Impact" is damage from clubs, maces or a simple fist.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_slash" editor="slash attack %" length="15" type="int">
    "Slash" is sword type damage. Creatures with large
    claws can also do slash damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_cleave" editor="cleave attack %" length="15" type="int">
    "Cleave" is axe and halbard damage.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_pierce" editor="pierce attack %" length="15" type="int">
    "Pierce" attacks come from arrows or rapier weapons.
    For example: arrows, bolts, daggers, spears.
    It belongs to the group of physical attacks.
  </attribute>
  <attribute arch="attack_weaponmagic" editor="w.magic attack %" length="15" type="int">
    Weapon magic is a very special, hard to resist and powerful attack type.
    It derives from the magical power of great artifact weapons like
    the Excalibur. This damage type is mostly bound to a physical source,
    so it is counted to the physical damage types.
  </attribute>
  <attribute arch="attack_fire" editor="fire attack %" length="15" type="int">
    Fire belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_electricity" editor="electricity attack %" length="15" type="int">
    Electricity belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_cold" editor="cold attack %" length="15" type="int">
    Cold belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_acid" editor="acid attack %" length="15" type="int">
    Acid belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_poison" editor="poison attack %" length="15" type="int">
    Poison belongs to the group of elemental attacks.
  </attribute>
  <attribute arch="attack_magic" editor="magic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_confusion" editor="confusion attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_drain" editor="drain attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_ghosthit" editor="ghosthit attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_slow" editor="slow attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_paralyze" editor="paralyze attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_time" editor="time attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_fear" editor="fear attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_depletion" editor="deplete attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_death" editor="death attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_chaos" editor="chaos attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_godpower" editor="godpower attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_purity" editor="purity attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_blind" editor="blinding attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_life_steal" editor="leech life attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_nether" editor="nether attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_sonic" editor="sonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_demonic" editor="demonic attack %" length="15" type="int">
  </attribute>
  <attribute arch="attack_psionic" editor="psionic attack %" length="15" type="int">
  </attribute>
</section>
<section name="stats">
  <attribute arch="Str" editor="strength" type="int">
    The player's strentgh will rise/fall by the given value
    while wearing this weapon.
  </attribute>
  <attribute arch="Dex" editor="dexterity" type="int">
    The player's dexterity will rise/fall by the given value
    while wearing this weapon.
  </attribute>
  <attribute arch="Con" editor="constitution" type="int">
    The player's constitution will rise/fall by the given value
    while wearing this weapon.
  </attribute>
  <attribute arch="Int" editor="intelligence" type="int">
    The player's intelligence will rise/fall by the given value
    while wearing this weapon.
  </attribute>
  <attribute arch="Pow" editor="power" type="int">
    The player's power will rise/fall by the given value
    while wearing this weapon.
  </attribute>
  <attribute arch="Wis" editor="wisdom" type="int">
    The player's wisdom will rise/fall by the given value while
    wearing this weapon.
  </attribute>
  <attribute arch="Cha" editor="charisma" type="int">
    The player's charisma will rise/fall by the given value
    while wearing this weapon.
  </attribute>
</section>
<section name="misc">
  <attribute arch="luck" editor="luck bonus" type="int">
    With positive luck bonus, the player is more likely to
    succeed in all sorts of things (spellcasting, praying,...).
    Unless the &lt;luck bonus&gt; is very high, the effect will be
    barely visible in-game. Luck bonus on one piece of equipment
    should never exceed 3, and such bonus should not be too
    frequently available.
  </attribute>
  <attribute arch="hp" editor="health regen." type="int">
    Positive &lt;health regen.&gt; bonus speeds up the
    player's healing process. Negative values slow it down.
  </attribute>
  <attribute arch="sp" editor="mana regen." type="int">
    Positive &lt;mana regen.&gt; bonus speeds up the
    player's mana regeneration. Negative values slow it down.
  </attribute>
  <attribute arch="grace" editor="grace regen." type="int">
    Positive &lt;grace regen.&gt; bonus speeds up the
    player's grace regeneration. Negative values slow it down.
    Since grace can be regenerated rather easy with praying,
    additional &lt;grace regen.&gt; bonus should be VERY RARE!!
  </attribute>
  <attribute arch="food" editor="food bonus" type="int">
    Positive &lt;food bonus&gt; slows down the player's digestion,
    thus he consumes less food. Negative values speed it up.

    Note that food is consumed not only for "being alive", but
    also for healing and mana-regeneration.
    &lt;food bonus&gt; only affects the amount of food consumed
    for "being alive". Hence, even with high &lt;food bonus&gt;,
    during a fight a player can run out of food quickly.
  </attribute>
  <attribute arch="xrays" editor="xray vision" type="bool">
    Xray vision allows the player to see through obstacles
    in a two-square-wide radius. This is extremely helpful and
    desireable, so don't give it away for cheap on equipment.
  </attribute>
  <attribute arch="stealth" editor="stealth" type="bool">
    Stealth allows the player to move silently.
    This comes to effect if a player turns himself
    invisible and tries to sneak around monsters.
    (At least that was the idea behind it)
  </attribute>
  <attribute arch="reflect_spell" editor="give reflect spells" type="bool">
    If a player is wearing any piece of equipment with
    the ability to &lt;reflect spells&gt;, all kinds of
    spell-bullets and -beams will bounce off him.
    This works only about 90% of all times, to
    avoid players being completely immune to certain
    types of attacks.

    This is a very powerful ability and it
    shouldn't be handed out cheap!
  </attribute>
  <attribute arch="reflect_missile" editor="give reflect missiles" type="bool">
    If a player is wearing any piece of equipment with
    the ability to &lt;reflect missiles&gt;, all kinds of
    projectiles (e.g. arrows, bolts, boulders) will
    bounce off him. This works only about 90% of all
    times, to avoid players being completely immune to
    certain types of attacks.
  </attribute>
  <attribute arch="terrain_type" editor="support terrain" type="bitmask_terrain">
    The bearer of this item can move in every terrain that
    is set by &lt;support terrain&gt;. Such abilities like
    "water walking", "fire walking" etc are almost priceless
    as they open access to an entire new plane of the daimonin
    world.

    Artifacts with &lt;support terrain&gt; attributes are VERY
    SPECIAL and they must be well-balanced!!!
  </attribute>
  <attribute arch="path_attuned" editor="attuned paths" type="bitmask_spellpath">
    Click on the &lt;attuned paths&gt; button to select spellpaths.
    The player will get attuned to the specified spellpaths
    while wearing this weapon.
  </attribute>
  <attribute arch="path_repelled" editor="repelled paths" type="bitmask_spellpath">
    Click on the &lt;repelled paths&gt; button to select spellpaths.
    The player will get repelled to the specified spellpaths
    while wearing this weapon.
  </attribute>
  <attribute arch="path_denied" editor="denied paths" type="bitmask_spellpath">
    Click on the &lt;denied paths&gt; button to select spellpaths.
    The specified spellpaths will be denied to the player
    while wearing this weapon.
  </attribute>
</section>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text describes the weapons's "story". Every decent artifact weapon
    should have such a description.
  </attribute>
</type>

<!--####################################################################-->
<type number="102" name="Random Drop Container">
  <ignore>
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Random drop container are used from spawn points.
    Put in the inventory of a spawn mobs (the "copy" inside
    the spawn point) there will be a random check against
    this object. This check will be from 0-x. If the check
    is higher the the value of "drop chance" of this object,
    the items INSIDE this object (set in the map editor) are
    given the mob. This is checked every time a mob is spawned.
    Different mobs inside a spawn point can hold different and
    more as one random drop container. Only stacking of random
    drop containers is not allowed. ]]>
  </description>
  <attribute arch="container" editor="drop chance" type="int">
    Set to a range from 0 to x. 0 means droped always.
    999999 means a chance from 1/999999 to drop.
  </attribute>
</type>
<!--####################################################################-->
<type number="109" name="Wand &amp; Staff">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    Wands contain a certain spell. The player can apply (ready) and
    fire the wand. After a defined number of casts, the wand is
    "used up". It is possible to recharge a wand with scrolls of
    charging, but usually that isn't worth the cost. ]]>
  </description>
  <use><![CDATA[
    Wands are quite seldomly used. The reason prolly is that they're
    generally not cost-efficient. Handing out high-level wands with
    powerfull special spells isn't a good idea either, because of
    the recharge ability.
    <br><br>
    For low levels, staffs of healing/cure and word of recall are
    quite desireable though. Ideal rewards for low level quests. ]]>
  </use>
  <attribute arch="sp" editor="spell" type="spell">
    The &lt;spell&gt; specifies the contained spell.
  </attribute>
  <attribute arch="level" editor="casting level" type="int">
    The &lt;casting level&gt; of the wand determines it's power.
    An average level for wands in shops is about 10.
  </attribute>
  <attribute arch="food" editor="number of charges" type="int">
    The wand can be used &lt;number of charges&gt; times before it is
    used up. It can be recharged with scrolls of charging.
  </attribute>
  <attribute arch="last_grace" editor="use speed" type="int">
  When fired/used, this value in ticks defines how long it needs
  thats the player can fire it again. The value is in ticks.
  8 ticks are a second.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch="make_invisible" editor="make invisible" type="bool">
   When applied the user gets invisible. He can't be seen from player 
   or monster except they have "see invisible" power.
  </attribute>
  <attribute arch="make_ethereal" editor="make ethereal" type="bool">
   When applied the user gets ethereal. He can't still be seen but
   transparent. He can move through walls and doors which has the
   PASS_THRU flag set (like ghosts and other non physical monsters).
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may contain a description of the wand.
  </attribute>
</type>
<!--####################################################################-->
<type number="118" name="Event Object">
  <ignore>
    <attribute arch="sub_type" />
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    The event object can hold script or other events triggered
    in the game. The event object is inserted in the target object
    and when a action or situation match the event object settings,
    the event is triggered.]]>
  </description>
  <attribute arch="sub_type" editor="event ID" type="list_event">
    Set the event where this event object should trigger.
  </attribute>
  <attribute arch="name" editor="plugin name" type="string">
    Name of the plugin which should be triggered by this event object.
  </attribute>
  <attribute arch="race" editor="script name" type="string">
    Name of the script of data file we want submit to the
    plugin when the event is triggered.
  </attribute>
  <attribute arch="slaying" editor="event option" type="string">
    This string is given the event as option string.
  </attribute>
</type>
<!--####################################################################-->
<type number="129" name="Quest Trigger">
  <ignore>
    <attribute arch="sub_type" />
    <attribute arch="one_drop" />
  </ignore>
  <description><![CDATA[ The Quest trigger is used to syncronize and
drive quests. If the player/trigger has a quest trigger with same
settings, the item is triggered. Inside a mob inventory the quest
trigger works as a container for the real quest objects.]]>
  </description>
  <attribute arch="sub_type" editor="quest trigger" type="list_q_trigger">
    Type of the quest trigger event. Default normal setting works is for
    'normal' quests which are controled by scripts.
    Kill events are quests like 'kill 10 goblins and come back'.
    Container events need a trigger object inside the container.
  </attribute>
  <attribute arch="name" editor="quest id string" type="string">
    ID string which identifies the quest.
  </attribute>
  <attribute arch="magic" editor="quest id number" type="int">
    A quest can have different steps. Only when the quest id string AND number
    are equal, the quest event is triggered.
  </attribute>
  <attribute arch="last_heal" editor="quest id step" type="int">
    If triggered, the quest trigger sets the trigger quest object to this value.
  </attribute>
  <attribute arch="one_drop" editor="one drop quest" type="bool">
    If set, the trigger don't is connected to a quest but its a one drop quest.
    The object(s) inside are checked against the one drop quest container.
    If the item is not in and the trigger level is lower or equal to the
    players level, the one drop item is given the player.
  </attribute>
  <attribute arch="level" editor="one drop level" type="int">
    If set, the player only gets the one drop item when his level is higher or
    equal this setting.
  </attribute>
</type>
<!--####################################################################-->
<type number="131" name="Quest Object">
  <ignore>
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[A Quest Object is a generic object which fakes a real
object. Its used as a dummy object when we send someone to get that sword or 
that food.]]>
  </description>
  <attribute arch="no_pass" editor="blocking passage" type="bool">
    If set, the object cannot be passed by players nor monsters.
  </attribute>
  <attribute arch="can_roll" editor="moveable" type="bool">
    If set, the object is able to "roll", so it can be pushed around.
    This setting is used for boulders and barrels.
  </attribute>
  <attribute arch="unique" editor="unique item" type="bool">
    Unique items exist only one time on a server. If the item
    is taken, lost or destroyed - it's gone for good.
  </attribute>
  <attribute arch="startequip" editor="godgiven item" type="bool">
    A godgiven item vanishes as soon as the player
    drops it to the ground.
  </attribute>
  <attribute arch_begin="msg" arch_end="endmsg" editor="description" type="text">
    This text may describe the object.
  </attribute>
</type>
<!--####################################################################-->
<type number="119" name="Waypoint Object">
  <ignore>
    <attribute arch="ac" />
    <attribute arch="sub_type" />
    <attribute arch="damned" />
    <ignore_list name="non_pickable" />
    <ignore_list name="default_setting" />
  </ignore>
  <description><![CDATA[
    The waypoint object can hold a position that a mob is to reach.
	
	Mobs will only use waypoints if their attack_movement attribute is between 176 and
	191.
	
	When the mob reaches the destination, it will either continue to
	the next waypoint, or stop. Waypoints can be used to set up patrol 
	routes or make more dynamic script behaviours.  
	When a waypoint is reached, a TRIGGER event will be executed.
	]]>
  </description>
  <attribute arch="title" editor="next waypoint" type="string">
  	Name of the next waypoint to go to when this is reached. Use this to
	chain together several waypoints.
  </attribute>
  <attribute arch="slaying" editor="destination map" type="string">
    Path to destination map. Leave blank to use current map.
    You can enter an absolute path, beginning with '/' (for example
    "/peterm/FireTemple/fire1"). It can also be a relative path, not beginning
    with '/' (On the map "/peterm/FireTemple/Fire2" for example I could use the
    relative path "Fire1"). Use relative paths whenever possible! Note that
    upper/lower case must always be set correctly. However, please use lower
    case only. 
  </attribute>
  <attribute arch="hp" editor="destination X" type="int">
    The destinations define the (x, y)-coordinates where the mob should go.
  </attribute>
  <attribute arch="sp" editor="destination Y" type="int">
    The destinations define the (x, y)-coordinates where the mob should go.
  </attribute>
  <attribute arch="wc" editor="pause" type="int">
    Amount of time the mob should wait at this waypoint before proceeding to the next.
  </attribute>
  <attribute arch="grace" editor="trigger distance" type="int">
    How far away from the exact position will the waypoint be considered to be reached.
	Set to 0 to require the mob to be standing on top of the specified destination.
  </attribute>
  <attribute arch="cursed" editor="active" type="bool">
  	The active waypoint is the one the mob is currently using. A mob should
	not have more than one active waypoint.
  </attribute>
</type>

</types>
